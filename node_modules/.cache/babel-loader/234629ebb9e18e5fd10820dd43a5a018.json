{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _ = require(\"lodash\");\n\nconst clc = require(\"cli-color\");\n\nconst marked = require(\"marked\");\n\nconst ora = require(\"ora\");\n\nconst TerminalRenderer = require(\"marked-terminal\");\n\nconst command_1 = require(\"../command\");\n\nconst error_1 = require(\"../error\");\n\nconst getProjectId = require(\"../getProjectId\");\n\nconst extensionsApi = require(\"../extensions/extensionsApi\");\n\nconst extensionsHelper_1 = require(\"../extensions/extensionsHelper\");\n\nconst paramHelper = require(\"../extensions/paramHelper\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst utils = require(\"../utils\");\n\nconst logger = require(\"../logger\");\n\nmarked.setOptions({\n  renderer: new TerminalRenderer()\n});\nexports.default = new command_1.Command(\"ext:configure <extensionInstanceId>\").description(\"configure an existing extension instance\").option(\"--params <paramsFile>\", \"path of params file with .env format.\").before(requirePermissions_1.requirePermissions, [\"firebasemods.instances.update\", \"firebasemods.instances.get\"]).action((instanceId, options) => __awaiter(this, void 0, void 0, function* () {\n  const spinner = ora.default(`Configuring ${clc.bold(instanceId)}. This usually takes 3 to 5 minutes...`);\n\n  try {\n    const projectId = getProjectId(options, false);\n    let existingInstance;\n\n    try {\n      existingInstance = yield extensionsApi.getInstance(projectId, instanceId);\n    } catch (err) {\n      if (err.status === 404) {\n        return utils.reject(`No extension instance ${instanceId} found in project ${projectId}.`, {\n          exit: 1\n        });\n      }\n\n      throw err;\n    }\n\n    const paramSpecWithNewDefaults = paramHelper.getParamsWithCurrentValuesAsDefaults(existingInstance);\n\n    const immutableParams = _.remove(paramSpecWithNewDefaults, param => {\n      return param.immutable || param.param === \"LOCATION\";\n    });\n\n    const params = yield paramHelper.getParams(projectId, paramSpecWithNewDefaults, options.params);\n\n    if (immutableParams.length) {\n      const plural = immutableParams.length > 1;\n      logger.info(`The following param${plural ? \"s are\" : \" is\"} immutable:`);\n\n      for (const _ref of immutableParams) {\n        const param = _ref.param;\n        logger.info(`param: ${param}, value: ${_.get(existingInstance, `config.params.${param}`)}`);\n      }\n\n      logger.info((plural ? \"To set different values for these params\" : \"To set a different value for this param\") + \", uninstall the extension, then install a new instance of this extension.\");\n    }\n\n    spinner.start();\n    const res = yield extensionsApi.configureInstance(projectId, instanceId, params);\n    spinner.stop();\n    utils.logLabeledSuccess(extensionsHelper_1.logPrefix, `successfully configured ${clc.bold(instanceId)}.`);\n    utils.logLabeledBullet(extensionsHelper_1.logPrefix, marked(`You can view your reconfigured instance in the Firebase console: ${utils.consoleUrl(projectId, `/extensions/instances/${instanceId}?tab=config`)}`));\n    return res;\n  } catch (err) {\n    if (spinner.isSpinning) {\n      spinner.fail();\n    }\n\n    if (!(err instanceof error_1.FirebaseError)) {\n      throw new error_1.FirebaseError(`Error occurred while configuring the instance: ${err.message}`, {\n        original: err\n      });\n    }\n\n    throw err;\n  }\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/ext-configure.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","_","require","clc","marked","ora","TerminalRenderer","command_1","error_1","getProjectId","extensionsApi","extensionsHelper_1","paramHelper","requirePermissions_1","utils","logger","setOptions","renderer","default","Command","description","option","before","requirePermissions","action","instanceId","options","spinner","bold","projectId","existingInstance","getInstance","err","status","exit","paramSpecWithNewDefaults","getParamsWithCurrentValuesAsDefaults","immutableParams","remove","param","immutable","params","getParams","length","plural","info","get","start","res","configureInstance","stop","logLabeledSuccess","logPrefix","logLabeledBullet","consoleUrl","isSpinning","fail","FirebaseError","message","original"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst clc = require(\"cli-color\");\nconst marked = require(\"marked\");\nconst ora = require(\"ora\");\nconst TerminalRenderer = require(\"marked-terminal\");\nconst command_1 = require(\"../command\");\nconst error_1 = require(\"../error\");\nconst getProjectId = require(\"../getProjectId\");\nconst extensionsApi = require(\"../extensions/extensionsApi\");\nconst extensionsHelper_1 = require(\"../extensions/extensionsHelper\");\nconst paramHelper = require(\"../extensions/paramHelper\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst utils = require(\"../utils\");\nconst logger = require(\"../logger\");\nmarked.setOptions({\n    renderer: new TerminalRenderer(),\n});\nexports.default = new command_1.Command(\"ext:configure <extensionInstanceId>\")\n    .description(\"configure an existing extension instance\")\n    .option(\"--params <paramsFile>\", \"path of params file with .env format.\")\n    .before(requirePermissions_1.requirePermissions, [\"firebasemods.instances.update\", \"firebasemods.instances.get\"])\n    .action((instanceId, options) => __awaiter(this, void 0, void 0, function* () {\n    const spinner = ora.default(`Configuring ${clc.bold(instanceId)}. This usually takes 3 to 5 minutes...`);\n    try {\n        const projectId = getProjectId(options, false);\n        let existingInstance;\n        try {\n            existingInstance = yield extensionsApi.getInstance(projectId, instanceId);\n        }\n        catch (err) {\n            if (err.status === 404) {\n                return utils.reject(`No extension instance ${instanceId} found in project ${projectId}.`, {\n                    exit: 1,\n                });\n            }\n            throw err;\n        }\n        const paramSpecWithNewDefaults = paramHelper.getParamsWithCurrentValuesAsDefaults(existingInstance);\n        const immutableParams = _.remove(paramSpecWithNewDefaults, (param) => {\n            return param.immutable || param.param === \"LOCATION\";\n        });\n        const params = yield paramHelper.getParams(projectId, paramSpecWithNewDefaults, options.params);\n        if (immutableParams.length) {\n            const plural = immutableParams.length > 1;\n            logger.info(`The following param${plural ? \"s are\" : \" is\"} immutable:`);\n            for (const { param } of immutableParams) {\n                logger.info(`param: ${param}, value: ${_.get(existingInstance, `config.params.${param}`)}`);\n            }\n            logger.info((plural\n                ? \"To set different values for these params\"\n                : \"To set a different value for this param\") +\n                \", uninstall the extension, then install a new instance of this extension.\");\n        }\n        spinner.start();\n        const res = yield extensionsApi.configureInstance(projectId, instanceId, params);\n        spinner.stop();\n        utils.logLabeledSuccess(extensionsHelper_1.logPrefix, `successfully configured ${clc.bold(instanceId)}.`);\n        utils.logLabeledBullet(extensionsHelper_1.logPrefix, marked(`You can view your reconfigured instance in the Firebase console: ${utils.consoleUrl(projectId, `/extensions/instances/${instanceId}?tab=config`)}`));\n        return res;\n    }\n    catch (err) {\n        if (spinner.isSpinning) {\n            spinner.fail();\n        }\n        if (!(err instanceof error_1.FirebaseError)) {\n            throw new error_1.FirebaseError(`Error occurred while configuring the instance: ${err.message}`, {\n                original: err,\n            });\n        }\n        throw err;\n    }\n}));\n"]},"metadata":{},"sourceType":"script"}
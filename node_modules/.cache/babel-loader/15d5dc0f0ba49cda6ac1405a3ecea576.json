{"ast":null,"code":"var path = require('path');\n\nvar fs = require('fs');\n\nvar mkdir = require('../mkdirs');\n\nvar WriteStream = fs.WriteStream;\n\nfunction createOutputStream(file, options) {\n  var dirExists = false;\n  var dir = path.dirname(file);\n  options = options || {}; // if fd is set with an actual number, file is created, hence directory is too\n\n  if (options.fd) {\n    return fs.createWriteStream(file, options);\n  } else {\n    // this hacks the WriteStream constructor from calling open()\n    options.fd = -1;\n  }\n\n  var ws = new WriteStream(file, options);\n  var oldOpen = ws.open;\n\n  ws.open = function () {\n    ws.fd = null; // set actual fd\n\n    if (dirExists) return oldOpen.call(ws); // this only runs once on first write\n\n    mkdir.mkdirs(dir, function (err) {\n      if (err) {\n        ws.destroy();\n        ws.emit('error', err);\n        return;\n      }\n\n      dirExists = true;\n      oldOpen.call(ws);\n    });\n  };\n\n  ws.open();\n  return ws;\n}\n\nmodule.exports = createOutputStream;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/node_modules/fs-extra/lib/streams/create-output-stream.js"],"names":["path","require","fs","mkdir","WriteStream","createOutputStream","file","options","dirExists","dir","dirname","fd","createWriteStream","ws","oldOpen","open","call","mkdirs","err","destroy","emit","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,WAAD,CAAnB;;AACA,IAAIG,WAAW,GAAGF,EAAE,CAACE,WAArB;;AAEA,SAASC,kBAAT,CAA6BC,IAA7B,EAAmCC,OAAnC,EAA4C;AAC1C,MAAIC,SAAS,GAAG,KAAhB;AACA,MAAIC,GAAG,GAAGT,IAAI,CAACU,OAAL,CAAaJ,IAAb,CAAV;AACAC,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB,CAH0C,CAK1C;;AACA,MAAIA,OAAO,CAACI,EAAZ,EAAgB;AACd,WAAOT,EAAE,CAACU,iBAAH,CAAqBN,IAArB,EAA2BC,OAA3B,CAAP;AACD,GAFD,MAEO;AACL;AACAA,IAAAA,OAAO,CAACI,EAAR,GAAa,CAAC,CAAd;AACD;;AAED,MAAIE,EAAE,GAAG,IAAIT,WAAJ,CAAgBE,IAAhB,EAAsBC,OAAtB,CAAT;AAEA,MAAIO,OAAO,GAAGD,EAAE,CAACE,IAAjB;;AACAF,EAAAA,EAAE,CAACE,IAAH,GAAU,YAAY;AACpBF,IAAAA,EAAE,CAACF,EAAH,GAAQ,IAAR,CADoB,CACP;;AACb,QAAIH,SAAJ,EAAe,OAAOM,OAAO,CAACE,IAAR,CAAaH,EAAb,CAAP,CAFK,CAIpB;;AACAV,IAAAA,KAAK,CAACc,MAAN,CAAaR,GAAb,EAAkB,UAAUS,GAAV,EAAe;AAC/B,UAAIA,GAAJ,EAAS;AACPL,QAAAA,EAAE,CAACM,OAAH;AACAN,QAAAA,EAAE,CAACO,IAAH,CAAQ,OAAR,EAAiBF,GAAjB;AACA;AACD;;AACDV,MAAAA,SAAS,GAAG,IAAZ;AACAM,MAAAA,OAAO,CAACE,IAAR,CAAaH,EAAb;AACD,KARD;AASD,GAdD;;AAgBAA,EAAAA,EAAE,CAACE,IAAH;AAEA,SAAOF,EAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBjB,kBAAjB","sourcesContent":["var path = require('path')\nvar fs = require('fs')\nvar mkdir = require('../mkdirs')\nvar WriteStream = fs.WriteStream\n\nfunction createOutputStream (file, options) {\n  var dirExists = false\n  var dir = path.dirname(file)\n  options = options || {}\n\n  // if fd is set with an actual number, file is created, hence directory is too\n  if (options.fd) {\n    return fs.createWriteStream(file, options)\n  } else {\n    // this hacks the WriteStream constructor from calling open()\n    options.fd = -1\n  }\n\n  var ws = new WriteStream(file, options)\n\n  var oldOpen = ws.open\n  ws.open = function () {\n    ws.fd = null // set actual fd\n    if (dirExists) return oldOpen.call(ws)\n\n    // this only runs once on first write\n    mkdir.mkdirs(dir, function (err) {\n      if (err) {\n        ws.destroy()\n        ws.emit('error', err)\n        return\n      }\n      dirExists = true\n      oldOpen.call(ws)\n    })\n  }\n\n  ws.open()\n\n  return ws\n}\n\nmodule.exports = createOutputStream\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst ora = require(\"ora\");\n\nconst fs = require(\"fs-extra\");\n\nconst command_1 = require(\"../command\");\n\nconst apps_1 = require(\"../management/apps\");\n\nconst projects_1 = require(\"../management/projects\");\n\nconst error_1 = require(\"../error\");\n\nconst requireAuth = require(\"../requireAuth\");\n\nconst logger = require(\"../logger\");\n\nconst prompt_1 = require(\"../prompt\");\n\nfunction selectAppInteractively(projectId, appPlatform) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!projectId) {\n      throw new error_1.FirebaseError(\"Project ID must not be empty.\");\n    }\n\n    const apps = yield apps_1.listFirebaseApps(projectId, appPlatform);\n\n    if (apps.length === 0) {\n      throw new error_1.FirebaseError(`There are no ${appPlatform === apps_1.AppPlatform.ANY ? \"\" : appPlatform + \" \"}apps ` + \"associated with this Firebase project\");\n    }\n\n    const choices = apps.map(app => {\n      return {\n        name: `${app.displayName || app.bundleId || app.packageName}` + ` - ${app.appId} (${app.platform})`,\n        value: app\n      };\n    });\n    return yield prompt_1.promptOnce({\n      type: \"list\",\n      name: \"id\",\n      message: `Select the ${appPlatform === apps_1.AppPlatform.ANY ? \"\" : appPlatform + \" \"}` + \"app to get the configuration data:\",\n      choices\n    });\n  });\n}\n\nmodule.exports = new command_1.Command(\"apps:sdkconfig [platform] [appId]\").description(\"print the Google Services config of a Firebase app. \" + \"[platform] can be IOS, ANDROID or WEB (case insensitive)\").option(\"-o, --out [file]\", \"(optional) write config output to a file\").before(requireAuth).action((platform = \"\", appId = \"\", options) => __awaiter(this, void 0, void 0, function* () {\n  let appPlatform = apps_1.getAppPlatform(platform);\n\n  if (!appId) {\n    if (options.nonInteractive) {\n      throw new error_1.FirebaseError(\"App ID must not be empty.\");\n    }\n\n    const _ref = yield projects_1.getOrPromptProject(options),\n          projectId = _ref.projectId;\n\n    const appMetadata = yield selectAppInteractively(projectId, appPlatform);\n    appId = appMetadata.appId;\n    appPlatform = appMetadata.platform;\n  }\n\n  let configData;\n  const spinner = ora(`Downloading configuration data of your Firebase ${appPlatform} app`).start();\n\n  try {\n    configData = yield apps_1.getAppConfig(appId, appPlatform);\n  } catch (err) {\n    spinner.fail();\n    throw err;\n  }\n\n  spinner.succeed();\n\n  if (options.out === undefined) {\n    logger.info(configData.fileContents);\n    return configData;\n  }\n\n  const shouldUseDefaultFilename = options.out === true || options.out === \"\";\n  const filename = shouldUseDefaultFilename ? configData.fileName : options.out;\n\n  if (fs.existsSync(filename)) {\n    if (options.nonInteractive) {\n      throw new error_1.FirebaseError(`${filename} already exists`);\n    }\n\n    const overwrite = yield prompt_1.promptOnce({\n      type: \"confirm\",\n      default: false,\n      message: `${filename} already exists. Do you want to overwrite?`\n    });\n\n    if (!overwrite) {\n      return configData;\n    }\n  }\n\n  fs.writeFileSync(filename, configData.fileContents);\n  logger.info(`App configuration is written in ${filename}`);\n  return configData;\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/apps-sdkconfig.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","ora","require","fs","command_1","apps_1","projects_1","error_1","requireAuth","logger","prompt_1","selectAppInteractively","projectId","appPlatform","FirebaseError","apps","listFirebaseApps","length","AppPlatform","ANY","choices","map","app","name","displayName","bundleId","packageName","appId","platform","promptOnce","type","message","module","Command","description","option","before","action","options","getAppPlatform","nonInteractive","getOrPromptProject","appMetadata","configData","spinner","start","getAppConfig","err","fail","succeed","out","undefined","info","fileContents","shouldUseDefaultFilename","filename","fileName","existsSync","overwrite","default","writeFileSync"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ora = require(\"ora\");\nconst fs = require(\"fs-extra\");\nconst command_1 = require(\"../command\");\nconst apps_1 = require(\"../management/apps\");\nconst projects_1 = require(\"../management/projects\");\nconst error_1 = require(\"../error\");\nconst requireAuth = require(\"../requireAuth\");\nconst logger = require(\"../logger\");\nconst prompt_1 = require(\"../prompt\");\nfunction selectAppInteractively(projectId, appPlatform) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!projectId) {\n            throw new error_1.FirebaseError(\"Project ID must not be empty.\");\n        }\n        const apps = yield apps_1.listFirebaseApps(projectId, appPlatform);\n        if (apps.length === 0) {\n            throw new error_1.FirebaseError(`There are no ${appPlatform === apps_1.AppPlatform.ANY ? \"\" : appPlatform + \" \"}apps ` +\n                \"associated with this Firebase project\");\n        }\n        const choices = apps.map((app) => {\n            return {\n                name: `${app.displayName || app.bundleId || app.packageName}` +\n                    ` - ${app.appId} (${app.platform})`,\n                value: app,\n            };\n        });\n        return yield prompt_1.promptOnce({\n            type: \"list\",\n            name: \"id\",\n            message: `Select the ${appPlatform === apps_1.AppPlatform.ANY ? \"\" : appPlatform + \" \"}` +\n                \"app to get the configuration data:\",\n            choices,\n        });\n    });\n}\nmodule.exports = new command_1.Command(\"apps:sdkconfig [platform] [appId]\")\n    .description(\"print the Google Services config of a Firebase app. \" +\n    \"[platform] can be IOS, ANDROID or WEB (case insensitive)\")\n    .option(\"-o, --out [file]\", \"(optional) write config output to a file\")\n    .before(requireAuth)\n    .action((platform = \"\", appId = \"\", options) => __awaiter(this, void 0, void 0, function* () {\n    let appPlatform = apps_1.getAppPlatform(platform);\n    if (!appId) {\n        if (options.nonInteractive) {\n            throw new error_1.FirebaseError(\"App ID must not be empty.\");\n        }\n        const { projectId } = yield projects_1.getOrPromptProject(options);\n        const appMetadata = yield selectAppInteractively(projectId, appPlatform);\n        appId = appMetadata.appId;\n        appPlatform = appMetadata.platform;\n    }\n    let configData;\n    const spinner = ora(`Downloading configuration data of your Firebase ${appPlatform} app`).start();\n    try {\n        configData = yield apps_1.getAppConfig(appId, appPlatform);\n    }\n    catch (err) {\n        spinner.fail();\n        throw err;\n    }\n    spinner.succeed();\n    if (options.out === undefined) {\n        logger.info(configData.fileContents);\n        return configData;\n    }\n    const shouldUseDefaultFilename = options.out === true || options.out === \"\";\n    const filename = shouldUseDefaultFilename ? configData.fileName : options.out;\n    if (fs.existsSync(filename)) {\n        if (options.nonInteractive) {\n            throw new error_1.FirebaseError(`${filename} already exists`);\n        }\n        const overwrite = yield prompt_1.promptOnce({\n            type: \"confirm\",\n            default: false,\n            message: `${filename} already exists. Do you want to overwrite?`,\n        });\n        if (!overwrite) {\n            return configData;\n        }\n    }\n    fs.writeFileSync(filename, configData.fileContents);\n    logger.info(`App configuration is written in ${filename}`);\n    return configData;\n}));\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar clc = require(\"cli-color\");\n\nvar cloudfunctions = require(\"./gcp/cloudfunctions\");\n\nvar cloudscheduler = require(\"./gcp/cloudscheduler\");\n\nvar FirebaseError = require(\"./error\");\n\nvar helper = require(\"./functionsDeployHelper\");\n\nvar logger = require(\"./logger\");\n\nvar pubsub = require(\"./gcp/pubsub\");\n\nvar track = require(\"./track\");\n\nvar utils = require(\"./utils\");\n\nvar deletes = [];\nvar failedDeployments = 0;\n\nvar printSuccess = function (op) {\n  utils.logSuccess(clc.bold.green(\"functions[\" + helper.getFunctionLabel(op.func) + \"]: \") + \"Successful deletion. \");\n};\n\nvar printFail = function (op) {\n  failedDeployments += 1;\n  utils.logWarning(clc.bold.yellow(\"functions[\" + helper.getFunctionLabel(op.func) + \"]: \") + \"Deployment error.\");\n\n  if (op.error.code === 8) {\n    logger.debug(op.error.message);\n    logger.info(\"You have exceeded your deployment quota, please delete your functions in smaller batches \" + \"and wait a few minutes before trying again.\");\n  } else {\n    logger.info(op.error.message);\n  }\n};\n\nvar printTooManyOps = function (projectId) {\n  utils.logWarning(clc.bold.yellow(\"functions:\") + \" too many functions are being deleted at once, cannot poll status.\");\n  logger.info(\"In a few minutes, you can check status at \" + utils.consoleUrl(projectId, \"/functions/logs\"));\n  deletes = [];\n};\n\nmodule.exports = function (functionsToDelete, projectId, appEngineLocation) {\n  deletes = _.map(functionsToDelete, function (name) {\n    const scheduleName = helper.getScheduleName(name, appEngineLocation);\n    const topicName = helper.getTopicName(name);\n    const functionName = helper.getFunctionName(name);\n    return {\n      name: name,\n      retryFunction: function () {\n        return cloudscheduler.deleteJob(scheduleName).catch(err => {\n          if (err.context.response.statusCode != 404 && err.context.response.statusCode != 403) {\n            throw new FirebaseError(`Failed to delete schedule for ${functionName} with status ${err.status}`, err);\n          }\n        }).then(() => {\n          return pubsub.deleteTopic(topicName);\n        }).catch(err => {\n          if (err.context.response.statusCode != 404 && err.context.response.statusCode != 403) {\n            throw new FirebaseError(`Failed to delete topic for ${functionName} with status ${err.status}`, err);\n          }\n        }).then(() => {\n          return cloudfunctions.delete({\n            projectId: projectId,\n            region: helper.getRegion(name),\n            functionName\n          });\n        });\n      }\n    };\n  });\n  return utils.promiseAllSettled(_.map(deletes, function (op) {\n    return op.retryFunction().then(function (res) {\n      return _.merge(op, res);\n    });\n  })).then(function (operations) {\n    var successfulCalls = _.chain(operations).filter({\n      state: \"fulfilled\"\n    }).map(\"value\").value();\n\n    var failedCalls = _.chain(operations).filter({\n      state: \"rejected\"\n    }).map(\"reason\").value();\n\n    failedDeployments += failedCalls.length;\n    return helper.pollDeploys(successfulCalls, printSuccess, printFail, printTooManyOps, projectId).then(function () {\n      if (deletes.length > 0) {\n        track(\"Functions Deploy (Result)\", \"failure\", failedDeployments);\n        track(\"Functions Deploy (Result)\", \"success\", deletes.length - failedDeployments);\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/functionsDelete.js"],"names":["_","require","clc","cloudfunctions","cloudscheduler","FirebaseError","helper","logger","pubsub","track","utils","deletes","failedDeployments","printSuccess","op","logSuccess","bold","green","getFunctionLabel","func","printFail","logWarning","yellow","error","code","debug","message","info","printTooManyOps","projectId","consoleUrl","module","exports","functionsToDelete","appEngineLocation","map","name","scheduleName","getScheduleName","topicName","getTopicName","functionName","getFunctionName","retryFunction","deleteJob","catch","err","context","response","statusCode","status","then","deleteTopic","delete","region","getRegion","promiseAllSettled","res","merge","operations","successfulCalls","chain","filter","state","value","failedCalls","length","pollDeploys"],"mappings":"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","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar clc = require(\"cli-color\");\nvar cloudfunctions = require(\"./gcp/cloudfunctions\");\nvar cloudscheduler = require(\"./gcp/cloudscheduler\");\nvar FirebaseError = require(\"./error\");\nvar helper = require(\"./functionsDeployHelper\");\nvar logger = require(\"./logger\");\nvar pubsub = require(\"./gcp/pubsub\");\nvar track = require(\"./track\");\nvar utils = require(\"./utils\");\nvar deletes = [];\nvar failedDeployments = 0;\nvar printSuccess = function (op) {\n    utils.logSuccess(clc.bold.green(\"functions[\" + helper.getFunctionLabel(op.func) + \"]: \") +\n        \"Successful deletion. \");\n};\nvar printFail = function (op) {\n    failedDeployments += 1;\n    utils.logWarning(clc.bold.yellow(\"functions[\" + helper.getFunctionLabel(op.func) + \"]: \") + \"Deployment error.\");\n    if (op.error.code === 8) {\n        logger.debug(op.error.message);\n        logger.info(\"You have exceeded your deployment quota, please delete your functions in smaller batches \" +\n            \"and wait a few minutes before trying again.\");\n    }\n    else {\n        logger.info(op.error.message);\n    }\n};\nvar printTooManyOps = function (projectId) {\n    utils.logWarning(clc.bold.yellow(\"functions:\") +\n        \" too many functions are being deleted at once, cannot poll status.\");\n    logger.info(\"In a few minutes, you can check status at \" + utils.consoleUrl(projectId, \"/functions/logs\"));\n    deletes = [];\n};\nmodule.exports = function (functionsToDelete, projectId, appEngineLocation) {\n    deletes = _.map(functionsToDelete, function (name) {\n        const scheduleName = helper.getScheduleName(name, appEngineLocation);\n        const topicName = helper.getTopicName(name);\n        const functionName = helper.getFunctionName(name);\n        return {\n            name: name,\n            retryFunction: function () {\n                return cloudscheduler\n                    .deleteJob(scheduleName)\n                    .catch((err) => {\n                    if (err.context.response.statusCode != 404 && err.context.response.statusCode != 403) {\n                        throw new FirebaseError(`Failed to delete schedule for ${functionName} with status ${err.status}`, err);\n                    }\n                })\n                    .then(() => {\n                    return pubsub.deleteTopic(topicName);\n                })\n                    .catch((err) => {\n                    if (err.context.response.statusCode != 404 && err.context.response.statusCode != 403) {\n                        throw new FirebaseError(`Failed to delete topic for ${functionName} with status ${err.status}`, err);\n                    }\n                })\n                    .then(() => {\n                    return cloudfunctions.delete({\n                        projectId: projectId,\n                        region: helper.getRegion(name),\n                        functionName,\n                    });\n                });\n            },\n        };\n    });\n    return utils\n        .promiseAllSettled(_.map(deletes, function (op) {\n        return op.retryFunction().then(function (res) {\n            return _.merge(op, res);\n        });\n    }))\n        .then(function (operations) {\n        var successfulCalls = _.chain(operations)\n            .filter({ state: \"fulfilled\" })\n            .map(\"value\")\n            .value();\n        var failedCalls = _.chain(operations)\n            .filter({ state: \"rejected\" })\n            .map(\"reason\")\n            .value();\n        failedDeployments += failedCalls.length;\n        return helper\n            .pollDeploys(successfulCalls, printSuccess, printFail, printTooManyOps, projectId)\n            .then(function () {\n            if (deletes.length > 0) {\n                track(\"Functions Deploy (Result)\", \"failure\", failedDeployments);\n                track(\"Functions Deploy (Result)\", \"success\", deletes.length - failedDeployments);\n            }\n        });\n    });\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar clc = require(\"cli-color\");\n\nvar cjson = require(\"cjson\");\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar detectProjectRoot = require(\"./detectProjectRoot\");\n\nvar _require = require(\"./error\"),\n    FirebaseError = _require.FirebaseError;\n\nvar fsutils = require(\"./fsutils\");\n\nvar utils = require(\"./utils\");\n\nvar TARGET_TYPES = {\n  storage: {\n    resource: \"bucket\",\n    exclusive: true\n  },\n  database: {\n    resource: \"instance\",\n    exclusive: true\n  },\n  hosting: {\n    resource: \"site\",\n    exclusive: true\n  }\n};\n\nvar RC = function (rcpath, data) {\n  this.path = rcpath;\n  this.data = data || {};\n};\n\nRC.prototype = {\n  set: function (key, value) {\n    return _.set(this.data, key, value);\n  },\n  unset: function (key) {\n    return _.unset(this.data, key);\n  },\n  get: function (key, fallback) {\n    return _.get(this.data, key, fallback);\n  },\n  addProjectAlias: function (alias, project) {\n    this.set([\"projects\", alias], project);\n    return this.save();\n  },\n  removeProjectAlias: function (alias) {\n    this.unset([\"projects\", alias]);\n    return this.save();\n  },\n\n  get hasProjects() {\n    return _.size(this.data.projects) > 0;\n  },\n\n  get projects() {\n    return this.get(\"projects\", {});\n  },\n\n  targets: function (project, type) {\n    return this.get([\"targets\", project, type], {});\n  },\n  target: function (project, type, name) {\n    return this.get([\"targets\", project, type, name], []);\n  },\n  applyTarget: function (project, type, targetName, resources) {\n    if (!TARGET_TYPES[type]) {\n      throw new FirebaseError(\"Unrecognized target type \" + clc.bold(type) + \". Must be one of \" + _.keys(TARGET_TYPES).join(\", \"), {\n        code: 1\n      });\n    }\n\n    if (_.isString(resources)) {\n      resources = [resources];\n    }\n\n    var changed = [];\n    resources.forEach(function (resource) {\n      var cur = this.findTarget(project, type, resource);\n\n      if (cur && cur !== targetName) {\n        this.unsetTargetResource(project, type, cur, resource);\n        changed.push({\n          resource: resource,\n          target: cur\n        });\n      }\n    }.bind(this));\n    var existing = this.get([\"targets\", project, type, targetName], []);\n\n    var list = _.uniq(existing.concat(resources)).sort();\n\n    this.set([\"targets\", project, type, targetName], list);\n    this.save();\n    return changed;\n  },\n  removeTarget: function (project, type, resource) {\n    var name = this.findTarget(project, type, resource);\n\n    if (!name) {\n      return null;\n    }\n\n    this.unsetTargetResource(project, type, name, resource);\n    this.save();\n    return name;\n  },\n  clearTarget: function (project, type, name) {\n    var exists = this.target(project, type, name).length > 0;\n\n    if (!exists) {\n      return false;\n    }\n\n    this.unset([\"targets\", project, type, name]);\n    this.save();\n    return true;\n  },\n  findTarget: function (project, type, resource) {\n    var targets = this.get([\"targets\", project, type]);\n\n    for (var targetName in targets) {\n      if (_.includes(targets[targetName], resource)) {\n        return targetName;\n      }\n    }\n\n    return null;\n  },\n  unsetTargetResource: function (project, type, name, resource) {\n    var targetPath = [\"targets\", project, type, name];\n    var updatedResources = this.get(targetPath, []).filter(function (r) {\n      return r !== resource;\n    });\n\n    if (updatedResources.length) {\n      this.set(targetPath, updatedResources);\n    } else {\n      this.unset(targetPath);\n    }\n  },\n  requireTarget: function (project, type, name) {\n    var target = this.target(project, type, name);\n\n    if (!target.length) {\n      throw new FirebaseError(\"Deploy target \" + clc.bold(name) + \" not configured for project \" + clc.bold(project) + \". Configure with:\\n\\n  firebase target:apply \" + type + \" \" + name + \" <resources...>\", {\n        exit: 1\n      });\n    }\n\n    return target;\n  },\n  save: function () {\n    if (this.path) {\n      fs.writeFileSync(this.path, JSON.stringify(this.data, null, 2), {\n        encoding: \"utf8\"\n      });\n      return true;\n    }\n\n    return false;\n  }\n};\n\nRC.loadFile = function (rcpath) {\n  var data = {};\n\n  if (fsutils.fileExistsSync(rcpath)) {\n    try {\n      data = cjson.load(rcpath);\n    } catch (e) {\n      utils.logWarning(\"JSON error trying to load \" + clc.bold(rcpath));\n    }\n  }\n\n  return new RC(rcpath, data);\n};\n\nRC.load = function (cwd) {\n  cwd = cwd || process.cwd();\n  var dir = detectProjectRoot(cwd);\n  var potential = path.resolve(dir || cwd, \"./.firebaserc\");\n  return RC.loadFile(potential);\n};\n\nmodule.exports = RC;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/rc.js"],"names":["_","require","clc","cjson","fs","path","detectProjectRoot","FirebaseError","fsutils","utils","TARGET_TYPES","storage","resource","exclusive","database","hosting","RC","rcpath","data","prototype","set","key","value","unset","get","fallback","addProjectAlias","alias","project","save","removeProjectAlias","hasProjects","size","projects","targets","type","target","name","applyTarget","targetName","resources","bold","keys","join","code","isString","changed","forEach","cur","findTarget","unsetTargetResource","push","bind","existing","list","uniq","concat","sort","removeTarget","clearTarget","exists","length","includes","targetPath","updatedResources","filter","r","requireTarget","exit","writeFileSync","JSON","stringify","encoding","loadFile","fileExistsSync","load","e","logWarning","cwd","process","dir","potential","resolve","module","exports"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIG,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIK,iBAAiB,GAAGL,OAAO,CAAC,qBAAD,CAA/B;;eACwBA,OAAO,CAAC,SAAD,C;IAAzBM,a,YAAAA,a;;AACN,IAAIC,OAAO,GAAGP,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIQ,KAAK,GAAGR,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIS,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAQ,EAAE,QAAZ;AAAsBC,IAAAA,SAAS,EAAE;AAAjC,GADM;AAEfC,EAAAA,QAAQ,EAAE;AAAEF,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,SAAS,EAAE;AAAnC,GAFK;AAGfE,EAAAA,OAAO,EAAE;AAAEH,IAAAA,QAAQ,EAAE,MAAZ;AAAoBC,IAAAA,SAAS,EAAE;AAA/B;AAHM,CAAnB;;AAKA,IAAIG,EAAE,GAAG,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,OAAKb,IAAL,GAAYY,MAAZ;AACA,OAAKC,IAAL,GAAYA,IAAI,IAAI,EAApB;AACH,CAHD;;AAIAF,EAAE,CAACG,SAAH,GAAe;AACXC,EAAAA,GAAG,EAAE,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACvB,WAAOtB,CAAC,CAACoB,GAAF,CAAM,KAAKF,IAAX,EAAiBG,GAAjB,EAAsBC,KAAtB,CAAP;AACH,GAHU;AAIXC,EAAAA,KAAK,EAAE,UAAUF,GAAV,EAAe;AAClB,WAAOrB,CAAC,CAACuB,KAAF,CAAQ,KAAKL,IAAb,EAAmBG,GAAnB,CAAP;AACH,GANU;AAOXG,EAAAA,GAAG,EAAE,UAAUH,GAAV,EAAeI,QAAf,EAAyB;AAC1B,WAAOzB,CAAC,CAACwB,GAAF,CAAM,KAAKN,IAAX,EAAiBG,GAAjB,EAAsBI,QAAtB,CAAP;AACH,GATU;AAUXC,EAAAA,eAAe,EAAE,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AACvC,SAAKR,GAAL,CAAS,CAAC,UAAD,EAAaO,KAAb,CAAT,EAA8BC,OAA9B;AACA,WAAO,KAAKC,IAAL,EAAP;AACH,GAbU;AAcXC,EAAAA,kBAAkB,EAAE,UAAUH,KAAV,EAAiB;AACjC,SAAKJ,KAAL,CAAW,CAAC,UAAD,EAAaI,KAAb,CAAX;AACA,WAAO,KAAKE,IAAL,EAAP;AACH,GAjBU;;AAkBX,MAAIE,WAAJ,GAAkB;AACd,WAAO/B,CAAC,CAACgC,IAAF,CAAO,KAAKd,IAAL,CAAUe,QAAjB,IAA6B,CAApC;AACH,GApBU;;AAqBX,MAAIA,QAAJ,GAAe;AACX,WAAO,KAAKT,GAAL,CAAS,UAAT,EAAqB,EAArB,CAAP;AACH,GAvBU;;AAwBXU,EAAAA,OAAO,EAAE,UAAUN,OAAV,EAAmBO,IAAnB,EAAyB;AAC9B,WAAO,KAAKX,GAAL,CAAS,CAAC,SAAD,EAAYI,OAAZ,EAAqBO,IAArB,CAAT,EAAqC,EAArC,CAAP;AACH,GA1BU;AA2BXC,EAAAA,MAAM,EAAE,UAAUR,OAAV,EAAmBO,IAAnB,EAAyBE,IAAzB,EAA+B;AACnC,WAAO,KAAKb,GAAL,CAAS,CAAC,SAAD,EAAYI,OAAZ,EAAqBO,IAArB,EAA2BE,IAA3B,CAAT,EAA2C,EAA3C,CAAP;AACH,GA7BU;AA8BXC,EAAAA,WAAW,EAAE,UAAUV,OAAV,EAAmBO,IAAnB,EAAyBI,UAAzB,EAAqCC,SAArC,EAAgD;AACzD,QAAI,CAAC9B,YAAY,CAACyB,IAAD,CAAjB,EAAyB;AACrB,YAAM,IAAI5B,aAAJ,CAAkB,8BACpBL,GAAG,CAACuC,IAAJ,CAASN,IAAT,CADoB,GAEpB,mBAFoB,GAGpBnC,CAAC,CAAC0C,IAAF,CAAOhC,YAAP,EAAqBiC,IAArB,CAA0B,IAA1B,CAHE,EAG+B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAH/B,CAAN;AAIH;;AACD,QAAI5C,CAAC,CAAC6C,QAAF,CAAWL,SAAX,CAAJ,EAA2B;AACvBA,MAAAA,SAAS,GAAG,CAACA,SAAD,CAAZ;AACH;;AACD,QAAIM,OAAO,GAAG,EAAd;AACAN,IAAAA,SAAS,CAACO,OAAV,CAAkB,UAAUnC,QAAV,EAAoB;AAClC,UAAIoC,GAAG,GAAG,KAAKC,UAAL,CAAgBrB,OAAhB,EAAyBO,IAAzB,EAA+BvB,QAA/B,CAAV;;AACA,UAAIoC,GAAG,IAAIA,GAAG,KAAKT,UAAnB,EAA+B;AAC3B,aAAKW,mBAAL,CAAyBtB,OAAzB,EAAkCO,IAAlC,EAAwCa,GAAxC,EAA6CpC,QAA7C;AACAkC,QAAAA,OAAO,CAACK,IAAR,CAAa;AAAEvC,UAAAA,QAAQ,EAAEA,QAAZ;AAAsBwB,UAAAA,MAAM,EAAEY;AAA9B,SAAb;AACH;AACJ,KANiB,CAMhBI,IANgB,CAMX,IANW,CAAlB;AAOA,QAAIC,QAAQ,GAAG,KAAK7B,GAAL,CAAS,CAAC,SAAD,EAAYI,OAAZ,EAAqBO,IAArB,EAA2BI,UAA3B,CAAT,EAAiD,EAAjD,CAAf;;AACA,QAAIe,IAAI,GAAGtD,CAAC,CAACuD,IAAF,CAAOF,QAAQ,CAACG,MAAT,CAAgBhB,SAAhB,CAAP,EAAmCiB,IAAnC,EAAX;;AACA,SAAKrC,GAAL,CAAS,CAAC,SAAD,EAAYQ,OAAZ,EAAqBO,IAArB,EAA2BI,UAA3B,CAAT,EAAiDe,IAAjD;AACA,SAAKzB,IAAL;AACA,WAAOiB,OAAP;AACH,GArDU;AAsDXY,EAAAA,YAAY,EAAE,UAAU9B,OAAV,EAAmBO,IAAnB,EAAyBvB,QAAzB,EAAmC;AAC7C,QAAIyB,IAAI,GAAG,KAAKY,UAAL,CAAgBrB,OAAhB,EAAyBO,IAAzB,EAA+BvB,QAA/B,CAAX;;AACA,QAAI,CAACyB,IAAL,EAAW;AACP,aAAO,IAAP;AACH;;AACD,SAAKa,mBAAL,CAAyBtB,OAAzB,EAAkCO,IAAlC,EAAwCE,IAAxC,EAA8CzB,QAA9C;AACA,SAAKiB,IAAL;AACA,WAAOQ,IAAP;AACH,GA9DU;AA+DXsB,EAAAA,WAAW,EAAE,UAAU/B,OAAV,EAAmBO,IAAnB,EAAyBE,IAAzB,EAA+B;AACxC,QAAIuB,MAAM,GAAG,KAAKxB,MAAL,CAAYR,OAAZ,EAAqBO,IAArB,EAA2BE,IAA3B,EAAiCwB,MAAjC,GAA0C,CAAvD;;AACA,QAAI,CAACD,MAAL,EAAa;AACT,aAAO,KAAP;AACH;;AACD,SAAKrC,KAAL,CAAW,CAAC,SAAD,EAAYK,OAAZ,EAAqBO,IAArB,EAA2BE,IAA3B,CAAX;AACA,SAAKR,IAAL;AACA,WAAO,IAAP;AACH,GAvEU;AAwEXoB,EAAAA,UAAU,EAAE,UAAUrB,OAAV,EAAmBO,IAAnB,EAAyBvB,QAAzB,EAAmC;AAC3C,QAAIsB,OAAO,GAAG,KAAKV,GAAL,CAAS,CAAC,SAAD,EAAYI,OAAZ,EAAqBO,IAArB,CAAT,CAAd;;AACA,SAAK,IAAII,UAAT,IAAuBL,OAAvB,EAAgC;AAC5B,UAAIlC,CAAC,CAAC8D,QAAF,CAAW5B,OAAO,CAACK,UAAD,CAAlB,EAAgC3B,QAAhC,CAAJ,EAA+C;AAC3C,eAAO2B,UAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAhFU;AAiFXW,EAAAA,mBAAmB,EAAE,UAAUtB,OAAV,EAAmBO,IAAnB,EAAyBE,IAAzB,EAA+BzB,QAA/B,EAAyC;AAC1D,QAAImD,UAAU,GAAG,CAAC,SAAD,EAAYnC,OAAZ,EAAqBO,IAArB,EAA2BE,IAA3B,CAAjB;AACA,QAAI2B,gBAAgB,GAAG,KAAKxC,GAAL,CAASuC,UAAT,EAAqB,EAArB,EAAyBE,MAAzB,CAAgC,UAAUC,CAAV,EAAa;AAChE,aAAOA,CAAC,KAAKtD,QAAb;AACH,KAFsB,CAAvB;;AAGA,QAAIoD,gBAAgB,CAACH,MAArB,EAA6B;AACzB,WAAKzC,GAAL,CAAS2C,UAAT,EAAqBC,gBAArB;AACH,KAFD,MAGK;AACD,WAAKzC,KAAL,CAAWwC,UAAX;AACH;AACJ,GA5FU;AA6FXI,EAAAA,aAAa,EAAE,UAAUvC,OAAV,EAAmBO,IAAnB,EAAyBE,IAAzB,EAA+B;AAC1C,QAAID,MAAM,GAAG,KAAKA,MAAL,CAAYR,OAAZ,EAAqBO,IAArB,EAA2BE,IAA3B,CAAb;;AACA,QAAI,CAACD,MAAM,CAACyB,MAAZ,EAAoB;AAChB,YAAM,IAAItD,aAAJ,CAAkB,mBACpBL,GAAG,CAACuC,IAAJ,CAASJ,IAAT,CADoB,GAEpB,8BAFoB,GAGpBnC,GAAG,CAACuC,IAAJ,CAASb,OAAT,CAHoB,GAIpB,+CAJoB,GAKpBO,IALoB,GAMpB,GANoB,GAOpBE,IAPoB,GAQpB,iBARE,EAQiB;AAAE+B,QAAAA,IAAI,EAAE;AAAR,OARjB,CAAN;AASH;;AACD,WAAOhC,MAAP;AACH,GA3GU;AA4GXP,EAAAA,IAAI,EAAE,YAAY;AACd,QAAI,KAAKxB,IAAT,EAAe;AACXD,MAAAA,EAAE,CAACiE,aAAH,CAAiB,KAAKhE,IAAtB,EAA4BiE,IAAI,CAACC,SAAL,CAAe,KAAKrD,IAApB,EAA0B,IAA1B,EAAgC,CAAhC,CAA5B,EAAgE;AAC5DsD,QAAAA,QAAQ,EAAE;AADkD,OAAhE;AAGA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;AApHU,CAAf;;AAsHAxD,EAAE,CAACyD,QAAH,GAAc,UAAUxD,MAAV,EAAkB;AAC5B,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAIV,OAAO,CAACkE,cAAR,CAAuBzD,MAAvB,CAAJ,EAAoC;AAChC,QAAI;AACAC,MAAAA,IAAI,GAAGf,KAAK,CAACwE,IAAN,CAAW1D,MAAX,CAAP;AACH,KAFD,CAGA,OAAO2D,CAAP,EAAU;AACNnE,MAAAA,KAAK,CAACoE,UAAN,CAAiB,+BAA+B3E,GAAG,CAACuC,IAAJ,CAASxB,MAAT,CAAhD;AACH;AACJ;;AACD,SAAO,IAAID,EAAJ,CAAOC,MAAP,EAAeC,IAAf,CAAP;AACH,CAXD;;AAYAF,EAAE,CAAC2D,IAAH,GAAU,UAAUG,GAAV,EAAe;AACrBA,EAAAA,GAAG,GAAGA,GAAG,IAAIC,OAAO,CAACD,GAAR,EAAb;AACA,MAAIE,GAAG,GAAG1E,iBAAiB,CAACwE,GAAD,CAA3B;AACA,MAAIG,SAAS,GAAG5E,IAAI,CAAC6E,OAAL,CAAaF,GAAG,IAAIF,GAApB,EAAyB,eAAzB,CAAhB;AACA,SAAO9D,EAAE,CAACyD,QAAH,CAAYQ,SAAZ,CAAP;AACH,CALD;;AAMAE,MAAM,CAACC,OAAP,GAAiBpE,EAAjB","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar clc = require(\"cli-color\");\nvar cjson = require(\"cjson\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar detectProjectRoot = require(\"./detectProjectRoot\");\nvar { FirebaseError } = require(\"./error\");\nvar fsutils = require(\"./fsutils\");\nvar utils = require(\"./utils\");\nvar TARGET_TYPES = {\n    storage: { resource: \"bucket\", exclusive: true },\n    database: { resource: \"instance\", exclusive: true },\n    hosting: { resource: \"site\", exclusive: true },\n};\nvar RC = function (rcpath, data) {\n    this.path = rcpath;\n    this.data = data || {};\n};\nRC.prototype = {\n    set: function (key, value) {\n        return _.set(this.data, key, value);\n    },\n    unset: function (key) {\n        return _.unset(this.data, key);\n    },\n    get: function (key, fallback) {\n        return _.get(this.data, key, fallback);\n    },\n    addProjectAlias: function (alias, project) {\n        this.set([\"projects\", alias], project);\n        return this.save();\n    },\n    removeProjectAlias: function (alias) {\n        this.unset([\"projects\", alias]);\n        return this.save();\n    },\n    get hasProjects() {\n        return _.size(this.data.projects) > 0;\n    },\n    get projects() {\n        return this.get(\"projects\", {});\n    },\n    targets: function (project, type) {\n        return this.get([\"targets\", project, type], {});\n    },\n    target: function (project, type, name) {\n        return this.get([\"targets\", project, type, name], []);\n    },\n    applyTarget: function (project, type, targetName, resources) {\n        if (!TARGET_TYPES[type]) {\n            throw new FirebaseError(\"Unrecognized target type \" +\n                clc.bold(type) +\n                \". Must be one of \" +\n                _.keys(TARGET_TYPES).join(\", \"), { code: 1 });\n        }\n        if (_.isString(resources)) {\n            resources = [resources];\n        }\n        var changed = [];\n        resources.forEach(function (resource) {\n            var cur = this.findTarget(project, type, resource);\n            if (cur && cur !== targetName) {\n                this.unsetTargetResource(project, type, cur, resource);\n                changed.push({ resource: resource, target: cur });\n            }\n        }.bind(this));\n        var existing = this.get([\"targets\", project, type, targetName], []);\n        var list = _.uniq(existing.concat(resources)).sort();\n        this.set([\"targets\", project, type, targetName], list);\n        this.save();\n        return changed;\n    },\n    removeTarget: function (project, type, resource) {\n        var name = this.findTarget(project, type, resource);\n        if (!name) {\n            return null;\n        }\n        this.unsetTargetResource(project, type, name, resource);\n        this.save();\n        return name;\n    },\n    clearTarget: function (project, type, name) {\n        var exists = this.target(project, type, name).length > 0;\n        if (!exists) {\n            return false;\n        }\n        this.unset([\"targets\", project, type, name]);\n        this.save();\n        return true;\n    },\n    findTarget: function (project, type, resource) {\n        var targets = this.get([\"targets\", project, type]);\n        for (var targetName in targets) {\n            if (_.includes(targets[targetName], resource)) {\n                return targetName;\n            }\n        }\n        return null;\n    },\n    unsetTargetResource: function (project, type, name, resource) {\n        var targetPath = [\"targets\", project, type, name];\n        var updatedResources = this.get(targetPath, []).filter(function (r) {\n            return r !== resource;\n        });\n        if (updatedResources.length) {\n            this.set(targetPath, updatedResources);\n        }\n        else {\n            this.unset(targetPath);\n        }\n    },\n    requireTarget: function (project, type, name) {\n        var target = this.target(project, type, name);\n        if (!target.length) {\n            throw new FirebaseError(\"Deploy target \" +\n                clc.bold(name) +\n                \" not configured for project \" +\n                clc.bold(project) +\n                \". Configure with:\\n\\n  firebase target:apply \" +\n                type +\n                \" \" +\n                name +\n                \" <resources...>\", { exit: 1 });\n        }\n        return target;\n    },\n    save: function () {\n        if (this.path) {\n            fs.writeFileSync(this.path, JSON.stringify(this.data, null, 2), {\n                encoding: \"utf8\",\n            });\n            return true;\n        }\n        return false;\n    },\n};\nRC.loadFile = function (rcpath) {\n    var data = {};\n    if (fsutils.fileExistsSync(rcpath)) {\n        try {\n            data = cjson.load(rcpath);\n        }\n        catch (e) {\n            utils.logWarning(\"JSON error trying to load \" + clc.bold(rcpath));\n        }\n    }\n    return new RC(rcpath, data);\n};\nRC.load = function (cwd) {\n    cwd = cwd || process.cwd();\n    var dir = detectProjectRoot(cwd);\n    var potential = path.resolve(dir || cwd, \"./.firebaserc\");\n    return RC.loadFile(potential);\n};\nmodule.exports = RC;\n"]},"metadata":{},"sourceType":"script"}
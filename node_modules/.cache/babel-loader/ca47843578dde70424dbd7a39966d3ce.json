{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _ = require(\"lodash\");\n\nconst clc = require(\"cli-color\");\n\nconst loadCJSON = require(\"../../loadCJSON\");\n\nconst rulesDeploy_1 = require(\"../../rulesDeploy\");\n\nconst utils = require(\"../../utils\");\n\nfunction prepareRules(context, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const rulesFile = options.config.get(\"firestore.rules\");\n\n    if (context.firestoreRules && rulesFile) {\n      const rulesDeploy = new rulesDeploy_1.RulesDeploy(options, rulesDeploy_1.RulesetServiceType.CLOUD_FIRESTORE);\n\n      _.set(context, \"firestore.rulesDeploy\", rulesDeploy);\n\n      rulesDeploy.addFile(rulesFile);\n      yield rulesDeploy.compile();\n    }\n  });\n}\n\nfunction prepareIndexes(context, options) {\n  if (!context.firestoreIndexes || !options.config.get(\"firestore.indexes\")) {\n    return;\n  }\n\n  const indexesFileName = options.config.get(\"firestore.indexes\");\n  const indexesPath = options.config.path(indexesFileName);\n  const parsedSrc = loadCJSON(indexesPath);\n  utils.logBullet(`${clc.bold.cyan(\"firestore:\")} reading indexes from ${clc.bold(indexesFileName)}...`);\n  context.firestore = context.firestore || {};\n  context.firestore.indexes = {\n    name: indexesFileName,\n    content: parsedSrc\n  };\n}\n\nfunction default_1(context, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (options.only) {\n      const targets = options.only.split(\",\");\n      const onlyIndexes = targets.indexOf(\"firestore:indexes\") >= 0;\n      const onlyRules = targets.indexOf(\"firestore:rules\") >= 0;\n      const onlyFirestore = targets.indexOf(\"firestore\") >= 0;\n      context.firestoreIndexes = onlyIndexes || onlyFirestore;\n      context.firestoreRules = onlyRules || onlyFirestore;\n    } else {\n      context.firestoreIndexes = true;\n      context.firestoreRules = true;\n    }\n\n    prepareIndexes(context, options);\n    yield prepareRules(context, options);\n  });\n}\n\nexports.default = default_1;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/deploy/firestore/prepare.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","_","require","clc","loadCJSON","rulesDeploy_1","utils","prepareRules","context","options","rulesFile","config","get","firestoreRules","rulesDeploy","RulesDeploy","RulesetServiceType","CLOUD_FIRESTORE","set","addFile","compile","prepareIndexes","firestoreIndexes","indexesFileName","indexesPath","path","parsedSrc","logBullet","bold","cyan","firestore","indexes","name","content","default_1","only","targets","split","onlyIndexes","indexOf","onlyRules","onlyFirestore","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst clc = require(\"cli-color\");\nconst loadCJSON = require(\"../../loadCJSON\");\nconst rulesDeploy_1 = require(\"../../rulesDeploy\");\nconst utils = require(\"../../utils\");\nfunction prepareRules(context, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const rulesFile = options.config.get(\"firestore.rules\");\n        if (context.firestoreRules && rulesFile) {\n            const rulesDeploy = new rulesDeploy_1.RulesDeploy(options, rulesDeploy_1.RulesetServiceType.CLOUD_FIRESTORE);\n            _.set(context, \"firestore.rulesDeploy\", rulesDeploy);\n            rulesDeploy.addFile(rulesFile);\n            yield rulesDeploy.compile();\n        }\n    });\n}\nfunction prepareIndexes(context, options) {\n    if (!context.firestoreIndexes || !options.config.get(\"firestore.indexes\")) {\n        return;\n    }\n    const indexesFileName = options.config.get(\"firestore.indexes\");\n    const indexesPath = options.config.path(indexesFileName);\n    const parsedSrc = loadCJSON(indexesPath);\n    utils.logBullet(`${clc.bold.cyan(\"firestore:\")} reading indexes from ${clc.bold(indexesFileName)}...`);\n    context.firestore = context.firestore || {};\n    context.firestore.indexes = {\n        name: indexesFileName,\n        content: parsedSrc,\n    };\n}\nfunction default_1(context, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options.only) {\n            const targets = options.only.split(\",\");\n            const onlyIndexes = targets.indexOf(\"firestore:indexes\") >= 0;\n            const onlyRules = targets.indexOf(\"firestore:rules\") >= 0;\n            const onlyFirestore = targets.indexOf(\"firestore\") >= 0;\n            context.firestoreIndexes = onlyIndexes || onlyFirestore;\n            context.firestoreRules = onlyRules || onlyFirestore;\n        }\n        else {\n            context.firestoreIndexes = true;\n            context.firestoreRules = true;\n        }\n        prepareIndexes(context, options);\n        yield prepareRules(context, options);\n    });\n}\nexports.default = default_1;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var path = require('path');\n\nvar fs = require('graceful-fs');\n\nvar mkdir = require('../mkdirs');\n\nfunction createLink(srcpath, dstpath, callback) {\n  function makeLink(srcpath, dstpath) {\n    fs.link(srcpath, dstpath, function (err) {\n      if (err) return callback(err);\n      callback(null);\n    });\n  }\n\n  fs.exists(dstpath, function (destinationExists) {\n    if (destinationExists) return callback(null);\n    fs.lstat(srcpath, function (err, stat) {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink');\n        return callback(err);\n      }\n\n      var dir = path.dirname(dstpath);\n      fs.exists(dir, function (dirExists) {\n        if (dirExists) return makeLink(srcpath, dstpath);\n        mkdir.mkdirs(dir, function (err) {\n          if (err) return callback(err);\n          makeLink(srcpath, dstpath);\n        });\n      });\n    });\n  });\n}\n\nfunction createLinkSync(srcpath, dstpath, callback) {\n  var destinationExists = fs.existsSync(dstpath);\n  if (destinationExists) return undefined;\n\n  try {\n    fs.lstatSync(srcpath);\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink');\n    throw err;\n  }\n\n  var dir = path.dirname(dstpath);\n  var dirExists = fs.existsSync(dir);\n  if (dirExists) return fs.linkSync(srcpath, dstpath);\n  mkdir.mkdirsSync(dir);\n  return fs.linkSync(srcpath, dstpath);\n}\n\nmodule.exports = {\n  createLink: createLink,\n  createLinkSync: createLinkSync,\n  // alias\n  ensureLink: createLink,\n  ensureLinkSync: createLinkSync\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/node_modules/fs-extra/lib/ensure/link.js"],"names":["path","require","fs","mkdir","createLink","srcpath","dstpath","callback","makeLink","link","err","exists","destinationExists","lstat","stat","message","replace","dir","dirname","dirExists","mkdirs","createLinkSync","existsSync","undefined","lstatSync","linkSync","mkdirsSync","module","exports","ensureLink","ensureLinkSync"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,WAAD,CAAnB;;AAEA,SAASG,UAAT,CAAqBC,OAArB,EAA8BC,OAA9B,EAAuCC,QAAvC,EAAiD;AAC/C,WAASC,QAAT,CAAmBH,OAAnB,EAA4BC,OAA5B,EAAqC;AACnCJ,IAAAA,EAAE,CAACO,IAAH,CAAQJ,OAAR,EAAiBC,OAAjB,EAA0B,UAAUI,GAAV,EAAe;AACvC,UAAIA,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;AACTH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAHD;AAID;;AAEDL,EAAAA,EAAE,CAACS,MAAH,CAAUL,OAAV,EAAmB,UAAUM,iBAAV,EAA6B;AAC9C,QAAIA,iBAAJ,EAAuB,OAAOL,QAAQ,CAAC,IAAD,CAAf;AACvBL,IAAAA,EAAE,CAACW,KAAH,CAASR,OAAT,EAAkB,UAAUK,GAAV,EAAeI,IAAf,EAAqB;AACrC,UAAIJ,GAAJ,EAAS;AACPA,QAAAA,GAAG,CAACK,OAAJ,GAAcL,GAAG,CAACK,OAAJ,CAAYC,OAAZ,CAAoB,OAApB,EAA6B,YAA7B,CAAd;AACA,eAAOT,QAAQ,CAACG,GAAD,CAAf;AACD;;AACD,UAAIO,GAAG,GAAGjB,IAAI,CAACkB,OAAL,CAAaZ,OAAb,CAAV;AACAJ,MAAAA,EAAE,CAACS,MAAH,CAAUM,GAAV,EAAe,UAAUE,SAAV,EAAqB;AAClC,YAAIA,SAAJ,EAAe,OAAOX,QAAQ,CAACH,OAAD,EAAUC,OAAV,CAAf;AACfH,QAAAA,KAAK,CAACiB,MAAN,CAAaH,GAAb,EAAkB,UAAUP,GAAV,EAAe;AAC/B,cAAIA,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;AACTF,UAAAA,QAAQ,CAACH,OAAD,EAAUC,OAAV,CAAR;AACD,SAHD;AAID,OAND;AAOD,KAbD;AAcD,GAhBD;AAiBD;;AAED,SAASe,cAAT,CAAyBhB,OAAzB,EAAkCC,OAAlC,EAA2CC,QAA3C,EAAqD;AAEnD,MAAIK,iBAAiB,GAAGV,EAAE,CAACoB,UAAH,CAAchB,OAAd,CAAxB;AACA,MAAIM,iBAAJ,EAAuB,OAAOW,SAAP;;AAEvB,MAAI;AACFrB,IAAAA,EAAE,CAACsB,SAAH,CAAanB,OAAb;AACD,GAFD,CAEE,OAAOK,GAAP,EAAY;AACZA,IAAAA,GAAG,CAACK,OAAJ,GAAcL,GAAG,CAACK,OAAJ,CAAYC,OAAZ,CAAoB,OAApB,EAA6B,YAA7B,CAAd;AACA,UAAMN,GAAN;AACD;;AAED,MAAIO,GAAG,GAAGjB,IAAI,CAACkB,OAAL,CAAaZ,OAAb,CAAV;AACA,MAAIa,SAAS,GAAGjB,EAAE,CAACoB,UAAH,CAAcL,GAAd,CAAhB;AACA,MAAIE,SAAJ,EAAe,OAAOjB,EAAE,CAACuB,QAAH,CAAYpB,OAAZ,EAAqBC,OAArB,CAAP;AACfH,EAAAA,KAAK,CAACuB,UAAN,CAAiBT,GAAjB;AAEA,SAAOf,EAAE,CAACuB,QAAH,CAAYpB,OAAZ,EAAqBC,OAArB,CAAP;AACD;;AAEDqB,MAAM,CAACC,OAAP,GAAiB;AACfxB,EAAAA,UAAU,EAAEA,UADG;AAEfiB,EAAAA,cAAc,EAAEA,cAFD;AAGf;AACAQ,EAAAA,UAAU,EAAEzB,UAJG;AAKf0B,EAAAA,cAAc,EAAET;AALD,CAAjB","sourcesContent":["var path = require('path')\nvar fs = require('graceful-fs')\nvar mkdir = require('../mkdirs')\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, function (err) {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  fs.exists(dstpath, function (destinationExists) {\n    if (destinationExists) return callback(null)\n    fs.lstat(srcpath, function (err, stat) {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n      var dir = path.dirname(dstpath)\n      fs.exists(dir, function (dirExists) {\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, function (err) {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath, callback) {\n\n  var destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  try {\n    fs.lstatSync(srcpath)\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  var dir = path.dirname(dstpath)\n  var dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: createLink,\n  createLinkSync: createLinkSync,\n  // alias\n  ensureLink: createLink,\n  ensureLinkSync: createLinkSync\n}\n"]},"metadata":{},"sourceType":"script"}
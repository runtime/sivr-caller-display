{"ast":null,"code":"\"use strict\";\n\nvar fs = require(\"fs\");\n\nvar _ = require(\"lodash\");\n\nvar ora = require(\"ora\");\n\nvar readline = require(\"readline\");\n\nvar request = require(\"request\");\n\nvar tmp = require(\"tmp\");\n\nvar api = require(\"./api\");\n\nvar utils = require(\"./utils\");\n\nvar ProfileReport = require(\"./profileReport\");\n\nvar _require = require(\"./error\"),\n    FirebaseError = _require.FirebaseError;\n\nvar responseToError = require(\"./responseToError\");\n\nmodule.exports = function (options) {\n  var url = utils.addSubdomain(api.realtimeOrigin, options.instance) + \"/.settings/profile.json?\";\n  var rl = readline.createInterface({\n    input: process.stdin\n  });\n  var reqOptions = {\n    url: url,\n    headers: {\n      Accept: \"text/event-stream\"\n    }\n  };\n  return api.addRequestHeaders(reqOptions).then(function (reqOptionsWithToken) {\n    return new Promise(function (resolve, reject) {\n      var fileOut = !!options.output;\n      var tmpFile = tmp.tmpNameSync();\n      var tmpStream = fs.createWriteStream(tmpFile);\n      var outStream = fileOut ? fs.createWriteStream(options.output) : process.stdout;\n      var counter = 0;\n      var spinner = ora({\n        text: \"0 operations recorded. Press [enter] to stop\",\n        color: \"yellow\"\n      });\n      var outputFormat = options.raw ? \"RAW\" : options.parent.json ? \"JSON\" : \"TXT\";\n      var erroring;\n      var errorResponse = \"\";\n      var response;\n\n      var generateReport = _.once(function () {\n        rl.close();\n        spinner.stop();\n\n        if (erroring) {\n          fs.unlinkSync(tmpFile);\n\n          try {\n            var data = JSON.parse(errorResponse);\n            return reject(responseToError(response, data));\n          } catch (e) {\n            return reject(new FirebaseError(errorResponse, {\n              exit: 2\n            }));\n          }\n        } else if (response) {\n          response.destroy();\n          response = null;\n        }\n\n        var dataFile = options.input || tmpFile;\n        var reportOptions = {\n          format: outputFormat,\n          isFile: fileOut,\n          isInput: !!options.input,\n          collapse: options.collapse\n        };\n        var report = new ProfileReport(dataFile, outStream, reportOptions);\n        report.generate().then(function (result) {\n          fs.unlinkSync(tmpFile);\n          resolve(result);\n        }, function (e) {\n          reject(e);\n        });\n      });\n\n      if (options.input) {\n        return generateReport();\n      }\n\n      request.get(reqOptionsWithToken).on(\"response\", function (res) {\n        response = res;\n\n        if (response.statusCode >= 400) {\n          erroring = true;\n        } else if (!_.has(options, \"duration\")) {\n          spinner.start();\n        }\n      }).on(\"data\", function (chunk) {\n        if (erroring) {\n          errorResponse += chunk.toString();\n          return;\n        }\n\n        tmpStream.write(chunk);\n\n        if (chunk.toString().indexOf(\"event: log\") >= 0) {\n          counter++;\n          spinner.text = counter + \" operations recorded. Press [enter] to stop\";\n        }\n      }).on(\"end\", function () {\n        spinner.text = counter + \" operations recorded.\\n\";\n        generateReport();\n      }).on(\"error\", function () {\n        spinner.text = counter + \" operations recorded.\\n\";\n        erroring = true;\n        generateReport();\n      });\n\n      if (_.has(options, \"duration\")) {\n        setTimeout(generateReport, options.duration * 1000);\n      } else {\n        rl.question(\"\", generateReport);\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/profiler.js"],"names":["fs","require","_","ora","readline","request","tmp","api","utils","ProfileReport","FirebaseError","responseToError","module","exports","options","url","addSubdomain","realtimeOrigin","instance","rl","createInterface","input","process","stdin","reqOptions","headers","Accept","addRequestHeaders","then","reqOptionsWithToken","Promise","resolve","reject","fileOut","output","tmpFile","tmpNameSync","tmpStream","createWriteStream","outStream","stdout","counter","spinner","text","color","outputFormat","raw","parent","json","erroring","errorResponse","response","generateReport","once","close","stop","unlinkSync","data","JSON","parse","e","exit","destroy","dataFile","reportOptions","format","isFile","isInput","collapse","report","generate","result","get","on","res","statusCode","has","start","chunk","toString","write","indexOf","setTimeout","duration","question"],"mappings":"AAAA;;AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIK,GAAG,GAAGL,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIM,GAAG,GAAGN,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIO,KAAK,GAAGP,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIQ,aAAa,GAAGR,OAAO,CAAC,iBAAD,CAA3B;;eACwBA,OAAO,CAAC,SAAD,C;IAAzBS,a,YAAAA,a;;AACN,IAAIC,eAAe,GAAGV,OAAO,CAAC,mBAAD,CAA7B;;AACAW,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAChC,MAAIC,GAAG,GAAGP,KAAK,CAACQ,YAAN,CAAmBT,GAAG,CAACU,cAAvB,EAAuCH,OAAO,CAACI,QAA/C,IAA2D,0BAArE;AACA,MAAIC,EAAE,GAAGf,QAAQ,CAACgB,eAAT,CAAyB;AAC9BC,IAAAA,KAAK,EAAEC,OAAO,CAACC;AADe,GAAzB,CAAT;AAGA,MAAIC,UAAU,GAAG;AACbT,IAAAA,GAAG,EAAEA,GADQ;AAEbU,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AAFI,GAAjB;AAMA,SAAOnB,GAAG,CAACoB,iBAAJ,CAAsBH,UAAtB,EAAkCI,IAAlC,CAAuC,UAAUC,mBAAV,EAA+B;AACzE,WAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,UAAIC,OAAO,GAAG,CAAC,CAACnB,OAAO,CAACoB,MAAxB;AACA,UAAIC,OAAO,GAAG7B,GAAG,CAAC8B,WAAJ,EAAd;AACA,UAAIC,SAAS,GAAGrC,EAAE,CAACsC,iBAAH,CAAqBH,OAArB,CAAhB;AACA,UAAII,SAAS,GAAGN,OAAO,GAAGjC,EAAE,CAACsC,iBAAH,CAAqBxB,OAAO,CAACoB,MAA7B,CAAH,GAA0CZ,OAAO,CAACkB,MAAzE;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,OAAO,GAAGvC,GAAG,CAAC;AACdwC,QAAAA,IAAI,EAAE,8CADQ;AAEdC,QAAAA,KAAK,EAAE;AAFO,OAAD,CAAjB;AAIA,UAAIC,YAAY,GAAG/B,OAAO,CAACgC,GAAR,GAAc,KAAd,GAAsBhC,OAAO,CAACiC,MAAR,CAAeC,IAAf,GAAsB,MAAtB,GAA+B,KAAxE;AACA,UAAIC,QAAJ;AACA,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,QAAJ;;AACA,UAAIC,cAAc,GAAGlD,CAAC,CAACmD,IAAF,CAAO,YAAY;AACpClC,QAAAA,EAAE,CAACmC,KAAH;AACAZ,QAAAA,OAAO,CAACa,IAAR;;AACA,YAAIN,QAAJ,EAAc;AACVjD,UAAAA,EAAE,CAACwD,UAAH,CAAcrB,OAAd;;AACA,cAAI;AACA,gBAAIsB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWT,aAAX,CAAX;AACA,mBAAOlB,MAAM,CAACrB,eAAe,CAACwC,QAAD,EAAWM,IAAX,CAAhB,CAAb;AACH,WAHD,CAIA,OAAOG,CAAP,EAAU;AACN,mBAAO5B,MAAM,CAAC,IAAItB,aAAJ,CAAkBwC,aAAlB,EAAiC;AAC3CW,cAAAA,IAAI,EAAE;AADqC,aAAjC,CAAD,CAAb;AAGH;AACJ,SAXD,MAYK,IAAIV,QAAJ,EAAc;AACfA,UAAAA,QAAQ,CAACW,OAAT;AACAX,UAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,YAAIY,QAAQ,GAAGjD,OAAO,CAACO,KAAR,IAAiBc,OAAhC;AACA,YAAI6B,aAAa,GAAG;AAChBC,UAAAA,MAAM,EAAEpB,YADQ;AAEhBqB,UAAAA,MAAM,EAAEjC,OAFQ;AAGhBkC,UAAAA,OAAO,EAAE,CAAC,CAACrD,OAAO,CAACO,KAHH;AAIhB+C,UAAAA,QAAQ,EAAEtD,OAAO,CAACsD;AAJF,SAApB;AAMA,YAAIC,MAAM,GAAG,IAAI5D,aAAJ,CAAkBsD,QAAlB,EAA4BxB,SAA5B,EAAuCyB,aAAvC,CAAb;AACAK,QAAAA,MAAM,CAACC,QAAP,GAAkB1C,IAAlB,CAAuB,UAAU2C,MAAV,EAAkB;AACrCvE,UAAAA,EAAE,CAACwD,UAAH,CAAcrB,OAAd;AACAJ,UAAAA,OAAO,CAACwC,MAAD,CAAP;AACH,SAHD,EAGG,UAAUX,CAAV,EAAa;AACZ5B,UAAAA,MAAM,CAAC4B,CAAD,CAAN;AACH,SALD;AAMH,OAjCoB,CAArB;;AAkCA,UAAI9C,OAAO,CAACO,KAAZ,EAAmB;AACf,eAAO+B,cAAc,EAArB;AACH;;AACD/C,MAAAA,OAAO,CACFmE,GADL,CACS3C,mBADT,EAEK4C,EAFL,CAEQ,UAFR,EAEoB,UAAUC,GAAV,EAAe;AAC/BvB,QAAAA,QAAQ,GAAGuB,GAAX;;AACA,YAAIvB,QAAQ,CAACwB,UAAT,IAAuB,GAA3B,EAAgC;AAC5B1B,UAAAA,QAAQ,GAAG,IAAX;AACH,SAFD,MAGK,IAAI,CAAC/C,CAAC,CAAC0E,GAAF,CAAM9D,OAAN,EAAe,UAAf,CAAL,EAAiC;AAClC4B,UAAAA,OAAO,CAACmC,KAAR;AACH;AACJ,OAVD,EAWKJ,EAXL,CAWQ,MAXR,EAWgB,UAAUK,KAAV,EAAiB;AAC7B,YAAI7B,QAAJ,EAAc;AACVC,UAAAA,aAAa,IAAI4B,KAAK,CAACC,QAAN,EAAjB;AACA;AACH;;AACD1C,QAAAA,SAAS,CAAC2C,KAAV,CAAgBF,KAAhB;;AACA,YAAIA,KAAK,CAACC,QAAN,GAAiBE,OAAjB,CAAyB,YAAzB,KAA0C,CAA9C,EAAiD;AAC7CxC,UAAAA,OAAO;AACPC,UAAAA,OAAO,CAACC,IAAR,GAAeF,OAAO,GAAG,6CAAzB;AACH;AACJ,OArBD,EAsBKgC,EAtBL,CAsBQ,KAtBR,EAsBe,YAAY;AACvB/B,QAAAA,OAAO,CAACC,IAAR,GAAeF,OAAO,GAAG,yBAAzB;AACAW,QAAAA,cAAc;AACjB,OAzBD,EA0BKqB,EA1BL,CA0BQ,OA1BR,EA0BiB,YAAY;AACzB/B,QAAAA,OAAO,CAACC,IAAR,GAAeF,OAAO,GAAG,yBAAzB;AACAQ,QAAAA,QAAQ,GAAG,IAAX;AACAG,QAAAA,cAAc;AACjB,OA9BD;;AA+BA,UAAIlD,CAAC,CAAC0E,GAAF,CAAM9D,OAAN,EAAe,UAAf,CAAJ,EAAgC;AAC5BoE,QAAAA,UAAU,CAAC9B,cAAD,EAAiBtC,OAAO,CAACqE,QAAR,GAAmB,IAApC,CAAV;AACH,OAFD,MAGK;AACDhE,QAAAA,EAAE,CAACiE,QAAH,CAAY,EAAZ,EAAgBhC,cAAhB;AACH;AACJ,KAxFM,CAAP;AAyFH,GA1FM,CAAP;AA2FH,CAtGD","sourcesContent":["\"use strict\";\nvar fs = require(\"fs\");\nvar _ = require(\"lodash\");\nvar ora = require(\"ora\");\nvar readline = require(\"readline\");\nvar request = require(\"request\");\nvar tmp = require(\"tmp\");\nvar api = require(\"./api\");\nvar utils = require(\"./utils\");\nvar ProfileReport = require(\"./profileReport\");\nvar { FirebaseError } = require(\"./error\");\nvar responseToError = require(\"./responseToError\");\nmodule.exports = function (options) {\n    var url = utils.addSubdomain(api.realtimeOrigin, options.instance) + \"/.settings/profile.json?\";\n    var rl = readline.createInterface({\n        input: process.stdin,\n    });\n    var reqOptions = {\n        url: url,\n        headers: {\n            Accept: \"text/event-stream\",\n        },\n    };\n    return api.addRequestHeaders(reqOptions).then(function (reqOptionsWithToken) {\n        return new Promise(function (resolve, reject) {\n            var fileOut = !!options.output;\n            var tmpFile = tmp.tmpNameSync();\n            var tmpStream = fs.createWriteStream(tmpFile);\n            var outStream = fileOut ? fs.createWriteStream(options.output) : process.stdout;\n            var counter = 0;\n            var spinner = ora({\n                text: \"0 operations recorded. Press [enter] to stop\",\n                color: \"yellow\",\n            });\n            var outputFormat = options.raw ? \"RAW\" : options.parent.json ? \"JSON\" : \"TXT\";\n            var erroring;\n            var errorResponse = \"\";\n            var response;\n            var generateReport = _.once(function () {\n                rl.close();\n                spinner.stop();\n                if (erroring) {\n                    fs.unlinkSync(tmpFile);\n                    try {\n                        var data = JSON.parse(errorResponse);\n                        return reject(responseToError(response, data));\n                    }\n                    catch (e) {\n                        return reject(new FirebaseError(errorResponse, {\n                            exit: 2,\n                        }));\n                    }\n                }\n                else if (response) {\n                    response.destroy();\n                    response = null;\n                }\n                var dataFile = options.input || tmpFile;\n                var reportOptions = {\n                    format: outputFormat,\n                    isFile: fileOut,\n                    isInput: !!options.input,\n                    collapse: options.collapse,\n                };\n                var report = new ProfileReport(dataFile, outStream, reportOptions);\n                report.generate().then(function (result) {\n                    fs.unlinkSync(tmpFile);\n                    resolve(result);\n                }, function (e) {\n                    reject(e);\n                });\n            });\n            if (options.input) {\n                return generateReport();\n            }\n            request\n                .get(reqOptionsWithToken)\n                .on(\"response\", function (res) {\n                response = res;\n                if (response.statusCode >= 400) {\n                    erroring = true;\n                }\n                else if (!_.has(options, \"duration\")) {\n                    spinner.start();\n                }\n            })\n                .on(\"data\", function (chunk) {\n                if (erroring) {\n                    errorResponse += chunk.toString();\n                    return;\n                }\n                tmpStream.write(chunk);\n                if (chunk.toString().indexOf(\"event: log\") >= 0) {\n                    counter++;\n                    spinner.text = counter + \" operations recorded. Press [enter] to stop\";\n                }\n            })\n                .on(\"end\", function () {\n                spinner.text = counter + \" operations recorded.\\n\";\n                generateReport();\n            })\n                .on(\"error\", function () {\n                spinner.text = counter + \" operations recorded.\\n\";\n                erroring = true;\n                generateReport();\n            });\n            if (_.has(options, \"duration\")) {\n                setTimeout(generateReport, options.duration * 1000);\n            }\n            else {\n                rl.question(\"\", generateReport);\n            }\n        });\n    });\n};\n"]},"metadata":{},"sourceType":"script"}
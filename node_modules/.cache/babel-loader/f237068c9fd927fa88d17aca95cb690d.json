{"ast":null,"code":"\"use strict\";\n\nvar clc = require(\"cli-color\");\n\nvar _ = require(\"lodash\");\n\nvar logger = require(\"../../../logger\");\n\nvar _require = require(\"../../../prompt\"),\n    prompt = _require.prompt;\n\nvar enableApi = require(\"../../../ensureApiEnabled\").enable;\n\nvar _require2 = require(\"../../../requirePermissions\"),\n    requirePermissions = _require2.requirePermissions;\n\nmodule.exports = function (setup, config) {\n  logger.info();\n  logger.info(\"A \" + clc.bold(\"functions\") + \" directory will be created in your project with a Node.js\");\n  logger.info(\"package pre-configured. Functions can be deployed with \" + clc.bold(\"firebase deploy\") + \".\");\n  logger.info();\n  setup.functions = {};\n\n  var projectId = _.get(setup, \"rcfile.projects.default\");\n\n  var enableApis = Promise.resolve();\n\n  if (projectId) {\n    enableApis = requirePermissions({\n      project: projectId\n    }).then(() => {\n      return Promise.all([enableApi(projectId, \"cloudfunctions.googleapis.com\"), enableApi(projectId, \"runtimeconfig.googleapis.com\")]);\n    });\n  }\n\n  return enableApis.then(function () {\n    return prompt(setup.functions, [{\n      type: \"list\",\n      name: \"language\",\n      message: \"What language would you like to use to write Cloud Functions?\",\n      default: \"javascript\",\n      choices: [{\n        name: \"JavaScript\",\n        value: \"javascript\"\n      }, {\n        name: \"TypeScript\",\n        value: \"typescript\"\n      }]\n    }]).then(function () {\n      return require(\"./\" + setup.functions.language)(setup, config);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/init/features/functions/index.js"],"names":["clc","require","_","logger","prompt","enableApi","enable","requirePermissions","module","exports","setup","config","info","bold","functions","projectId","get","enableApis","Promise","resolve","project","then","all","type","name","message","default","choices","value","language"],"mappings":"AAAA;;AACA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,iBAAD,CAApB;;eACiBA,OAAO,CAAC,iBAAD,C;IAAlBG,M,YAAAA,M;;AACN,IAAIC,SAAS,GAAGJ,OAAO,CAAC,2BAAD,CAAP,CAAqCK,MAArD;;gBAC6BL,OAAO,CAAC,6BAAD,C;IAA9BM,kB,aAAAA,kB;;AACNC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACtCR,EAAAA,MAAM,CAACS,IAAP;AACAT,EAAAA,MAAM,CAACS,IAAP,CAAY,OAAOZ,GAAG,CAACa,IAAJ,CAAS,WAAT,CAAP,GAA+B,2DAA3C;AACAV,EAAAA,MAAM,CAACS,IAAP,CAAY,4DAA4DZ,GAAG,CAACa,IAAJ,CAAS,iBAAT,CAA5D,GAA0F,GAAtG;AACAV,EAAAA,MAAM,CAACS,IAAP;AACAF,EAAAA,KAAK,CAACI,SAAN,GAAkB,EAAlB;;AACA,MAAIC,SAAS,GAAGb,CAAC,CAACc,GAAF,CAAMN,KAAN,EAAa,yBAAb,CAAhB;;AACA,MAAIO,UAAU,GAAGC,OAAO,CAACC,OAAR,EAAjB;;AACA,MAAIJ,SAAJ,EAAe;AACXE,IAAAA,UAAU,GAAGV,kBAAkB,CAAC;AAAEa,MAAAA,OAAO,EAAEL;AAAX,KAAD,CAAlB,CAA2CM,IAA3C,CAAgD,MAAM;AAC/D,aAAOH,OAAO,CAACI,GAAR,CAAY,CACfjB,SAAS,CAACU,SAAD,EAAY,+BAAZ,CADM,EAEfV,SAAS,CAACU,SAAD,EAAY,8BAAZ,CAFM,CAAZ,CAAP;AAIH,KALY,CAAb;AAMH;;AACD,SAAOE,UAAU,CAACI,IAAX,CAAgB,YAAY;AAC/B,WAAOjB,MAAM,CAACM,KAAK,CAACI,SAAP,EAAkB,CAC3B;AACIS,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,IAAI,EAAE,UAFV;AAGIC,MAAAA,OAAO,EAAE,+DAHb;AAIIC,MAAAA,OAAO,EAAE,YAJb;AAKIC,MAAAA,OAAO,EAAE,CACL;AACIH,QAAAA,IAAI,EAAE,YADV;AAEII,QAAAA,KAAK,EAAE;AAFX,OADK,EAKL;AACIJ,QAAAA,IAAI,EAAE,YADV;AAEII,QAAAA,KAAK,EAAE;AAFX,OALK;AALb,KAD2B,CAAlB,CAAN,CAiBJP,IAjBI,CAiBC,YAAY;AAChB,aAAOpB,OAAO,CAAC,OAAOS,KAAK,CAACI,SAAN,CAAgBe,QAAxB,CAAP,CAAyCnB,KAAzC,EAAgDC,MAAhD,CAAP;AACH,KAnBM,CAAP;AAoBH,GArBM,CAAP;AAsBH,CAtCD","sourcesContent":["\"use strict\";\nvar clc = require(\"cli-color\");\nvar _ = require(\"lodash\");\nvar logger = require(\"../../../logger\");\nvar { prompt } = require(\"../../../prompt\");\nvar enableApi = require(\"../../../ensureApiEnabled\").enable;\nvar { requirePermissions } = require(\"../../../requirePermissions\");\nmodule.exports = function (setup, config) {\n    logger.info();\n    logger.info(\"A \" + clc.bold(\"functions\") + \" directory will be created in your project with a Node.js\");\n    logger.info(\"package pre-configured. Functions can be deployed with \" + clc.bold(\"firebase deploy\") + \".\");\n    logger.info();\n    setup.functions = {};\n    var projectId = _.get(setup, \"rcfile.projects.default\");\n    var enableApis = Promise.resolve();\n    if (projectId) {\n        enableApis = requirePermissions({ project: projectId }).then(() => {\n            return Promise.all([\n                enableApi(projectId, \"cloudfunctions.googleapis.com\"),\n                enableApi(projectId, \"runtimeconfig.googleapis.com\"),\n            ]);\n        });\n    }\n    return enableApis.then(function () {\n        return prompt(setup.functions, [\n            {\n                type: \"list\",\n                name: \"language\",\n                message: \"What language would you like to use to write Cloud Functions?\",\n                default: \"javascript\",\n                choices: [\n                    {\n                        name: \"JavaScript\",\n                        value: \"javascript\",\n                    },\n                    {\n                        name: \"TypeScript\",\n                        value: \"typescript\",\n                    },\n                ],\n            },\n        ]).then(function () {\n            return require(\"./\" + setup.functions.language)(setup, config);\n        });\n    });\n};\n"]},"metadata":{},"sourceType":"script"}
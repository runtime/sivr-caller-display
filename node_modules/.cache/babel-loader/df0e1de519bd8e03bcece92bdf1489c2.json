{"ast":null,"code":"\"use strict\";\n\nvar _require = require(\"../command\"),\n    Command = _require.Command;\n\nvar configstore = require(\"../configstore\");\n\nvar logger = require(\"../logger\");\n\nvar clc = require(\"cli-color\");\n\nvar utils = require(\"../utils\");\n\nvar api = require(\"../api\");\n\nvar auth = require(\"../auth\");\n\nvar _ = require(\"lodash\");\n\nmodule.exports = new Command(\"logout\").description(\"log the CLI out of Firebase\").action(function (options) {\n  var user = configstore.get(\"user\");\n  var tokens = configstore.get(\"tokens\");\n\n  var currentToken = _.get(tokens, \"refresh_token\");\n\n  var token = utils.getInheritedOption(options, \"token\") || currentToken;\n  api.setRefreshToken(token);\n  var next;\n\n  if (token) {\n    next = auth.logout(token);\n  } else {\n    next = Promise.resolve();\n  }\n\n  var cleanup = function () {\n    if (token || user || tokens) {\n      var msg = \"Logged out\";\n\n      if (token === currentToken) {\n        if (user) {\n          msg += \" from \" + clc.bold(user.email);\n        }\n      } else {\n        msg += ' token \"' + clc.bold(token) + '\"';\n      }\n\n      utils.logSuccess(msg);\n    } else {\n      logger.info(\"No need to logout, not logged in\");\n    }\n  };\n\n  return next.then(cleanup, function () {\n    utils.logWarning(\"Invalid refresh token, did not need to deauthorize\");\n    cleanup();\n  });\n});","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/logout.js"],"names":["require","Command","configstore","logger","clc","utils","api","auth","_","module","exports","description","action","options","user","get","tokens","currentToken","token","getInheritedOption","setRefreshToken","next","logout","Promise","resolve","cleanup","msg","bold","email","logSuccess","info","then","logWarning"],"mappings":"AAAA;;eACkBA,OAAO,CAAC,YAAD,C;IAAnBC,O,YAAAA,O;;AACN,IAAIC,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,WAAD,CAApB;;AACA,IAAII,GAAG,GAAGJ,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIK,KAAK,GAAGL,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIM,GAAG,GAAGN,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIO,IAAI,GAAGP,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIQ,CAAC,GAAGR,OAAO,CAAC,QAAD,CAAf;;AACAS,MAAM,CAACC,OAAP,GAAiB,IAAIT,OAAJ,CAAY,QAAZ,EACZU,WADY,CACA,6BADA,EAEZC,MAFY,CAEL,UAAUC,OAAV,EAAmB;AAC3B,MAAIC,IAAI,GAAGZ,WAAW,CAACa,GAAZ,CAAgB,MAAhB,CAAX;AACA,MAAIC,MAAM,GAAGd,WAAW,CAACa,GAAZ,CAAgB,QAAhB,CAAb;;AACA,MAAIE,YAAY,GAAGT,CAAC,CAACO,GAAF,CAAMC,MAAN,EAAc,eAAd,CAAnB;;AACA,MAAIE,KAAK,GAAGb,KAAK,CAACc,kBAAN,CAAyBN,OAAzB,EAAkC,OAAlC,KAA8CI,YAA1D;AACAX,EAAAA,GAAG,CAACc,eAAJ,CAAoBF,KAApB;AACA,MAAIG,IAAJ;;AACA,MAAIH,KAAJ,EAAW;AACPG,IAAAA,IAAI,GAAGd,IAAI,CAACe,MAAL,CAAYJ,KAAZ,CAAP;AACH,GAFD,MAGK;AACDG,IAAAA,IAAI,GAAGE,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,MAAIC,OAAO,GAAG,YAAY;AACtB,QAAIP,KAAK,IAAIJ,IAAT,IAAiBE,MAArB,EAA6B;AACzB,UAAIU,GAAG,GAAG,YAAV;;AACA,UAAIR,KAAK,KAAKD,YAAd,EAA4B;AACxB,YAAIH,IAAJ,EAAU;AACNY,UAAAA,GAAG,IAAI,WAAWtB,GAAG,CAACuB,IAAJ,CAASb,IAAI,CAACc,KAAd,CAAlB;AACH;AACJ,OAJD,MAKK;AACDF,QAAAA,GAAG,IAAI,aAAatB,GAAG,CAACuB,IAAJ,CAAST,KAAT,CAAb,GAA+B,GAAtC;AACH;;AACDb,MAAAA,KAAK,CAACwB,UAAN,CAAiBH,GAAjB;AACH,KAXD,MAYK;AACDvB,MAAAA,MAAM,CAAC2B,IAAP,CAAY,kCAAZ;AACH;AACJ,GAhBD;;AAiBA,SAAOT,IAAI,CAACU,IAAL,CAAUN,OAAV,EAAmB,YAAY;AAClCpB,IAAAA,KAAK,CAAC2B,UAAN,CAAiB,oDAAjB;AACAP,IAAAA,OAAO;AACV,GAHM,CAAP;AAIH,CApCgB,CAAjB","sourcesContent":["\"use strict\";\nvar { Command } = require(\"../command\");\nvar configstore = require(\"../configstore\");\nvar logger = require(\"../logger\");\nvar clc = require(\"cli-color\");\nvar utils = require(\"../utils\");\nvar api = require(\"../api\");\nvar auth = require(\"../auth\");\nvar _ = require(\"lodash\");\nmodule.exports = new Command(\"logout\")\n    .description(\"log the CLI out of Firebase\")\n    .action(function (options) {\n    var user = configstore.get(\"user\");\n    var tokens = configstore.get(\"tokens\");\n    var currentToken = _.get(tokens, \"refresh_token\");\n    var token = utils.getInheritedOption(options, \"token\") || currentToken;\n    api.setRefreshToken(token);\n    var next;\n    if (token) {\n        next = auth.logout(token);\n    }\n    else {\n        next = Promise.resolve();\n    }\n    var cleanup = function () {\n        if (token || user || tokens) {\n            var msg = \"Logged out\";\n            if (token === currentToken) {\n                if (user) {\n                    msg += \" from \" + clc.bold(user.email);\n                }\n            }\n            else {\n                msg += ' token \"' + clc.bold(token) + '\"';\n            }\n            utils.logSuccess(msg);\n        }\n        else {\n            logger.info(\"No need to logout, not logged in\");\n        }\n    };\n    return next.then(cleanup, function () {\n        utils.logWarning(\"Invalid refresh token, did not need to deauthorize\");\n        cleanup();\n    });\n});\n"]},"metadata":{},"sourceType":"script"}
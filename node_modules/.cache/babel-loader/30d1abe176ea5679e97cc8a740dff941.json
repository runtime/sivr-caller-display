{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clc = require(\"cli-color\");\n\nconst fs = require(\"fs\");\n\nconst logger = require(\"../../logger\");\n\nconst prompt_1 = require(\"../../prompt\");\n\nconst ensureCloudResourceLocation_1 = require(\"../../ensureCloudResourceLocation\");\n\nconst RULES_TEMPLATE = fs.readFileSync(__dirname + \"/../../../templates/init/storage/storage.rules\", \"utf8\");\n\nfunction doSetup(setup, config) {\n  return __awaiter(this, void 0, void 0, function* () {\n    setup.config.storage = {};\n    ensureCloudResourceLocation_1.ensureLocationSet(setup.projectLocation, \"Cloud Storage\");\n    logger.info();\n    logger.info(\"Firebase Storage Security Rules allow you to define how and when to allow\");\n    logger.info(\"uploads and downloads. You can keep these rules in your project directory\");\n    logger.info(\"and publish them with \" + clc.bold(\"firebase deploy\") + \".\");\n    logger.info();\n    const storageRulesFile = yield prompt_1.promptOnce({\n      type: \"input\",\n      name: \"rules\",\n      message: \"What file should be used for Storage Rules?\",\n      default: \"storage.rules\"\n    });\n    setup.config.storage.rules = storageRulesFile;\n    config.writeProjectFile(setup.config.storage.rules, RULES_TEMPLATE);\n  });\n}\n\nexports.doSetup = doSetup;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/init/features/storage.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","clc","require","fs","logger","prompt_1","ensureCloudResourceLocation_1","RULES_TEMPLATE","readFileSync","__dirname","doSetup","setup","config","storage","ensureLocationSet","projectLocation","info","bold","storageRulesFile","promptOnce","type","name","message","default","rules","writeProjectFile"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clc = require(\"cli-color\");\nconst fs = require(\"fs\");\nconst logger = require(\"../../logger\");\nconst prompt_1 = require(\"../../prompt\");\nconst ensureCloudResourceLocation_1 = require(\"../../ensureCloudResourceLocation\");\nconst RULES_TEMPLATE = fs.readFileSync(__dirname + \"/../../../templates/init/storage/storage.rules\", \"utf8\");\nfunction doSetup(setup, config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        setup.config.storage = {};\n        ensureCloudResourceLocation_1.ensureLocationSet(setup.projectLocation, \"Cloud Storage\");\n        logger.info();\n        logger.info(\"Firebase Storage Security Rules allow you to define how and when to allow\");\n        logger.info(\"uploads and downloads. You can keep these rules in your project directory\");\n        logger.info(\"and publish them with \" + clc.bold(\"firebase deploy\") + \".\");\n        logger.info();\n        const storageRulesFile = yield prompt_1.promptOnce({\n            type: \"input\",\n            name: \"rules\",\n            message: \"What file should be used for Storage Rules?\",\n            default: \"storage.rules\",\n        });\n        setup.config.storage.rules = storageRulesFile;\n        config.writeProjectFile(setup.config.storage.rules, RULES_TEMPLATE);\n    });\n}\nexports.doSetup = doSetup;\n"]},"metadata":{},"sourceType":"script"}
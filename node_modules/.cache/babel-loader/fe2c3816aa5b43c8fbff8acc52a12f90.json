{"ast":null,"code":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n/**\n * IAM credentials.\n *\n * @param {string=} selector the iam authority selector\n * @param {string=} token the token\n * @constructor\n */\n\nfunction IAMAuth(selector, token) {\n  this.selector = selector;\n  this.token = token;\n}\n/**\n * Indicates whether the credential requires scopes to be created by calling\n * createdScoped before use.\n *\n * @return {boolean} always false\n */\n\n\nIAMAuth.prototype.createScopedRequired = function () {\n  // IAM authorization does not use scopes.\n  return false;\n};\n/**\n * Pass the selector and token to the metadataFn callback.\n *\n * @param {string} unused_uri_ is required of the credentials interface\n * @param {function} metadataFn a callback invoked with object\n *                   containing request metadata.\n */\n\n\nIAMAuth.prototype.getRequestMetadata = function (unused_uri_, metadataFn) {\n  metadataFn(null, {\n    'x-goog-iam-authority-selector': this.selector,\n    'x-goog-iam-authorization-token': this.token\n  });\n};\n/**\n * Export IAMAuth.\n */\n\n\nmodule.exports = IAMAuth;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/google-auto-auth/node_modules/google-auth-library/lib/auth/iam.js"],"names":["IAMAuth","selector","token","prototype","createScopedRequired","getRequestMetadata","unused_uri_","metadataFn","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;AAEA;;;;;;;;AAOA,SAASA,OAAT,CAAiBC,QAAjB,EAA2BC,KAA3B,EAAkC;AAChC,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKC,KAAL,GAAaA,KAAb;AACD;AAED;;;;;;;;AAMAF,OAAO,CAACG,SAAR,CAAkBC,oBAAlB,GAAyC,YAAW;AAClD;AACA,SAAO,KAAP;AACD,CAHD;AAKA;;;;;;;;;AAOAJ,OAAO,CAACG,SAAR,CAAkBE,kBAAlB,GAAuC,UAASC,WAAT,EAAsBC,UAAtB,EAAkC;AACvEA,EAAAA,UAAU,CAAC,IAAD,EAAO;AACf,qCAAiC,KAAKN,QADvB;AAEf,sCAAkC,KAAKC;AAFxB,GAAP,CAAV;AAID,CALD;AAOA;;;;;AAGAM,MAAM,CAACC,OAAP,GAAiBT,OAAjB","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\n/**\n * IAM credentials.\n *\n * @param {string=} selector the iam authority selector\n * @param {string=} token the token\n * @constructor\n */\nfunction IAMAuth(selector, token) {\n  this.selector = selector;\n  this.token = token;\n}\n\n/**\n * Indicates whether the credential requires scopes to be created by calling\n * createdScoped before use.\n *\n * @return {boolean} always false\n */\nIAMAuth.prototype.createScopedRequired = function() {\n  // IAM authorization does not use scopes.\n  return false;\n};\n\n/**\n * Pass the selector and token to the metadataFn callback.\n *\n * @param {string} unused_uri_ is required of the credentials interface\n * @param {function} metadataFn a callback invoked with object\n *                   containing request metadata.\n */\nIAMAuth.prototype.getRequestMetadata = function(unused_uri_, metadataFn) {\n  metadataFn(null, {\n    'x-goog-iam-authority-selector': this.selector,\n    'x-goog-iam-authorization-token': this.token\n  });\n};\n\n/**\n * Export IAMAuth.\n */\nmodule.exports = IAMAuth;\n"]},"metadata":{},"sourceType":"script"}
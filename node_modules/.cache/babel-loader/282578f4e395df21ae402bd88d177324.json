{"ast":null,"code":"\"use strict\";\n\nvar _require = require(\"../command\"),\n    Command = _require.Command;\n\nvar requireInstance = require(\"../requireInstance\");\n\nvar _require2 = require(\"../requirePermissions\"),\n    requirePermissions = _require2.requirePermissions;\n\nvar request = require(\"request\");\n\nvar api = require(\"../api\");\n\nvar responseToError = require(\"../responseToError\");\n\nvar _require3 = require(\"../error\"),\n    FirebaseError = _require3.FirebaseError;\n\nvar utils = require(\"../utils\");\n\nvar querystring = require(\"querystring\");\n\nvar _ = require(\"lodash\");\n\nvar fs = require(\"fs\");\n\nvar _applyStringOpts = function (dest, src, keys, jsonKeys) {\n  _.forEach(keys, function (key) {\n    if (src[key]) {\n      dest[key] = src[key];\n    }\n  });\n\n  _.forEach(jsonKeys, function (key) {\n    var jsonVal;\n\n    try {\n      jsonVal = JSON.parse(src[key]);\n    } catch (e) {\n      jsonVal = src[key];\n    }\n\n    if (src[key]) {\n      dest[key] = JSON.stringify(jsonVal);\n    }\n  });\n};\n\nmodule.exports = new Command(\"database:get <path>\").description(\"fetch and print JSON data at the specified path\").option(\"-o, --output <filename>\", \"save output to the specified file\").option(\"--pretty\", \"pretty print response\").option(\"--shallow\", \"return shallow response\").option(\"--export\", \"include priorities in the output response\").option(\"--order-by <key>\", \"select a child key by which to order results\").option(\"--order-by-key\", \"order by key name\").option(\"--order-by-value\", \"order by primitive value\").option(\"--limit-to-first <num>\", \"limit to the first <num> results\").option(\"--limit-to-last <num>\", \"limit to the last <num> results\").option(\"--start-at <val>\", \"start results at <val> (based on specified ordering)\").option(\"--end-at <val>\", \"end results at <val> (based on specified ordering)\").option(\"--equal-to <val>\", \"restrict results to <val> (based on specified ordering)\").option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\").before(requirePermissions, [\"firebasedatabase.instances.get\"]).before(requireInstance).action(function (path, options) {\n  if (!_.startsWith(path, \"/\")) {\n    return utils.reject(\"Path must begin with /\", {\n      exit: 1\n    });\n  }\n\n  var url = utils.addSubdomain(api.realtimeOrigin, options.instance) + path + \".json?\";\n  var query = {};\n\n  if (options.shallow) {\n    query.shallow = \"true\";\n  }\n\n  if (options.pretty) {\n    query.print = \"pretty\";\n  }\n\n  if (options.export) {\n    query.format = \"export\";\n  }\n\n  if (options.orderByKey) {\n    options.orderBy = \"$key\";\n  }\n\n  if (options.orderByValue) {\n    options.orderBy = \"$value\";\n  }\n\n  _applyStringOpts(query, options, [\"limitToFirst\", \"limitToLast\"], [\"orderBy\", \"startAt\", \"endAt\", \"equalTo\"]);\n\n  url += querystring.stringify(query);\n  var reqOptions = {\n    url: url\n  };\n  return api.addRequestHeaders(reqOptions).then(function (reqOptionsWithToken) {\n    return new Promise(function (resolve, reject) {\n      var fileOut = !!options.output;\n      var outStream = fileOut ? fs.createWriteStream(options.output) : process.stdout;\n      var erroring;\n      var errorResponse = \"\";\n      var response;\n      request.get(reqOptionsWithToken).on(\"response\", function (res) {\n        response = res;\n\n        if (response.statusCode >= 400) {\n          erroring = true;\n        }\n      }).on(\"data\", function (chunk) {\n        if (erroring) {\n          errorResponse += chunk;\n        } else {\n          outStream.write(chunk);\n        }\n      }).on(\"end\", function () {\n        outStream.write(\"\\n\", function () {\n          resolve();\n        });\n\n        if (erroring) {\n          try {\n            var data = JSON.parse(errorResponse);\n            return reject(responseToError(response, data));\n          } catch (e) {\n            return reject(new FirebaseError(\"Malformed JSON response\", {\n              exit: 2,\n              original: e\n            }));\n          }\n        }\n      }).on(\"error\", reject);\n    });\n  });\n});","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/database-get.js"],"names":["require","Command","requireInstance","requirePermissions","request","api","responseToError","FirebaseError","utils","querystring","_","fs","_applyStringOpts","dest","src","keys","jsonKeys","forEach","key","jsonVal","JSON","parse","e","stringify","module","exports","description","option","before","action","path","options","startsWith","reject","exit","url","addSubdomain","realtimeOrigin","instance","query","shallow","pretty","print","export","format","orderByKey","orderBy","orderByValue","reqOptions","addRequestHeaders","then","reqOptionsWithToken","Promise","resolve","fileOut","output","outStream","createWriteStream","process","stdout","erroring","errorResponse","response","get","on","res","statusCode","chunk","write","data","original"],"mappings":"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","sourcesContent":["\"use strict\";\nvar { Command } = require(\"../command\");\nvar requireInstance = require(\"../requireInstance\");\nvar { requirePermissions } = require(\"../requirePermissions\");\nvar request = require(\"request\");\nvar api = require(\"../api\");\nvar responseToError = require(\"../responseToError\");\nvar { FirebaseError } = require(\"../error\");\nvar utils = require(\"../utils\");\nvar querystring = require(\"querystring\");\nvar _ = require(\"lodash\");\nvar fs = require(\"fs\");\nvar _applyStringOpts = function (dest, src, keys, jsonKeys) {\n    _.forEach(keys, function (key) {\n        if (src[key]) {\n            dest[key] = src[key];\n        }\n    });\n    _.forEach(jsonKeys, function (key) {\n        var jsonVal;\n        try {\n            jsonVal = JSON.parse(src[key]);\n        }\n        catch (e) {\n            jsonVal = src[key];\n        }\n        if (src[key]) {\n            dest[key] = JSON.stringify(jsonVal);\n        }\n    });\n};\nmodule.exports = new Command(\"database:get <path>\")\n    .description(\"fetch and print JSON data at the specified path\")\n    .option(\"-o, --output <filename>\", \"save output to the specified file\")\n    .option(\"--pretty\", \"pretty print response\")\n    .option(\"--shallow\", \"return shallow response\")\n    .option(\"--export\", \"include priorities in the output response\")\n    .option(\"--order-by <key>\", \"select a child key by which to order results\")\n    .option(\"--order-by-key\", \"order by key name\")\n    .option(\"--order-by-value\", \"order by primitive value\")\n    .option(\"--limit-to-first <num>\", \"limit to the first <num> results\")\n    .option(\"--limit-to-last <num>\", \"limit to the last <num> results\")\n    .option(\"--start-at <val>\", \"start results at <val> (based on specified ordering)\")\n    .option(\"--end-at <val>\", \"end results at <val> (based on specified ordering)\")\n    .option(\"--equal-to <val>\", \"restrict results to <val> (based on specified ordering)\")\n    .option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\")\n    .before(requirePermissions, [\"firebasedatabase.instances.get\"])\n    .before(requireInstance)\n    .action(function (path, options) {\n    if (!_.startsWith(path, \"/\")) {\n        return utils.reject(\"Path must begin with /\", { exit: 1 });\n    }\n    var url = utils.addSubdomain(api.realtimeOrigin, options.instance) + path + \".json?\";\n    var query = {};\n    if (options.shallow) {\n        query.shallow = \"true\";\n    }\n    if (options.pretty) {\n        query.print = \"pretty\";\n    }\n    if (options.export) {\n        query.format = \"export\";\n    }\n    if (options.orderByKey) {\n        options.orderBy = \"$key\";\n    }\n    if (options.orderByValue) {\n        options.orderBy = \"$value\";\n    }\n    _applyStringOpts(query, options, [\"limitToFirst\", \"limitToLast\"], [\"orderBy\", \"startAt\", \"endAt\", \"equalTo\"]);\n    url += querystring.stringify(query);\n    var reqOptions = {\n        url: url,\n    };\n    return api.addRequestHeaders(reqOptions).then(function (reqOptionsWithToken) {\n        return new Promise(function (resolve, reject) {\n            var fileOut = !!options.output;\n            var outStream = fileOut ? fs.createWriteStream(options.output) : process.stdout;\n            var erroring;\n            var errorResponse = \"\";\n            var response;\n            request\n                .get(reqOptionsWithToken)\n                .on(\"response\", function (res) {\n                response = res;\n                if (response.statusCode >= 400) {\n                    erroring = true;\n                }\n            })\n                .on(\"data\", function (chunk) {\n                if (erroring) {\n                    errorResponse += chunk;\n                }\n                else {\n                    outStream.write(chunk);\n                }\n            })\n                .on(\"end\", function () {\n                outStream.write(\"\\n\", function () {\n                    resolve();\n                });\n                if (erroring) {\n                    try {\n                        var data = JSON.parse(errorResponse);\n                        return reject(responseToError(response, data));\n                    }\n                    catch (e) {\n                        return reject(new FirebaseError(\"Malformed JSON response\", {\n                            exit: 2,\n                            original: e,\n                        }));\n                    }\n                }\n            })\n                .on(\"error\", reject);\n        });\n    });\n});\n"]},"metadata":{},"sourceType":"script"}
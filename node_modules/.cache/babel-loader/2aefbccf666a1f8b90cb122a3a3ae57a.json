{"ast":null,"code":"\"use strict\";\n\nvar os = require(\"os\");\n\nvar path = require(\"path\");\n\nvar _ = require(\"lodash\");\n\nvar api = require(\"./api\");\n\nvar utils = require(\"./utils\");\n\nvar EXPORTED_JSON_KEYS = [\"localId\", \"email\", \"emailVerified\", \"passwordHash\", \"salt\", \"displayName\", \"photoUrl\", \"lastLoginAt\", \"createdAt\", \"phoneNumber\", \"disabled\"];\nvar EXPORTED_JSON_KEYS_RENAMING = {\n  lastLoginAt: \"lastSignedInAt\"\n};\nvar EXPORTED_PROVIDER_USER_INFO_KEYS = [\"providerId\", \"rawId\", \"email\", \"displayName\", \"photoUrl\"];\nvar PROVIDER_ID_INDEX_MAP = {\n  \"google.com\": 7,\n  \"facebook.com\": 11,\n  \"twitter.com\": 15,\n  \"github.com\": 19\n};\n\nvar _escapeComma = function (str) {\n  if (str.indexOf(\",\") !== -1) {\n    return `\"${str}\"`;\n  }\n\n  return str;\n};\n\nvar _convertToNormalBase64 = function (data) {\n  return data.replace(/_/g, \"/\").replace(/-/g, \"+\");\n};\n\nvar _addProviderUserInfo = function (providerInfo, arr, startPos) {\n  arr[startPos] = providerInfo.rawId;\n  arr[startPos + 1] = providerInfo.email || \"\";\n  arr[startPos + 2] = _escapeComma(providerInfo.displayName || \"\");\n  arr[startPos + 3] = providerInfo.photoUrl || \"\";\n};\n\nvar _transUserToArray = function (user) {\n  var arr = Array(27).fill(\"\");\n  arr[0] = user.localId;\n  arr[1] = user.email || \"\";\n  arr[2] = user.emailVerified || false;\n  arr[3] = _convertToNormalBase64(user.passwordHash || \"\");\n  arr[4] = _convertToNormalBase64(user.salt || \"\");\n  arr[5] = _escapeComma(user.displayName || \"\");\n  arr[6] = user.photoUrl || \"\";\n\n  for (var i = 0; i < (!user.providerUserInfo ? 0 : user.providerUserInfo.length); i++) {\n    var providerInfo = user.providerUserInfo[i];\n\n    if (providerInfo && PROVIDER_ID_INDEX_MAP[providerInfo.providerId]) {\n      _addProviderUserInfo(providerInfo, arr, PROVIDER_ID_INDEX_MAP[providerInfo.providerId]);\n    }\n  }\n\n  arr[23] = user.createdAt;\n  arr[24] = user.lastLoginAt;\n  arr[25] = user.phoneNumber;\n  arr[26] = user.disabled;\n  return arr;\n};\n\nvar _transUserJson = function (user) {\n  var newUser = {};\n\n  _.each(_.pick(user, EXPORTED_JSON_KEYS), function (value, key) {\n    var newKey = EXPORTED_JSON_KEYS_RENAMING[key] || key;\n    newUser[newKey] = value;\n  });\n\n  if (newUser.passwordHash) {\n    newUser.passwordHash = _convertToNormalBase64(newUser.passwordHash);\n  }\n\n  if (newUser.salt) {\n    newUser.salt = _convertToNormalBase64(newUser.salt);\n  }\n\n  if (user.providerUserInfo) {\n    newUser.providerUserInfo = [];\n    user.providerUserInfo.forEach(function (providerInfo) {\n      if (!_.includes(Object.keys(PROVIDER_ID_INDEX_MAP), providerInfo.providerId)) {\n        return;\n      }\n\n      newUser.providerUserInfo.push(_.pick(providerInfo, EXPORTED_PROVIDER_USER_INFO_KEYS));\n    });\n  }\n\n  return newUser;\n};\n\nvar validateOptions = function (options, fileName) {\n  var exportOptions = {};\n\n  if (fileName === undefined) {\n    return utils.reject(\"Must specify data file\", {\n      exit: 1\n    });\n  }\n\n  var extName = path.extname(fileName.toLowerCase());\n\n  if (extName === \".csv\") {\n    exportOptions.format = \"csv\";\n  } else if (extName === \".json\") {\n    exportOptions.format = \"json\";\n  } else if (options.format) {\n    var format = options.format.toLowerCase();\n\n    if (format === \"csv\" || format === \"json\") {\n      exportOptions.format = format;\n    } else {\n      return utils.reject(\"Unsupported data file format, should be csv or json\", {\n        exit: 1\n      });\n    }\n  } else {\n    return utils.reject(\"Please specify data file format in file name, or use `format` parameter\", {\n      exit: 1\n    });\n  }\n\n  return exportOptions;\n};\n\nvar _createWriteUsersToFile = function () {\n  var jsonSep = \"\";\n  return function (userList, format, writeStream) {\n    userList.map(function (user) {\n      if (user.passwordHash && user.version !== 0) {\n        delete user.passwordHash;\n        delete user.salt;\n      }\n\n      if (format === \"csv\") {\n        writeStream.write(_transUserToArray(user).join(\",\") + \",\" + os.EOL, \"utf8\");\n      } else {\n        writeStream.write(jsonSep + JSON.stringify(_transUserJson(user), null, 2), \"utf8\");\n        jsonSep = \",\" + os.EOL;\n      }\n    });\n  };\n};\n\nvar serialExportUsers = function (projectId, options) {\n  if (!options.writeUsersToFile) {\n    options.writeUsersToFile = _createWriteUsersToFile();\n  }\n\n  var postBody = {\n    targetProjectId: projectId,\n    maxResults: options.batchSize\n  };\n\n  if (options.nextPageToken) {\n    postBody.nextPageToken = options.nextPageToken;\n  }\n\n  if (!options.timeoutRetryCount) {\n    options.timeoutRetryCount = 0;\n  }\n\n  return api.request(\"POST\", \"/identitytoolkit/v3/relyingparty/downloadAccount\", {\n    auth: true,\n    json: true,\n    data: postBody,\n    origin: api.googleOrigin\n  }).then(function (ret) {\n    options.timeoutRetryCount = 0;\n    var userList = ret.body.users;\n\n    if (userList && userList.length > 0) {\n      options.writeUsersToFile(userList, options.format, options.writeStream);\n      utils.logSuccess(\"Exported \" + userList.length + \" account(s) successfully.\");\n\n      if (!ret.body.nextPageToken) {\n        return;\n      }\n\n      options.nextPageToken = ret.body.nextPageToken;\n      return serialExportUsers(projectId, options);\n    }\n  }).catch(err => {\n    if (err.original.code === \"ETIMEDOUT\") {\n      options.timeoutRetryCount++;\n\n      if (options.timeoutRetryCount > 5) {\n        return err;\n      }\n\n      return serialExportUsers(projectId, options);\n    }\n  });\n};\n\nvar accountExporter = {\n  validateOptions: validateOptions,\n  serialExportUsers: serialExportUsers\n};\nmodule.exports = accountExporter;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/accountExporter.js"],"names":["os","require","path","_","api","utils","EXPORTED_JSON_KEYS","EXPORTED_JSON_KEYS_RENAMING","lastLoginAt","EXPORTED_PROVIDER_USER_INFO_KEYS","PROVIDER_ID_INDEX_MAP","_escapeComma","str","indexOf","_convertToNormalBase64","data","replace","_addProviderUserInfo","providerInfo","arr","startPos","rawId","email","displayName","photoUrl","_transUserToArray","user","Array","fill","localId","emailVerified","passwordHash","salt","i","providerUserInfo","length","providerId","createdAt","phoneNumber","disabled","_transUserJson","newUser","each","pick","value","key","newKey","forEach","includes","Object","keys","push","validateOptions","options","fileName","exportOptions","undefined","reject","exit","extName","extname","toLowerCase","format","_createWriteUsersToFile","jsonSep","userList","writeStream","map","version","write","join","EOL","JSON","stringify","serialExportUsers","projectId","writeUsersToFile","postBody","targetProjectId","maxResults","batchSize","nextPageToken","timeoutRetryCount","request","auth","json","origin","googleOrigin","then","ret","body","users","logSuccess","catch","err","original","code","accountExporter","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar os = require(\"os\");\nvar path = require(\"path\");\nvar _ = require(\"lodash\");\nvar api = require(\"./api\");\nvar utils = require(\"./utils\");\nvar EXPORTED_JSON_KEYS = [\n    \"localId\",\n    \"email\",\n    \"emailVerified\",\n    \"passwordHash\",\n    \"salt\",\n    \"displayName\",\n    \"photoUrl\",\n    \"lastLoginAt\",\n    \"createdAt\",\n    \"phoneNumber\",\n    \"disabled\",\n];\nvar EXPORTED_JSON_KEYS_RENAMING = {\n    lastLoginAt: \"lastSignedInAt\",\n};\nvar EXPORTED_PROVIDER_USER_INFO_KEYS = [\"providerId\", \"rawId\", \"email\", \"displayName\", \"photoUrl\"];\nvar PROVIDER_ID_INDEX_MAP = {\n    \"google.com\": 7,\n    \"facebook.com\": 11,\n    \"twitter.com\": 15,\n    \"github.com\": 19,\n};\nvar _escapeComma = function (str) {\n    if (str.indexOf(\",\") !== -1) {\n        return `\"${str}\"`;\n    }\n    return str;\n};\nvar _convertToNormalBase64 = function (data) {\n    return data.replace(/_/g, \"/\").replace(/-/g, \"+\");\n};\nvar _addProviderUserInfo = function (providerInfo, arr, startPos) {\n    arr[startPos] = providerInfo.rawId;\n    arr[startPos + 1] = providerInfo.email || \"\";\n    arr[startPos + 2] = _escapeComma(providerInfo.displayName || \"\");\n    arr[startPos + 3] = providerInfo.photoUrl || \"\";\n};\nvar _transUserToArray = function (user) {\n    var arr = Array(27).fill(\"\");\n    arr[0] = user.localId;\n    arr[1] = user.email || \"\";\n    arr[2] = user.emailVerified || false;\n    arr[3] = _convertToNormalBase64(user.passwordHash || \"\");\n    arr[4] = _convertToNormalBase64(user.salt || \"\");\n    arr[5] = _escapeComma(user.displayName || \"\");\n    arr[6] = user.photoUrl || \"\";\n    for (var i = 0; i < (!user.providerUserInfo ? 0 : user.providerUserInfo.length); i++) {\n        var providerInfo = user.providerUserInfo[i];\n        if (providerInfo && PROVIDER_ID_INDEX_MAP[providerInfo.providerId]) {\n            _addProviderUserInfo(providerInfo, arr, PROVIDER_ID_INDEX_MAP[providerInfo.providerId]);\n        }\n    }\n    arr[23] = user.createdAt;\n    arr[24] = user.lastLoginAt;\n    arr[25] = user.phoneNumber;\n    arr[26] = user.disabled;\n    return arr;\n};\nvar _transUserJson = function (user) {\n    var newUser = {};\n    _.each(_.pick(user, EXPORTED_JSON_KEYS), function (value, key) {\n        var newKey = EXPORTED_JSON_KEYS_RENAMING[key] || key;\n        newUser[newKey] = value;\n    });\n    if (newUser.passwordHash) {\n        newUser.passwordHash = _convertToNormalBase64(newUser.passwordHash);\n    }\n    if (newUser.salt) {\n        newUser.salt = _convertToNormalBase64(newUser.salt);\n    }\n    if (user.providerUserInfo) {\n        newUser.providerUserInfo = [];\n        user.providerUserInfo.forEach(function (providerInfo) {\n            if (!_.includes(Object.keys(PROVIDER_ID_INDEX_MAP), providerInfo.providerId)) {\n                return;\n            }\n            newUser.providerUserInfo.push(_.pick(providerInfo, EXPORTED_PROVIDER_USER_INFO_KEYS));\n        });\n    }\n    return newUser;\n};\nvar validateOptions = function (options, fileName) {\n    var exportOptions = {};\n    if (fileName === undefined) {\n        return utils.reject(\"Must specify data file\", { exit: 1 });\n    }\n    var extName = path.extname(fileName.toLowerCase());\n    if (extName === \".csv\") {\n        exportOptions.format = \"csv\";\n    }\n    else if (extName === \".json\") {\n        exportOptions.format = \"json\";\n    }\n    else if (options.format) {\n        var format = options.format.toLowerCase();\n        if (format === \"csv\" || format === \"json\") {\n            exportOptions.format = format;\n        }\n        else {\n            return utils.reject(\"Unsupported data file format, should be csv or json\", { exit: 1 });\n        }\n    }\n    else {\n        return utils.reject(\"Please specify data file format in file name, or use `format` parameter\", {\n            exit: 1,\n        });\n    }\n    return exportOptions;\n};\nvar _createWriteUsersToFile = function () {\n    var jsonSep = \"\";\n    return function (userList, format, writeStream) {\n        userList.map(function (user) {\n            if (user.passwordHash && user.version !== 0) {\n                delete user.passwordHash;\n                delete user.salt;\n            }\n            if (format === \"csv\") {\n                writeStream.write(_transUserToArray(user).join(\",\") + \",\" + os.EOL, \"utf8\");\n            }\n            else {\n                writeStream.write(jsonSep + JSON.stringify(_transUserJson(user), null, 2), \"utf8\");\n                jsonSep = \",\" + os.EOL;\n            }\n        });\n    };\n};\nvar serialExportUsers = function (projectId, options) {\n    if (!options.writeUsersToFile) {\n        options.writeUsersToFile = _createWriteUsersToFile();\n    }\n    var postBody = {\n        targetProjectId: projectId,\n        maxResults: options.batchSize,\n    };\n    if (options.nextPageToken) {\n        postBody.nextPageToken = options.nextPageToken;\n    }\n    if (!options.timeoutRetryCount) {\n        options.timeoutRetryCount = 0;\n    }\n    return api\n        .request(\"POST\", \"/identitytoolkit/v3/relyingparty/downloadAccount\", {\n        auth: true,\n        json: true,\n        data: postBody,\n        origin: api.googleOrigin,\n    })\n        .then(function (ret) {\n        options.timeoutRetryCount = 0;\n        var userList = ret.body.users;\n        if (userList && userList.length > 0) {\n            options.writeUsersToFile(userList, options.format, options.writeStream);\n            utils.logSuccess(\"Exported \" + userList.length + \" account(s) successfully.\");\n            if (!ret.body.nextPageToken) {\n                return;\n            }\n            options.nextPageToken = ret.body.nextPageToken;\n            return serialExportUsers(projectId, options);\n        }\n    })\n        .catch((err) => {\n        if (err.original.code === \"ETIMEDOUT\") {\n            options.timeoutRetryCount++;\n            if (options.timeoutRetryCount > 5) {\n                return err;\n            }\n            return serialExportUsers(projectId, options);\n        }\n    });\n};\nvar accountExporter = {\n    validateOptions: validateOptions,\n    serialExportUsers: serialExportUsers,\n};\nmodule.exports = accountExporter;\n"]},"metadata":{},"sourceType":"script"}
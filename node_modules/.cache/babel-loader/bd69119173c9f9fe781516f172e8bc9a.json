{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst command_1 = require(\"../command\");\n\nconst clc = require(\"cli-color\");\n\nconst fsi = require(\"../firestore/indexes\");\n\nconst logger = require(\"../logger\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nmodule.exports = new command_1.Command(\"firestore:indexes\").description(\"List indexes in your project's Cloud Firestore database.\").option(\"--pretty\", \"Pretty print. When not specified the indexes are printed in the \" + \"JSON specification format.\").before(requirePermissions_1.requirePermissions, [\"datastore.indexes.list\"]).action(options => __awaiter(this, void 0, void 0, function* () {\n  const indexApi = new fsi.FirestoreIndexes();\n  const indexes = yield indexApi.listIndexes(options.project);\n  const fieldOverrides = yield indexApi.listFieldOverrides(options.project);\n  const indexSpec = indexApi.makeIndexSpec(indexes, fieldOverrides);\n\n  if (options.pretty) {\n    logger.info(clc.bold.white(\"Compound Indexes\"));\n    indexApi.prettyPrintIndexes(indexes);\n\n    if (fieldOverrides) {\n      logger.info();\n      logger.info(clc.bold.white(\"Field Overrides\"));\n      indexApi.printFieldOverrides(fieldOverrides);\n    }\n  } else {\n    logger.info(JSON.stringify(indexSpec, undefined, 2));\n  }\n\n  return indexSpec;\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/firestore-indexes-list.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","command_1","require","clc","fsi","logger","requirePermissions_1","module","Command","description","option","before","requirePermissions","action","options","indexApi","FirestoreIndexes","indexes","listIndexes","project","fieldOverrides","listFieldOverrides","indexSpec","makeIndexSpec","pretty","info","bold","white","prettyPrintIndexes","printFieldOverrides","JSON","stringify","undefined"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"../command\");\nconst clc = require(\"cli-color\");\nconst fsi = require(\"../firestore/indexes\");\nconst logger = require(\"../logger\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nmodule.exports = new command_1.Command(\"firestore:indexes\")\n    .description(\"List indexes in your project's Cloud Firestore database.\")\n    .option(\"--pretty\", \"Pretty print. When not specified the indexes are printed in the \" +\n    \"JSON specification format.\")\n    .before(requirePermissions_1.requirePermissions, [\"datastore.indexes.list\"])\n    .action((options) => __awaiter(this, void 0, void 0, function* () {\n    const indexApi = new fsi.FirestoreIndexes();\n    const indexes = yield indexApi.listIndexes(options.project);\n    const fieldOverrides = yield indexApi.listFieldOverrides(options.project);\n    const indexSpec = indexApi.makeIndexSpec(indexes, fieldOverrides);\n    if (options.pretty) {\n        logger.info(clc.bold.white(\"Compound Indexes\"));\n        indexApi.prettyPrintIndexes(indexes);\n        if (fieldOverrides) {\n            logger.info();\n            logger.info(clc.bold.white(\"Field Overrides\"));\n            indexApi.printFieldOverrides(fieldOverrides);\n        }\n    }\n    else {\n        logger.info(JSON.stringify(indexSpec, undefined, 2));\n    }\n    return indexSpec;\n}));\n"]},"metadata":{},"sourceType":"script"}
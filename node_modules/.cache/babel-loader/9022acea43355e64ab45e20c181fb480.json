{"ast":null,"code":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar isUrl = require('is-url');\n\nvar _ = require('lodash');\n\nvar minimatch = require('minimatch');\n\nvar pathToRegexp = require('path-to-regexp');\n\nvar slasher = require('glob-slasher');\n\nfunction formatExternalUrl(u) {\n  var cleaned = u.replace('/http:/', 'http://').replace('/https:/', 'https://');\n  return isUrl(cleaned) ? cleaned : u;\n}\n\nfunction addQuery(url, qs) {\n  if (url.indexOf('?') >= 0) {\n    return url + '&' + qs;\n  } else if (qs && qs.length) {\n    return url + '?' + qs;\n  }\n\n  return url;\n}\n\nvar Redirect = function (source, destination, type) {\n  this.type = type || 301;\n  this.source = slasher(source);\n  this.destination = destination;\n\n  if (this.destination.match(/(?:^|\\/):/)) {\n    this.captureKeys = [];\n    this.capture = pathToRegexp(this.source, this.captureKeys);\n    this.compileDestination = pathToRegexp.compile(this.destination);\n  }\n};\n\nRedirect.prototype.test = function (url) {\n  var qs = '';\n\n  if (url.indexOf('?') >= 0) {\n    var parts = url.split('?');\n    url = parts[0];\n    qs = parts[1];\n  }\n\n  var match;\n\n  if (this.capture) {\n    match = this.capture.exec(url);\n  }\n\n  if (match) {\n    var params = {};\n\n    for (var i = 0; i < this.captureKeys.length; i++) {\n      var m = match[i + 1];\n\n      if (m && m.indexOf('/') >= 0) {\n        m = m.split('/');\n      }\n\n      params[this.captureKeys[i].name] = m;\n    }\n\n    try {\n      var dest = this.compileDestination(params);\n      return {\n        type: this.type,\n        destination: addQuery(dest, qs)\n      };\n    } catch (e) {\n      return undefined;\n    }\n  } else if (minimatch(url, this.source)) {\n    return {\n      type: this.type,\n      destination: addQuery(this.destination, qs)\n    };\n  }\n\n  return undefined;\n};\n\nmodule.exports = function () {\n  return function (req, res, next) {\n    var config = _.get(req, 'superstatic.redirects');\n\n    if (!config) {\n      return next();\n    }\n\n    var redirects = [];\n\n    if (_.isArray(config)) {\n      config.forEach(function (redir) {\n        redirects.push(new Redirect(redir.source, redir.destination, redir.type));\n      });\n    } else {\n      throw new Error('redirects provided in an unrecognized format');\n    }\n\n    var matcher = function (url) {\n      for (var i = 0; i < redirects.length; i++) {\n        var result = redirects[i].test(url);\n\n        if (result) {\n          return result;\n        }\n      }\n\n      return undefined;\n    };\n\n    var match = matcher(req.url);\n\n    if (!match) {\n      return next();\n    } // Remove leading slash of a url\n\n\n    var redirectUrl = formatExternalUrl(match.destination);\n    return res.superstatic.handle({\n      redirect: redirectUrl,\n      status: match.type\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/superstatic/lib/middleware/redirects.js"],"names":["isUrl","require","_","minimatch","pathToRegexp","slasher","formatExternalUrl","u","cleaned","replace","addQuery","url","qs","indexOf","length","Redirect","source","destination","type","match","captureKeys","capture","compileDestination","compile","prototype","test","parts","split","exec","params","i","m","name","dest","e","undefined","module","exports","req","res","next","config","get","redirects","isArray","forEach","redir","push","Error","matcher","result","redirectUrl","superstatic","handle","redirect","status"],"mappings":"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","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar isUrl = require('is-url');\nvar _ = require('lodash');\n\nvar minimatch = require('minimatch');\nvar pathToRegexp = require('path-to-regexp');\nvar slasher = require('glob-slasher');\n\nfunction formatExternalUrl(u) {\n  var cleaned = u\n    .replace('/http:/', 'http://')\n    .replace('/https:/', 'https://');\n\n  return (isUrl(cleaned)) ? cleaned : u;\n}\n\nfunction addQuery(url, qs) {\n  if (url.indexOf('?') >= 0) {\n    return url + '&' + qs;\n  } else if (qs && qs.length) {\n    return url + '?' + qs;\n  }\n  return url;\n}\n\nvar Redirect = function(source, destination, type) {\n  this.type = type || 301;\n  this.source = slasher(source);\n  this.destination = destination;\n\n  if (this.destination.match(/(?:^|\\/):/)) {\n    this.captureKeys = [];\n    this.capture = pathToRegexp(this.source, this.captureKeys);\n    this.compileDestination = pathToRegexp.compile(this.destination);\n  }\n};\n\nRedirect.prototype.test = function(url) {\n  var qs = '';\n  if (url.indexOf('?') >= 0) {\n    var parts = url.split('?');\n    url = parts[0];\n    qs = parts[1];\n  }\n\n  var match;\n  if (this.capture) {\n    match = this.capture.exec(url);\n  }\n  if (match) {\n    var params = {};\n    for (var i = 0; i < this.captureKeys.length; i++) {\n      var m = match[i + 1];\n      if (m && m.indexOf('/') >= 0) {\n        m = m.split('/');\n      }\n\n      params[this.captureKeys[i].name] = m;\n    }\n\n    try {\n      var dest = this.compileDestination(params);\n      return {\n        type: this.type,\n        destination: addQuery(dest, qs)\n      };\n    } catch (e) {\n      return undefined;\n    }\n  } else if (minimatch(url, this.source)) {\n    return {\n      type: this.type,\n      destination: addQuery(this.destination, qs)\n    };\n  }\n  return undefined;\n};\n\nmodule.exports = function() {\n  return function(req, res, next) {\n    var config = _.get(req, 'superstatic.redirects');\n    if (!config) {\n      return next();\n    }\n\n    var redirects = [];\n    if (_.isArray(config)) {\n      config.forEach(function(redir) {\n        redirects.push(new Redirect(redir.source, redir.destination, redir.type));\n      });\n    } else {\n      throw new Error('redirects provided in an unrecognized format');\n    }\n\n    var matcher = function(url) {\n      for (var i = 0; i < redirects.length; i++) {\n        var result = redirects[i].test(url);\n        if (result) { return result; }\n      }\n      return undefined;\n    };\n\n    var match = matcher(req.url);\n\n    if (!match) {\n      return next();\n    }\n\n    // Remove leading slash of a url\n    var redirectUrl = formatExternalUrl(match.destination);\n\n    return res.superstatic.handle({\n      redirect: redirectUrl,\n      status: match.type\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"script"}
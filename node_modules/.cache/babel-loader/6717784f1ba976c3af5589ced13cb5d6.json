{"ast":null,"code":"/**\n * Copyright 2012 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar request = require('request'),\n    pkg = require('../package.json');\n/**\n * Default transporter constructor.\n * Wraps request and callback functions.\n */\n\n\nfunction DefaultTransporter() {}\n/**\n * Default user agent.\n */\n\n\nDefaultTransporter.prototype.USER_AGENT = 'google-api-nodejs-client/' + pkg.version;\n/**\n * Configures request options before making a request.\n * @param {object} opts Options to configure.\n * @return {object} Configured options.\n */\n\nDefaultTransporter.prototype.configure = function (opts) {\n  // set transporter user agent\n  opts.headers = opts.headers || {};\n\n  if (!opts.headers['User-Agent']) {\n    opts.headers['User-Agent'] = this.USER_AGENT;\n  } else if (opts.headers['User-Agent'].indexOf(this.USER_AGENT) === -1) {\n    opts.headers['User-Agent'] = opts.headers['User-Agent'] + ' ' + this.USER_AGENT;\n  }\n\n  return opts;\n};\n/**\n * Makes a request with given options and invokes callback.\n * @param {object} opts Options.\n * @param {Function=} opt_callback Optional callback.\n * @return {Request} Request object\n */\n\n\nDefaultTransporter.prototype.request = function (opts, opt_callback) {\n  opts = this.configure(opts);\n  return request(opts.uri || opts.url, opts, this.wrapCallback_(opt_callback));\n};\n/**\n * Wraps the response callback.\n * @param {Function=} opt_callback Optional callback.\n * @return {Function} Wrapped callback function.\n * @private\n */\n\n\nDefaultTransporter.prototype.wrapCallback_ = function (opt_callback) {\n  return function (err, res, body) {\n    if (err || !body) {\n      return opt_callback && opt_callback(err, body, res);\n    } // Only and only application/json responses should\n    // be decoded back to JSON, but there are cases API back-ends\n    // responds without proper content-type.\n\n\n    try {\n      body = JSON.parse(body);\n    } catch (err) {\n      /* no op */\n    }\n\n    if (body && body.error && res.statusCode !== 200) {\n      if (typeof body.error === 'string') {\n        err = new Error(body.error);\n        err.code = res.statusCode;\n      } else if (Array.isArray(body.error.errors)) {\n        err = new Error(body.error.errors.map(function (err) {\n          return err.message;\n        }).join('\\n'));\n        err.code = body.error.code;\n        err.errors = body.error.errors;\n      } else {\n        err = new Error(body.error.message);\n        err.code = body.error.code || res.statusCode;\n      }\n\n      body = null;\n    } else if (res.statusCode >= 500) {\n      // Consider all '500 responses' errors.\n      err = new Error(body);\n      err.code = res.statusCode;\n      body = null;\n    }\n\n    if (opt_callback) {\n      opt_callback(err, body, res);\n    }\n  };\n};\n/**\n * Exports DefaultTransporter.\n */\n\n\nmodule.exports = DefaultTransporter;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/google-auto-auth/node_modules/google-auth-library/lib/transporters.js"],"names":["request","require","pkg","DefaultTransporter","prototype","USER_AGENT","version","configure","opts","headers","indexOf","opt_callback","uri","url","wrapCallback_","err","res","body","JSON","parse","error","statusCode","Error","code","Array","isArray","errors","map","message","join","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2012 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nvar request = require('request'),\n  pkg = require('../package.json');\n\n/**\n * Default transporter constructor.\n * Wraps request and callback functions.\n */\nfunction DefaultTransporter() {}\n\n/**\n * Default user agent.\n */\nDefaultTransporter.prototype.USER_AGENT =\n  'google-api-nodejs-client/' + pkg.version;\n\n/**\n * Configures request options before making a request.\n * @param {object} opts Options to configure.\n * @return {object} Configured options.\n */\nDefaultTransporter.prototype.configure = function(opts) {\n  // set transporter user agent\n  opts.headers = opts.headers || {};\n  if (!opts.headers['User-Agent']) {\n    opts.headers['User-Agent'] = this.USER_AGENT;\n  } else if (opts.headers['User-Agent'].indexOf(this.USER_AGENT) === -1) {\n    opts.headers['User-Agent'] = opts.headers['User-Agent'] + ' ' + this.USER_AGENT;\n  }\n  return opts;\n};\n\n/**\n * Makes a request with given options and invokes callback.\n * @param {object} opts Options.\n * @param {Function=} opt_callback Optional callback.\n * @return {Request} Request object\n */\nDefaultTransporter.prototype.request = function(opts, opt_callback) {\n  opts = this.configure(opts);\n  return request(opts.uri || opts.url, opts, this.wrapCallback_(opt_callback));\n};\n\n/**\n * Wraps the response callback.\n * @param {Function=} opt_callback Optional callback.\n * @return {Function} Wrapped callback function.\n * @private\n */\nDefaultTransporter.prototype.wrapCallback_ = function(opt_callback) {\n  return function(err, res, body) {\n    if (err || !body) {\n      return opt_callback && opt_callback(err, body, res);\n    }\n    // Only and only application/json responses should\n    // be decoded back to JSON, but there are cases API back-ends\n    // responds without proper content-type.\n    try {\n      body = JSON.parse(body);\n    } catch (err) { /* no op */ }\n\n    if (body && body.error && res.statusCode !== 200) {\n      if (typeof body.error === 'string') {\n        err = new Error(body.error);\n        err.code = res.statusCode;\n\n      } else if (Array.isArray(body.error.errors)) {\n        err = new Error(body.error.errors.map(\n                         function(err) { return err.message; }\n                       ).join('\\n'));\n        err.code = body.error.code;\n        err.errors = body.error.errors;\n\n      } else {\n        err = new Error(body.error.message);\n        err.code = body.error.code || res.statusCode;\n      }\n\n      body = null;\n\n    } else if (res.statusCode >= 500) {\n      // Consider all '500 responses' errors.\n      err = new Error(body);\n      err.code = res.statusCode;\n      body = null;\n    }\n\n    if (opt_callback) {\n      opt_callback(err, body, res);\n    }\n  };\n};\n\n/**\n * Exports DefaultTransporter.\n */\nmodule.exports = DefaultTransporter;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar _require = require(\"../command\"),\n    Command = _require.Command;\n\nvar requireInstance = require(\"../requireInstance\");\n\nvar _require2 = require(\"../requirePermissions\"),\n    requirePermissions = _require2.requirePermissions;\n\nvar utils = require(\"../utils\");\n\nvar profiler = require(\"../profiler\");\n\nvar description = \"profile the Realtime Database and generate a usage report\";\nmodule.exports = new Command(\"database:profile\").description(description).option(\"-o, --output <filename>\", \"save the output to the specified file\").option(\"-d, --duration <seconds>\", \"collect database usage information for the specified number of seconds\").option(\"--raw\", \"output the raw stats collected as newline delimited json\").option(\"--no-collapse\", \"prevent collapsing similar paths into $wildcard locations\").option(\"-i, --input <filename>\", \"generate the report based on the specified file instead \" + \"of streaming logs from the database\").option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\").before(requirePermissions, [\"firebasedatabase.instances.update\"]).before(requireInstance).action(function (options) {\n  if (options.raw && options.input) {\n    return utils.reject(\"Cannot specify both an input file and raw format\", {\n      exit: 1\n    });\n  } else if (options.parent.json && options.raw) {\n    return utils.reject(\"Cannot output raw data in json format\", {\n      exit: 1\n    });\n  } else if (options.input && _.has(options, \"duration\")) {\n    return utils.reject(\"Cannot specify a duration for input files\", {\n      exit: 1\n    });\n  } else if (_.has(options, \"duration\") && options.duration <= 0) {\n    return utils.reject(\"Must specify a positive number of seconds\", {\n      exit: 1\n    });\n  }\n\n  return profiler(options);\n});","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/database-profile.js"],"names":["_","require","Command","requireInstance","requirePermissions","utils","profiler","description","module","exports","option","before","action","options","raw","input","reject","exit","parent","json","has","duration"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;eACkBA,OAAO,CAAC,YAAD,C;IAAnBC,O,YAAAA,O;;AACN,IAAIC,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAA7B;;gBAC6BA,OAAO,CAAC,uBAAD,C;IAA9BG,kB,aAAAA,kB;;AACN,IAAIC,KAAK,GAAGJ,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIM,WAAW,GAAG,2DAAlB;AACAC,MAAM,CAACC,OAAP,GAAiB,IAAIP,OAAJ,CAAY,kBAAZ,EACZK,WADY,CACAA,WADA,EAEZG,MAFY,CAEL,yBAFK,EAEsB,uCAFtB,EAGZA,MAHY,CAGL,0BAHK,EAGuB,wEAHvB,EAIZA,MAJY,CAIL,OAJK,EAII,0DAJJ,EAKZA,MALY,CAKL,eALK,EAKY,2DALZ,EAMZA,MANY,CAML,wBANK,EAMqB,6DAClC,qCAPa,EAQZA,MARY,CAQL,uBARK,EAQoB,wFARpB,EASZC,MATY,CASLP,kBATK,EASe,CAAC,mCAAD,CATf,EAUZO,MAVY,CAULR,eAVK,EAWZS,MAXY,CAWL,UAAUC,OAAV,EAAmB;AAC3B,MAAIA,OAAO,CAACC,GAAR,IAAeD,OAAO,CAACE,KAA3B,EAAkC;AAC9B,WAAOV,KAAK,CAACW,MAAN,CAAa,kDAAb,EAAiE;AACpEC,MAAAA,IAAI,EAAE;AAD8D,KAAjE,CAAP;AAGH,GAJD,MAKK,IAAIJ,OAAO,CAACK,MAAR,CAAeC,IAAf,IAAuBN,OAAO,CAACC,GAAnC,EAAwC;AACzC,WAAOT,KAAK,CAACW,MAAN,CAAa,uCAAb,EAAsD;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAtD,CAAP;AACH,GAFI,MAGA,IAAIJ,OAAO,CAACE,KAAR,IAAiBf,CAAC,CAACoB,GAAF,CAAMP,OAAN,EAAe,UAAf,CAArB,EAAiD;AAClD,WAAOR,KAAK,CAACW,MAAN,CAAa,2CAAb,EAA0D;AAC7DC,MAAAA,IAAI,EAAE;AADuD,KAA1D,CAAP;AAGH,GAJI,MAKA,IAAIjB,CAAC,CAACoB,GAAF,CAAMP,OAAN,EAAe,UAAf,KAA8BA,OAAO,CAACQ,QAAR,IAAoB,CAAtD,EAAyD;AAC1D,WAAOhB,KAAK,CAACW,MAAN,CAAa,2CAAb,EAA0D;AAC7DC,MAAAA,IAAI,EAAE;AADuD,KAA1D,CAAP;AAGH;;AACD,SAAOX,QAAQ,CAACO,OAAD,CAAf;AACH,CA/BgB,CAAjB","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar { Command } = require(\"../command\");\nvar requireInstance = require(\"../requireInstance\");\nvar { requirePermissions } = require(\"../requirePermissions\");\nvar utils = require(\"../utils\");\nvar profiler = require(\"../profiler\");\nvar description = \"profile the Realtime Database and generate a usage report\";\nmodule.exports = new Command(\"database:profile\")\n    .description(description)\n    .option(\"-o, --output <filename>\", \"save the output to the specified file\")\n    .option(\"-d, --duration <seconds>\", \"collect database usage information for the specified number of seconds\")\n    .option(\"--raw\", \"output the raw stats collected as newline delimited json\")\n    .option(\"--no-collapse\", \"prevent collapsing similar paths into $wildcard locations\")\n    .option(\"-i, --input <filename>\", \"generate the report based on the specified file instead \" +\n    \"of streaming logs from the database\")\n    .option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\")\n    .before(requirePermissions, [\"firebasedatabase.instances.update\"])\n    .before(requireInstance)\n    .action(function (options) {\n    if (options.raw && options.input) {\n        return utils.reject(\"Cannot specify both an input file and raw format\", {\n            exit: 1,\n        });\n    }\n    else if (options.parent.json && options.raw) {\n        return utils.reject(\"Cannot output raw data in json format\", { exit: 1 });\n    }\n    else if (options.input && _.has(options, \"duration\")) {\n        return utils.reject(\"Cannot specify a duration for input files\", {\n            exit: 1,\n        });\n    }\n    else if (_.has(options, \"duration\") && options.duration <= 0) {\n        return utils.reject(\"Must specify a positive number of seconds\", {\n            exit: 1,\n        });\n    }\n    return profiler(options);\n});\n"]},"metadata":{},"sourceType":"script"}
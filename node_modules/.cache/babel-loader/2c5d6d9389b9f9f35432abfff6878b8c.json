{"ast":null,"code":"// imported from ncp (this is temporary, will rewrite)\nvar fs = require('graceful-fs');\n\nvar path = require('path');\n\nvar utimes = require('../util/utimes');\n\nfunction ncp(source, dest, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n\n  var basePath = process.cwd();\n  var currentPath = path.resolve(basePath, source);\n  var targetPath = path.resolve(basePath, dest);\n  var filter = options.filter;\n  var transform = options.transform;\n  var clobber = options.clobber !== false;\n  var dereference = options.dereference;\n  var preserveTimestamps = options.preserveTimestamps === true;\n  var errs = null;\n  var started = 0;\n  var finished = 0;\n  var running = 0; // this is pretty useless now that we're using graceful-fs\n  // consider removing\n\n  var limit = options.limit || 512;\n  startCopy(currentPath);\n\n  function startCopy(source) {\n    started++;\n\n    if (filter) {\n      if (filter instanceof RegExp) {\n        if (!filter.test(source)) {\n          return doneOne(true);\n        }\n      } else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return doneOne(true);\n        }\n      }\n    }\n\n    return getStats(source);\n  }\n\n  function getStats(source) {\n    var stat = dereference ? fs.stat : fs.lstat;\n\n    if (running >= limit) {\n      return setImmediate(function () {\n        getStats(source);\n      });\n    }\n\n    running++;\n    stat(source, function (err, stats) {\n      if (err) return onError(err); // We need to get the mode from the stats object and preserve it.\n\n      var item = {\n        name: source,\n        mode: stats.mode,\n        mtime: stats.mtime,\n        // modified time\n        atime: stats.atime,\n        // access time\n        stats: stats // temporary\n\n      };\n\n      if (stats.isDirectory()) {\n        return onDir(item);\n      } else if (stats.isFile()) {\n        return onFile(item);\n      } else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source);\n      }\n    });\n  }\n\n  function onFile(file) {\n    var target = file.name.replace(currentPath, targetPath);\n    isWritable(target, function (writable) {\n      if (writable) {\n        copyFile(file, target);\n      } else {\n        if (clobber) {\n          rmFile(target, function () {\n            copyFile(file, target);\n          });\n        } else {\n          doneOne();\n        }\n      }\n    });\n  }\n\n  function copyFile(file, target) {\n    var readStream = fs.createReadStream(file.name);\n    var writeStream = fs.createWriteStream(target, {\n      mode: file.mode\n    });\n    readStream.on('error', onError);\n    writeStream.on('error', onError);\n\n    if (transform) {\n      transform(readStream, writeStream, file);\n    } else {\n      writeStream.on('open', function () {\n        readStream.pipe(writeStream);\n      });\n    }\n\n    writeStream.once('finish', function () {\n      fs.chmod(target, file.mode, function (err) {\n        if (err) return onError(err);\n\n        if (preserveTimestamps) {\n          utimes.utimesMillis(target, file.atime, file.mtime, function (err) {\n            if (err) return onError(err);\n            return doneOne();\n          });\n        } else {\n          doneOne();\n        }\n      });\n    });\n  }\n\n  function rmFile(file, done) {\n    fs.unlink(file, function (err) {\n      if (err) return onError(err);\n      return done();\n    });\n  }\n\n  function onDir(dir) {\n    var target = dir.name.replace(currentPath, targetPath);\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target);\n      }\n\n      copyDir(dir.name);\n    });\n  }\n\n  function mkDir(dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) return onError(err); // despite setting mode in fs.mkdir, doesn't seem to work\n      // so we set it here.\n\n      fs.chmod(target, dir.mode, function (err) {\n        if (err) return onError(err);\n        copyDir(dir.name);\n      });\n    });\n  }\n\n  function copyDir(dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) return onError(err);\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item));\n      });\n      return doneOne();\n    });\n  }\n\n  function onLink(link) {\n    var target = link.replace(currentPath, targetPath);\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) return onError(err);\n      checkLink(resolvedPath, target);\n    });\n  }\n\n  function checkLink(resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath);\n    }\n\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target);\n      }\n\n      fs.readlink(target, function (err, targetDest) {\n        if (err) return onError(err);\n\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest);\n        }\n\n        if (targetDest === resolvedPath) {\n          return doneOne();\n        }\n\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target);\n        });\n      });\n    });\n  }\n\n  function makeLink(linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) return onError(err);\n      return doneOne();\n    });\n  }\n\n  function isWritable(path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true);\n        return done(false);\n      }\n\n      return done(false);\n    });\n  }\n\n  function onError(err) {\n    if (options.stopOnError) {\n      return callback(err);\n    } else if (!errs && options.errs) {\n      errs = fs.createWriteStream(options.errs);\n    } else if (!errs) {\n      errs = [];\n    }\n\n    if (typeof errs.write === 'undefined') {\n      errs.push(err);\n    } else {\n      errs.write(err.stack + '\\n\\n');\n    }\n\n    return doneOne();\n  }\n\n  function doneOne(skipped) {\n    if (!skipped) running--;\n    finished++;\n\n    if (started === finished && running === 0) {\n      if (callback !== undefined) {\n        return errs ? callback(errs) : callback(null);\n      }\n    }\n  }\n}\n\nmodule.exports = ncp;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/node_modules/fs-extra/lib/copy/ncp.js"],"names":["fs","require","path","utimes","ncp","source","dest","options","callback","basePath","process","cwd","currentPath","resolve","targetPath","filter","transform","clobber","dereference","preserveTimestamps","errs","started","finished","running","limit","startCopy","RegExp","test","doneOne","getStats","stat","lstat","setImmediate","err","stats","onError","item","name","mode","mtime","atime","isDirectory","onDir","isFile","onFile","isSymbolicLink","onLink","file","target","replace","isWritable","writable","copyFile","rmFile","readStream","createReadStream","writeStream","createWriteStream","on","pipe","once","chmod","utimesMillis","done","unlink","dir","mkDir","copyDir","mkdir","readdir","items","forEach","join","link","readlink","resolvedPath","checkLink","makeLink","targetDest","linkPath","symlink","code","stopOnError","write","push","stack","skipped","undefined","module","exports"],"mappings":"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","sourcesContent":["// imported from ncp (this is temporary, will rewrite)\n\nvar fs = require('graceful-fs')\nvar path = require('path')\nvar utimes = require('../util/utimes')\n\nfunction ncp (source, dest, options, callback) {\n  if (!callback) {\n    callback = options\n    options = {}\n  }\n\n  var basePath = process.cwd()\n  var currentPath = path.resolve(basePath, source)\n  var targetPath = path.resolve(basePath, dest)\n\n  var filter = options.filter\n  var transform = options.transform\n  var clobber = options.clobber !== false\n  var dereference = options.dereference\n  var preserveTimestamps = options.preserveTimestamps === true\n\n  var errs = null\n\n  var started = 0\n  var finished = 0\n  var running = 0\n  // this is pretty useless now that we're using graceful-fs\n  // consider removing\n  var limit = options.limit || 512\n\n  startCopy(currentPath)\n\n  function startCopy (source) {\n    started++\n    if (filter) {\n      if (filter instanceof RegExp) {\n        if (!filter.test(source)) {\n          return doneOne(true)\n        }\n      } else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return doneOne(true)\n        }\n      }\n    }\n    return getStats(source)\n  }\n\n  function getStats (source) {\n    var stat = dereference ? fs.stat : fs.lstat\n    if (running >= limit) {\n      return setImmediate(function () {\n        getStats(source)\n      })\n    }\n    running++\n    stat(source, function (err, stats) {\n      if (err) return onError(err)\n\n      // We need to get the mode from the stats object and preserve it.\n      var item = {\n        name: source,\n        mode: stats.mode,\n        mtime: stats.mtime, // modified time\n        atime: stats.atime, // access time\n        stats: stats // temporary\n      }\n\n      if (stats.isDirectory()) {\n        return onDir(item)\n      } else if (stats.isFile()) {\n        return onFile(item)\n      } else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source)\n      }\n    })\n  }\n\n  function onFile (file) {\n    var target = file.name.replace(currentPath, targetPath)\n    isWritable(target, function (writable) {\n      if (writable) {\n        copyFile(file, target)\n      } else {\n        if (clobber) {\n          rmFile(target, function () {\n            copyFile(file, target)\n          })\n        } else {\n          doneOne()\n        }\n      }\n    })\n  }\n\n  function copyFile (file, target) {\n    var readStream = fs.createReadStream(file.name)\n    var writeStream = fs.createWriteStream(target, { mode: file.mode })\n\n    readStream.on('error', onError)\n    writeStream.on('error', onError)\n\n    if (transform) {\n      transform(readStream, writeStream, file)\n    } else {\n      writeStream.on('open', function () {\n        readStream.pipe(writeStream)\n      })\n    }\n\n    writeStream.once('finish', function () {\n      fs.chmod(target, file.mode, function (err) {\n        if (err) return onError(err)\n        if (preserveTimestamps) {\n          utimes.utimesMillis(target, file.atime, file.mtime, function (err) {\n            if (err) return onError(err)\n            return doneOne()\n          })\n        } else {\n          doneOne()\n        }\n      })\n    })\n  }\n\n  function rmFile (file, done) {\n    fs.unlink(file, function (err) {\n      if (err) return onError(err)\n      return done()\n    })\n  }\n\n  function onDir (dir) {\n    var target = dir.name.replace(currentPath, targetPath)\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target)\n      }\n      copyDir(dir.name)\n    })\n  }\n\n  function mkDir (dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) return onError(err)\n      // despite setting mode in fs.mkdir, doesn't seem to work\n      // so we set it here.\n      fs.chmod(target, dir.mode, function (err) {\n        if (err) return onError(err)\n        copyDir(dir.name)\n      })\n    })\n  }\n\n  function copyDir (dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) return onError(err)\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item))\n      })\n      return doneOne()\n    })\n  }\n\n  function onLink (link) {\n    var target = link.replace(currentPath, targetPath)\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) return onError(err)\n      checkLink(resolvedPath, target)\n    })\n  }\n\n  function checkLink (resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath)\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target)\n      }\n      fs.readlink(target, function (err, targetDest) {\n        if (err) return onError(err)\n\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest)\n        }\n        if (targetDest === resolvedPath) {\n          return doneOne()\n        }\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target)\n        })\n      })\n    })\n  }\n\n  function makeLink (linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) return onError(err)\n      return doneOne()\n    })\n  }\n\n  function isWritable (path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true)\n        return done(false)\n      }\n      return done(false)\n    })\n  }\n\n  function onError (err) {\n    if (options.stopOnError) {\n      return callback(err)\n    } else if (!errs && options.errs) {\n      errs = fs.createWriteStream(options.errs)\n    } else if (!errs) {\n      errs = []\n    }\n    if (typeof errs.write === 'undefined') {\n      errs.push(err)\n    } else {\n      errs.write(err.stack + '\\n\\n')\n    }\n    return doneOne()\n  }\n\n  function doneOne (skipped) {\n    if (!skipped) running--\n    finished++\n    if ((started === finished) && (running === 0)) {\n      if (callback !== undefined) {\n        return errs ? callback(errs) : callback(null)\n      }\n    }\n  }\n}\n\nmodule.exports = ncp\n"]},"metadata":{},"sourceType":"script"}
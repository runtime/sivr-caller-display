{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar clc = require(\"cli-color\");\n\nvar _require = require(\"../command\"),\n    Command = _require.Command;\n\nvar Config = require(\"../config\");\n\nvar identifierToProjectId = require(\"../identifierToProjectId\");\n\nvar logger = require(\"../logger\");\n\nvar _require2 = require(\"../prompt\"),\n    promptOnce = _require2.promptOnce;\n\nvar requireAuth = require(\"../requireAuth\");\n\nvar utils = require(\"../utils\");\n\nvar MOVE_KEYS = {\n  rules: \"database.rules\"\n};\nConfig.LEGACY_HOSTING_KEYS.forEach(function (key) {\n  MOVE_KEYS[key] = \"hosting.\" + key;\n});\nmodule.exports = new Command(\"tools:migrate\").description(\"[DEPRECATED] ensure your firebase.json format is up to date\").option(\"-y, --confirm\", \"pass this option to bypass confirmation prompt\").before(requireAuth).action(function (options) {\n  logger.warn(\"This command is deprecated and will be removed.\");\n\n  if (!options.config) {\n    return utils.reject(\"Must run \" + clc.bold(\"tools:migrate\") + \" from a directory with a firebase.json\");\n  }\n\n  utils.logBullet(\"Checking feature configuration...\");\n\n  var out = _.cloneDeep(options.config._src);\n\n  var changed = false;\n\n  _.forEach(MOVE_KEYS, function (dest, src) {\n    if (_.has(out, src)) {\n      _.set(out, dest, _.get(out, src));\n\n      _.unset(out, src);\n\n      changed = true;\n    }\n  });\n\n  utils.logBullet('Checking \"firebase\" key...');\n  var instance = out.firebase;\n  var rcfile;\n  var next;\n  var projectId;\n\n  if (instance) {\n    next = identifierToProjectId(instance).then(function (result) {\n      projectId = result;\n\n      if (projectId) {\n        rcfile = {\n          projects: {\n            default: projectId\n          }\n        };\n\n        _.unset(out, \"firebase\");\n      } else {\n        return utils.reject(\"Could not find Firebase project corresponding to \" + clc.bold(instance) + \".\\nPlease ensure it has been migrated to the new console before proceeding.\");\n      }\n    });\n    rcfile = {\n      projects: {\n        default: instance\n      }\n    };\n    changed = true;\n  } else {\n    next = Promise.resolve();\n  }\n\n  return next.then(function () {\n    if (!changed) {\n      logger.info();\n      utils.logSuccess(\"No action required, your firebase.json is all up to date!\");\n      return true;\n    }\n\n    logger.info();\n    logger.info(clc.white.bold(\"# preview: updated contents of firebase.json\"));\n    logger.info();\n    logger.info(JSON.stringify(out, null, 2));\n    logger.info();\n\n    if (options.confirm) {\n      next = Promise.resolve(true);\n    } else {\n      next = promptOnce({\n        type: \"confirm\",\n        message: \"Write new config to \" + clc.underline(\"firebase.json\") + \"?\",\n        default: true\n      });\n    }\n\n    return next.then(function (confirmed) {\n      if (confirmed) {\n        options.config.writeProjectFile(\"firebase.json\", out);\n        utils.logSuccess(\"Migrated \" + clc.bold(\"firebase.json\") + \" successfully\");\n\n        if (projectId) {\n          options.config.writeProjectFile(\".firebaserc\", rcfile);\n          utils.makeActiveProject(options.projectRoot, projectId);\n          utils.logSuccess(\"Set default project to \" + clc.bold(projectId));\n        }\n      } else {\n        return utils.reject(\"Migration aborted by user.\", {\n          exit: 1\n        });\n      }\n    });\n  });\n});","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/tools-migrate.js"],"names":["_","require","clc","Command","Config","identifierToProjectId","logger","promptOnce","requireAuth","utils","MOVE_KEYS","rules","LEGACY_HOSTING_KEYS","forEach","key","module","exports","description","option","before","action","options","warn","config","reject","bold","logBullet","out","cloneDeep","_src","changed","dest","src","has","set","get","unset","instance","firebase","rcfile","next","projectId","then","result","projects","default","Promise","resolve","info","logSuccess","white","JSON","stringify","confirm","type","message","underline","confirmed","writeProjectFile","makeActiveProject","projectRoot","exit"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAjB;;eACkBA,OAAO,CAAC,YAAD,C;IAAnBE,O,YAAAA,O;;AACN,IAAIC,MAAM,GAAGH,OAAO,CAAC,WAAD,CAApB;;AACA,IAAII,qBAAqB,GAAGJ,OAAO,CAAC,0BAAD,CAAnC;;AACA,IAAIK,MAAM,GAAGL,OAAO,CAAC,WAAD,CAApB;;gBACqBA,OAAO,CAAC,WAAD,C;IAAtBM,U,aAAAA,U;;AACN,IAAIC,WAAW,GAAGP,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIQ,KAAK,GAAGR,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIS,SAAS,GAAG;AACZC,EAAAA,KAAK,EAAE;AADK,CAAhB;AAGAP,MAAM,CAACQ,mBAAP,CAA2BC,OAA3B,CAAmC,UAAUC,GAAV,EAAe;AAC9CJ,EAAAA,SAAS,CAACI,GAAD,CAAT,GAAiB,aAAaA,GAA9B;AACH,CAFD;AAGAC,MAAM,CAACC,OAAP,GAAiB,IAAIb,OAAJ,CAAY,eAAZ,EACZc,WADY,CACA,6DADA,EAEZC,MAFY,CAEL,eAFK,EAEY,gDAFZ,EAGZC,MAHY,CAGLX,WAHK,EAIZY,MAJY,CAIL,UAAUC,OAAV,EAAmB;AAC3Bf,EAAAA,MAAM,CAACgB,IAAP,CAAY,iDAAZ;;AACA,MAAI,CAACD,OAAO,CAACE,MAAb,EAAqB;AACjB,WAAOd,KAAK,CAACe,MAAN,CAAa,cAActB,GAAG,CAACuB,IAAJ,CAAS,eAAT,CAAd,GAA0C,wCAAvD,CAAP;AACH;;AACDhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,mCAAhB;;AACA,MAAIC,GAAG,GAAG3B,CAAC,CAAC4B,SAAF,CAAYP,OAAO,CAACE,MAAR,CAAeM,IAA3B,CAAV;;AACA,MAAIC,OAAO,GAAG,KAAd;;AACA9B,EAAAA,CAAC,CAACa,OAAF,CAAUH,SAAV,EAAqB,UAAUqB,IAAV,EAAgBC,GAAhB,EAAqB;AACtC,QAAIhC,CAAC,CAACiC,GAAF,CAAMN,GAAN,EAAWK,GAAX,CAAJ,EAAqB;AACjBhC,MAAAA,CAAC,CAACkC,GAAF,CAAMP,GAAN,EAAWI,IAAX,EAAiB/B,CAAC,CAACmC,GAAF,CAAMR,GAAN,EAAWK,GAAX,CAAjB;;AACAhC,MAAAA,CAAC,CAACoC,KAAF,CAAQT,GAAR,EAAaK,GAAb;;AACAF,MAAAA,OAAO,GAAG,IAAV;AACH;AACJ,GAND;;AAOArB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,4BAAhB;AACA,MAAIW,QAAQ,GAAGV,GAAG,CAACW,QAAnB;AACA,MAAIC,MAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,SAAJ;;AACA,MAAIJ,QAAJ,EAAc;AACVG,IAAAA,IAAI,GAAGnC,qBAAqB,CAACgC,QAAD,CAArB,CAAgCK,IAAhC,CAAqC,UAAUC,MAAV,EAAkB;AAC1DF,MAAAA,SAAS,GAAGE,MAAZ;;AACA,UAAIF,SAAJ,EAAe;AACXF,QAAAA,MAAM,GAAG;AAAEK,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,OAAO,EAAEJ;AAAX;AAAZ,SAAT;;AACAzC,QAAAA,CAAC,CAACoC,KAAF,CAAQT,GAAR,EAAa,UAAb;AACH,OAHD,MAIK;AACD,eAAOlB,KAAK,CAACe,MAAN,CAAa,sDAChBtB,GAAG,CAACuB,IAAJ,CAASY,QAAT,CADgB,GAEhB,6EAFG,CAAP;AAGH;AACJ,KAXM,CAAP;AAYAE,IAAAA,MAAM,GAAG;AAAEK,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,OAAO,EAAER;AAAX;AAAZ,KAAT;AACAP,IAAAA,OAAO,GAAG,IAAV;AACH,GAfD,MAgBK;AACDU,IAAAA,IAAI,GAAGM,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,SAAOP,IAAI,CAACE,IAAL,CAAU,YAAY;AACzB,QAAI,CAACZ,OAAL,EAAc;AACVxB,MAAAA,MAAM,CAAC0C,IAAP;AACAvC,MAAAA,KAAK,CAACwC,UAAN,CAAiB,2DAAjB;AACA,aAAO,IAAP;AACH;;AACD3C,IAAAA,MAAM,CAAC0C,IAAP;AACA1C,IAAAA,MAAM,CAAC0C,IAAP,CAAY9C,GAAG,CAACgD,KAAJ,CAAUzB,IAAV,CAAe,8CAAf,CAAZ;AACAnB,IAAAA,MAAM,CAAC0C,IAAP;AACA1C,IAAAA,MAAM,CAAC0C,IAAP,CAAYG,IAAI,CAACC,SAAL,CAAezB,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAZ;AACArB,IAAAA,MAAM,CAAC0C,IAAP;;AACA,QAAI3B,OAAO,CAACgC,OAAZ,EAAqB;AACjBb,MAAAA,IAAI,GAAGM,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACH,KAFD,MAGK;AACDP,MAAAA,IAAI,GAAGjC,UAAU,CAAC;AACd+C,QAAAA,IAAI,EAAE,SADQ;AAEdC,QAAAA,OAAO,EAAE,yBAAyBrD,GAAG,CAACsD,SAAJ,CAAc,eAAd,CAAzB,GAA0D,GAFrD;AAGdX,QAAAA,OAAO,EAAE;AAHK,OAAD,CAAjB;AAKH;;AACD,WAAOL,IAAI,CAACE,IAAL,CAAU,UAAUe,SAAV,EAAqB;AAClC,UAAIA,SAAJ,EAAe;AACXpC,QAAAA,OAAO,CAACE,MAAR,CAAemC,gBAAf,CAAgC,eAAhC,EAAiD/B,GAAjD;AACAlB,QAAAA,KAAK,CAACwC,UAAN,CAAiB,cAAc/C,GAAG,CAACuB,IAAJ,CAAS,eAAT,CAAd,GAA0C,eAA3D;;AACA,YAAIgB,SAAJ,EAAe;AACXpB,UAAAA,OAAO,CAACE,MAAR,CAAemC,gBAAf,CAAgC,aAAhC,EAA+CnB,MAA/C;AACA9B,UAAAA,KAAK,CAACkD,iBAAN,CAAwBtC,OAAO,CAACuC,WAAhC,EAA6CnB,SAA7C;AACAhC,UAAAA,KAAK,CAACwC,UAAN,CAAiB,4BAA4B/C,GAAG,CAACuB,IAAJ,CAASgB,SAAT,CAA7C;AACH;AACJ,OARD,MASK;AACD,eAAOhC,KAAK,CAACe,MAAN,CAAa,4BAAb,EAA2C;AAAEqC,UAAAA,IAAI,EAAE;AAAR,SAA3C,CAAP;AACH;AACJ,KAbM,CAAP;AAcH,GAnCM,CAAP;AAoCH,CA/EgB,CAAjB","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar clc = require(\"cli-color\");\nvar { Command } = require(\"../command\");\nvar Config = require(\"../config\");\nvar identifierToProjectId = require(\"../identifierToProjectId\");\nvar logger = require(\"../logger\");\nvar { promptOnce } = require(\"../prompt\");\nvar requireAuth = require(\"../requireAuth\");\nvar utils = require(\"../utils\");\nvar MOVE_KEYS = {\n    rules: \"database.rules\",\n};\nConfig.LEGACY_HOSTING_KEYS.forEach(function (key) {\n    MOVE_KEYS[key] = \"hosting.\" + key;\n});\nmodule.exports = new Command(\"tools:migrate\")\n    .description(\"[DEPRECATED] ensure your firebase.json format is up to date\")\n    .option(\"-y, --confirm\", \"pass this option to bypass confirmation prompt\")\n    .before(requireAuth)\n    .action(function (options) {\n    logger.warn(\"This command is deprecated and will be removed.\");\n    if (!options.config) {\n        return utils.reject(\"Must run \" + clc.bold(\"tools:migrate\") + \" from a directory with a firebase.json\");\n    }\n    utils.logBullet(\"Checking feature configuration...\");\n    var out = _.cloneDeep(options.config._src);\n    var changed = false;\n    _.forEach(MOVE_KEYS, function (dest, src) {\n        if (_.has(out, src)) {\n            _.set(out, dest, _.get(out, src));\n            _.unset(out, src);\n            changed = true;\n        }\n    });\n    utils.logBullet('Checking \"firebase\" key...');\n    var instance = out.firebase;\n    var rcfile;\n    var next;\n    var projectId;\n    if (instance) {\n        next = identifierToProjectId(instance).then(function (result) {\n            projectId = result;\n            if (projectId) {\n                rcfile = { projects: { default: projectId } };\n                _.unset(out, \"firebase\");\n            }\n            else {\n                return utils.reject(\"Could not find Firebase project corresponding to \" +\n                    clc.bold(instance) +\n                    \".\\nPlease ensure it has been migrated to the new console before proceeding.\");\n            }\n        });\n        rcfile = { projects: { default: instance } };\n        changed = true;\n    }\n    else {\n        next = Promise.resolve();\n    }\n    return next.then(function () {\n        if (!changed) {\n            logger.info();\n            utils.logSuccess(\"No action required, your firebase.json is all up to date!\");\n            return true;\n        }\n        logger.info();\n        logger.info(clc.white.bold(\"# preview: updated contents of firebase.json\"));\n        logger.info();\n        logger.info(JSON.stringify(out, null, 2));\n        logger.info();\n        if (options.confirm) {\n            next = Promise.resolve(true);\n        }\n        else {\n            next = promptOnce({\n                type: \"confirm\",\n                message: \"Write new config to \" + clc.underline(\"firebase.json\") + \"?\",\n                default: true,\n            });\n        }\n        return next.then(function (confirmed) {\n            if (confirmed) {\n                options.config.writeProjectFile(\"firebase.json\", out);\n                utils.logSuccess(\"Migrated \" + clc.bold(\"firebase.json\") + \" successfully\");\n                if (projectId) {\n                    options.config.writeProjectFile(\".firebaserc\", rcfile);\n                    utils.makeActiveProject(options.projectRoot, projectId);\n                    utils.logSuccess(\"Set default project to \" + clc.bold(projectId));\n                }\n            }\n            else {\n                return utils.reject(\"Migration aborted by user.\", { exit: 1 });\n            }\n        });\n    });\n});\n"]},"metadata":{},"sourceType":"script"}
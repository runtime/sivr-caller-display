{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar clc = require(\"cli-color\");\n\nvar api = require(\"./api\");\n\nvar ensureApiEnabled = require(\"./ensureApiEnabled\").ensure;\n\nvar _require = require(\"./error\"),\n    FirebaseError = _require.FirebaseError;\n\nvar getProjectId = require(\"./getProjectId\");\n\nvar runtimeconfig = require(\"./gcp/runtimeconfig\");\n\nexports.RESERVED_NAMESPACES = [\"firebase\"];\n\nvar _keyToIds = function (key) {\n  var keyParts = key.split(\".\");\n  var variable = keyParts.slice(1).join(\"/\");\n  return {\n    config: keyParts[0],\n    variable: variable\n  };\n};\n\nvar _setVariable = function (projectId, configId, varPath, val) {\n  if (configId === \"\" || varPath === \"\") {\n    var msg = \"Invalid argument, each config value must have a 2-part key (e.g. foo.bar).\";\n    throw new FirebaseError(msg);\n  }\n\n  return runtimeconfig.variables.set(projectId, configId, varPath, val);\n};\n\nexports.ensureApi = function (options) {\n  var projectId = getProjectId(options);\n  return ensureApiEnabled(projectId, \"runtimeconfig.googleapis.com\", \"runtimeconfig\", true);\n};\n\nexports.varNameToIds = function (varName) {\n  return {\n    config: varName.match(new RegExp(\"/configs/(.+)/variables/\"))[1],\n    variable: varName.match(new RegExp(\"/variables/(.+)\"))[1]\n  };\n};\n\nexports.idsToVarName = function (projectId, configId, varId) {\n  return _.join([\"projects\", projectId, \"configs\", configId, \"variables\", varId], \"/\");\n};\n\nexports.getAppEngineLocation = function (config) {\n  var appEngineLocation = config.locationId;\n\n  if (appEngineLocation && appEngineLocation.match(/[^\\d]$/)) {\n    appEngineLocation = appEngineLocation + \"1\";\n  }\n\n  return appEngineLocation || \"us-central1\";\n};\n\nexports.getFirebaseConfig = function (options) {\n  const projectId = getProjectId(options, false);\n  return api.request(\"GET\", \"/v1beta1/projects/\" + projectId + \"/adminSdkConfig\", {\n    auth: true,\n    origin: api.firebaseApiOrigin\n  }).then(response => response.body);\n};\n\nexports.setVariablesRecursive = function (projectId, configId, varPath, val) {\n  var parsed = val;\n\n  if (_.isString(val)) {\n    try {\n      parsed = JSON.parse(val);\n    } catch (e) {}\n  }\n\n  if (_.isPlainObject(parsed)) {\n    return Promise.all(_.map(parsed, function (item, key) {\n      var newVarPath = varPath ? _.join([varPath, key], \"/\") : key;\n      return exports.setVariablesRecursive(projectId, configId, newVarPath, item);\n    }));\n  }\n\n  return _setVariable(projectId, configId, varPath, val);\n};\n\nexports.materializeConfig = function (configName, output) {\n  var _materializeVariable = function (varName) {\n    return runtimeconfig.variables.get(varName).then(function (variable) {\n      var id = exports.varNameToIds(variable.name);\n      var key = id.config + \".\" + id.variable.split(\"/\").join(\".\");\n\n      _.set(output, key, variable.text);\n    });\n  };\n\n  var _traverseVariables = function (variables) {\n    return Promise.all(_.map(variables, function (variable) {\n      return _materializeVariable(variable.name);\n    }));\n  };\n\n  return runtimeconfig.variables.list(configName).then(function (variables) {\n    return _traverseVariables(variables);\n  }).then(function () {\n    return output;\n  });\n};\n\nexports.materializeAll = function (projectId) {\n  var output = {};\n  return runtimeconfig.configs.list(projectId).then(function (configs) {\n    return Promise.all(_.map(configs, function (config) {\n      if (config.name.match(new RegExp(\"configs/firebase\"))) {\n        return Promise.resolve();\n      }\n\n      return exports.materializeConfig(config.name, output);\n    })).then(function () {\n      return output;\n    });\n  });\n};\n\nexports.parseSetArgs = function (args) {\n  var parsed = [];\n\n  _.forEach(args, function (arg) {\n    var parts = arg.split(\"=\");\n    var key = parts[0];\n\n    if (parts.length < 2) {\n      throw new FirebaseError(\"Invalid argument \" + clc.bold(arg) + \", must be in key=val format\");\n    }\n\n    if (/[A-Z]/.test(key)) {\n      throw new FirebaseError(\"Invalid config name \" + clc.bold(key) + \", cannot use upper case.\");\n    }\n\n    var id = _keyToIds(key);\n\n    if (_.includes(exports.RESERVED_NAMESPACES, id.config.toLowerCase())) {\n      throw new FirebaseError(\"Cannot set to reserved namespace \" + clc.bold(id.config));\n    }\n\n    var val = parts.slice(1).join(\"=\");\n    parsed.push({\n      configId: id.config,\n      varId: id.variable,\n      val: val\n    });\n  });\n\n  return parsed;\n};\n\nexports.parseUnsetArgs = function (args) {\n  var parsed = [];\n  var splitArgs = [];\n\n  _.forEach(args, function (arg) {\n    splitArgs = _.union(splitArgs, arg.split(\",\"));\n  });\n\n  _.forEach(splitArgs, function (key) {\n    var id = _keyToIds(key);\n\n    if (_.includes(exports.RESERVED_NAMESPACES, id.config.toLowerCase())) {\n      throw new FirebaseError(\"Cannot unset reserved namespace \" + clc.bold(id.config));\n    }\n\n    parsed.push({\n      configId: id.config,\n      varId: id.variable\n    });\n  });\n\n  return parsed;\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/functionsConfig.js"],"names":["_","require","clc","api","ensureApiEnabled","ensure","FirebaseError","getProjectId","runtimeconfig","exports","RESERVED_NAMESPACES","_keyToIds","key","keyParts","split","variable","slice","join","config","_setVariable","projectId","configId","varPath","val","msg","variables","set","ensureApi","options","varNameToIds","varName","match","RegExp","idsToVarName","varId","getAppEngineLocation","appEngineLocation","locationId","getFirebaseConfig","request","auth","origin","firebaseApiOrigin","then","response","body","setVariablesRecursive","parsed","isString","JSON","parse","e","isPlainObject","Promise","all","map","item","newVarPath","materializeConfig","configName","output","_materializeVariable","get","id","name","text","_traverseVariables","list","materializeAll","configs","resolve","parseSetArgs","args","forEach","arg","parts","length","bold","test","includes","toLowerCase","push","parseUnsetArgs","splitArgs","union"],"mappings":"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","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar clc = require(\"cli-color\");\nvar api = require(\"./api\");\nvar ensureApiEnabled = require(\"./ensureApiEnabled\").ensure;\nvar { FirebaseError } = require(\"./error\");\nvar getProjectId = require(\"./getProjectId\");\nvar runtimeconfig = require(\"./gcp/runtimeconfig\");\nexports.RESERVED_NAMESPACES = [\"firebase\"];\nvar _keyToIds = function (key) {\n    var keyParts = key.split(\".\");\n    var variable = keyParts.slice(1).join(\"/\");\n    return {\n        config: keyParts[0],\n        variable: variable,\n    };\n};\nvar _setVariable = function (projectId, configId, varPath, val) {\n    if (configId === \"\" || varPath === \"\") {\n        var msg = \"Invalid argument, each config value must have a 2-part key (e.g. foo.bar).\";\n        throw new FirebaseError(msg);\n    }\n    return runtimeconfig.variables.set(projectId, configId, varPath, val);\n};\nexports.ensureApi = function (options) {\n    var projectId = getProjectId(options);\n    return ensureApiEnabled(projectId, \"runtimeconfig.googleapis.com\", \"runtimeconfig\", true);\n};\nexports.varNameToIds = function (varName) {\n    return {\n        config: varName.match(new RegExp(\"/configs/(.+)/variables/\"))[1],\n        variable: varName.match(new RegExp(\"/variables/(.+)\"))[1],\n    };\n};\nexports.idsToVarName = function (projectId, configId, varId) {\n    return _.join([\"projects\", projectId, \"configs\", configId, \"variables\", varId], \"/\");\n};\nexports.getAppEngineLocation = function (config) {\n    var appEngineLocation = config.locationId;\n    if (appEngineLocation && appEngineLocation.match(/[^\\d]$/)) {\n        appEngineLocation = appEngineLocation + \"1\";\n    }\n    return appEngineLocation || \"us-central1\";\n};\nexports.getFirebaseConfig = function (options) {\n    const projectId = getProjectId(options, false);\n    return api\n        .request(\"GET\", \"/v1beta1/projects/\" + projectId + \"/adminSdkConfig\", {\n        auth: true,\n        origin: api.firebaseApiOrigin,\n    })\n        .then((response) => response.body);\n};\nexports.setVariablesRecursive = function (projectId, configId, varPath, val) {\n    var parsed = val;\n    if (_.isString(val)) {\n        try {\n            parsed = JSON.parse(val);\n        }\n        catch (e) {\n        }\n    }\n    if (_.isPlainObject(parsed)) {\n        return Promise.all(_.map(parsed, function (item, key) {\n            var newVarPath = varPath ? _.join([varPath, key], \"/\") : key;\n            return exports.setVariablesRecursive(projectId, configId, newVarPath, item);\n        }));\n    }\n    return _setVariable(projectId, configId, varPath, val);\n};\nexports.materializeConfig = function (configName, output) {\n    var _materializeVariable = function (varName) {\n        return runtimeconfig.variables.get(varName).then(function (variable) {\n            var id = exports.varNameToIds(variable.name);\n            var key = id.config + \".\" + id.variable.split(\"/\").join(\".\");\n            _.set(output, key, variable.text);\n        });\n    };\n    var _traverseVariables = function (variables) {\n        return Promise.all(_.map(variables, function (variable) {\n            return _materializeVariable(variable.name);\n        }));\n    };\n    return runtimeconfig.variables\n        .list(configName)\n        .then(function (variables) {\n        return _traverseVariables(variables);\n    })\n        .then(function () {\n        return output;\n    });\n};\nexports.materializeAll = function (projectId) {\n    var output = {};\n    return runtimeconfig.configs.list(projectId).then(function (configs) {\n        return Promise.all(_.map(configs, function (config) {\n            if (config.name.match(new RegExp(\"configs/firebase\"))) {\n                return Promise.resolve();\n            }\n            return exports.materializeConfig(config.name, output);\n        })).then(function () {\n            return output;\n        });\n    });\n};\nexports.parseSetArgs = function (args) {\n    var parsed = [];\n    _.forEach(args, function (arg) {\n        var parts = arg.split(\"=\");\n        var key = parts[0];\n        if (parts.length < 2) {\n            throw new FirebaseError(\"Invalid argument \" + clc.bold(arg) + \", must be in key=val format\");\n        }\n        if (/[A-Z]/.test(key)) {\n            throw new FirebaseError(\"Invalid config name \" + clc.bold(key) + \", cannot use upper case.\");\n        }\n        var id = _keyToIds(key);\n        if (_.includes(exports.RESERVED_NAMESPACES, id.config.toLowerCase())) {\n            throw new FirebaseError(\"Cannot set to reserved namespace \" + clc.bold(id.config));\n        }\n        var val = parts.slice(1).join(\"=\");\n        parsed.push({\n            configId: id.config,\n            varId: id.variable,\n            val: val,\n        });\n    });\n    return parsed;\n};\nexports.parseUnsetArgs = function (args) {\n    var parsed = [];\n    var splitArgs = [];\n    _.forEach(args, function (arg) {\n        splitArgs = _.union(splitArgs, arg.split(\",\"));\n    });\n    _.forEach(splitArgs, function (key) {\n        var id = _keyToIds(key);\n        if (_.includes(exports.RESERVED_NAMESPACES, id.config.toLowerCase())) {\n            throw new FirebaseError(\"Cannot unset reserved namespace \" + clc.bold(id.config));\n        }\n        parsed.push({\n            configId: id.config,\n            varId: id.variable,\n        });\n    });\n    return parsed;\n};\n"]},"metadata":{},"sourceType":"script"}
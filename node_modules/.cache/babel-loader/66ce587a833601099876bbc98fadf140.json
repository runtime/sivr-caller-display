{"ast":null,"code":"\"use strict\";\n\nvar _require = require(\"../command\"),\n    Command = _require.Command;\n\nvar requireInstance = require(\"../requireInstance\");\n\nvar _require2 = require(\"../requirePermissions\"),\n    requirePermissions = _require2.requirePermissions;\n\nvar request = require(\"request\");\n\nvar api = require(\"../api\");\n\nvar responseToError = require(\"../responseToError\");\n\nvar _require3 = require(\"../error\"),\n    FirebaseError = _require3.FirebaseError;\n\nvar utils = require(\"../utils\");\n\nvar clc = require(\"cli-color\");\n\nvar logger = require(\"../logger\");\n\nvar fs = require(\"fs\");\n\nvar _require4 = require(\"../prompt\"),\n    prompt = _require4.prompt;\n\nvar _ = require(\"lodash\");\n\nmodule.exports = new Command(\"database:update <path> [infile]\").description(\"update some of the keys for the defined path in your Firebase\").option(\"-d, --data <data>\", \"specify escaped JSON directly\").option(\"-y, --confirm\", \"pass this option to bypass confirmation prompt\").option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\").before(requirePermissions, [\"firebasedatabase.instances.update\"]).before(requireInstance).action(function (path, infile, options) {\n  if (!_.startsWith(path, \"/\")) {\n    return utils.reject(\"Path must begin with /\", {\n      exit: 1\n    });\n  }\n\n  return prompt(options, [{\n    type: \"confirm\",\n    name: \"confirm\",\n    default: false,\n    message: \"You are about to modify data at \" + clc.cyan(utils.addSubdomain(api.realtimeOrigin, options.instance) + path) + \". Are you sure?\"\n  }]).then(function () {\n    if (!options.confirm) {\n      return utils.reject(\"Command aborted.\", {\n        exit: 1\n      });\n    }\n\n    var inStream = utils.stringToStream(options.data) || (infile ? fs.createReadStream(infile) : process.stdin);\n    var url = utils.addSubdomain(api.realtimeOrigin, options.instance) + path + \".json?\";\n\n    if (!infile && !options.data) {\n      utils.explainStdin();\n    }\n\n    var reqOptions = {\n      url: url,\n      json: true\n    };\n    return api.addRequestHeaders(reqOptions).then(function (reqOptionsWithToken) {\n      return new Promise(function (resolve, reject) {\n        inStream.pipe(request.patch(reqOptionsWithToken, function (err, res, body) {\n          logger.info();\n\n          if (err) {\n            return reject(new FirebaseError(\"Unexpected error while setting data\", {\n              exit: 2\n            }));\n          } else if (res.statusCode >= 400) {\n            return reject(responseToError(res, body));\n          }\n\n          utils.logSuccess(\"Data updated successfully\");\n          logger.info();\n          logger.info(clc.bold(\"View data at:\"), utils.consoleUrl(options.project, \"/database/data\" + path));\n          return resolve();\n        }));\n      });\n    });\n  });\n});","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/database-update.js"],"names":["require","Command","requireInstance","requirePermissions","request","api","responseToError","FirebaseError","utils","clc","logger","fs","prompt","_","module","exports","description","option","before","action","path","infile","options","startsWith","reject","exit","type","name","default","message","cyan","addSubdomain","realtimeOrigin","instance","then","confirm","inStream","stringToStream","data","createReadStream","process","stdin","url","explainStdin","reqOptions","json","addRequestHeaders","reqOptionsWithToken","Promise","resolve","pipe","patch","err","res","body","info","statusCode","logSuccess","bold","consoleUrl","project"],"mappings":"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","sourcesContent":["\"use strict\";\nvar { Command } = require(\"../command\");\nvar requireInstance = require(\"../requireInstance\");\nvar { requirePermissions } = require(\"../requirePermissions\");\nvar request = require(\"request\");\nvar api = require(\"../api\");\nvar responseToError = require(\"../responseToError\");\nvar { FirebaseError } = require(\"../error\");\nvar utils = require(\"../utils\");\nvar clc = require(\"cli-color\");\nvar logger = require(\"../logger\");\nvar fs = require(\"fs\");\nvar { prompt } = require(\"../prompt\");\nvar _ = require(\"lodash\");\nmodule.exports = new Command(\"database:update <path> [infile]\")\n    .description(\"update some of the keys for the defined path in your Firebase\")\n    .option(\"-d, --data <data>\", \"specify escaped JSON directly\")\n    .option(\"-y, --confirm\", \"pass this option to bypass confirmation prompt\")\n    .option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\")\n    .before(requirePermissions, [\"firebasedatabase.instances.update\"])\n    .before(requireInstance)\n    .action(function (path, infile, options) {\n    if (!_.startsWith(path, \"/\")) {\n        return utils.reject(\"Path must begin with /\", { exit: 1 });\n    }\n    return prompt(options, [\n        {\n            type: \"confirm\",\n            name: \"confirm\",\n            default: false,\n            message: \"You are about to modify data at \" +\n                clc.cyan(utils.addSubdomain(api.realtimeOrigin, options.instance) + path) +\n                \". Are you sure?\",\n        },\n    ]).then(function () {\n        if (!options.confirm) {\n            return utils.reject(\"Command aborted.\", { exit: 1 });\n        }\n        var inStream = utils.stringToStream(options.data) ||\n            (infile ? fs.createReadStream(infile) : process.stdin);\n        var url = utils.addSubdomain(api.realtimeOrigin, options.instance) + path + \".json?\";\n        if (!infile && !options.data) {\n            utils.explainStdin();\n        }\n        var reqOptions = {\n            url: url,\n            json: true,\n        };\n        return api.addRequestHeaders(reqOptions).then(function (reqOptionsWithToken) {\n            return new Promise(function (resolve, reject) {\n                inStream.pipe(request.patch(reqOptionsWithToken, function (err, res, body) {\n                    logger.info();\n                    if (err) {\n                        return reject(new FirebaseError(\"Unexpected error while setting data\", {\n                            exit: 2,\n                        }));\n                    }\n                    else if (res.statusCode >= 400) {\n                        return reject(responseToError(res, body));\n                    }\n                    utils.logSuccess(\"Data updated successfully\");\n                    logger.info();\n                    logger.info(clc.bold(\"View data at:\"), utils.consoleUrl(options.project, \"/database/data\" + path));\n                    return resolve();\n                }));\n            });\n        });\n    });\n});\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _ = require(\"lodash\");\n\nconst clc = require(\"cli-color\");\n\nconst semver = require(\"semver\");\n\nconst api = require(\"../api\");\n\nconst error_1 = require(\"../error\");\n\nconst updateHelper_1 = require(\"./updateHelper\");\n\nconst EXTENSIONS_REGISTRY_ENDPOINT = \"/extensions.json\";\n\nfunction resolveSourceUrl(registryEntry, name, version) {\n  const targetVersion = getTargetVersion(registryEntry, version);\n\n  const sourceUrl = _.get(registryEntry, [\"versions\", targetVersion]);\n\n  if (!sourceUrl) {\n    throw new error_1.FirebaseError(`Could not find version ${clc.bold(version)} of extension ${clc.bold(name)}.`);\n  }\n\n  return sourceUrl;\n}\n\nexports.resolveSourceUrl = resolveSourceUrl;\n\nfunction resolveRegistryEntry(name) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const extensionsRegistry = yield getExtensionRegistry();\n\n    const registryEntry = _.get(extensionsRegistry, name);\n\n    if (!registryEntry) {\n      throw new error_1.FirebaseError(`Unable to find extension source named ${clc.bold(name)}.`);\n    }\n\n    return registryEntry;\n  });\n}\n\nexports.resolveRegistryEntry = resolveRegistryEntry;\n\nfunction getTargetVersion(registryEntry, versionOrLabel) {\n  const seekVersion = versionOrLabel || \"latest\";\n\n  const versionFromLabel = _.get(registryEntry, [\"labels\", seekVersion]);\n\n  return versionFromLabel || seekVersion;\n}\n\nexports.getTargetVersion = getTargetVersion;\n\nfunction promptForUpdateWarnings(registryEntry, startVersion, endVersion) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (registryEntry.updateWarnings) {\n      for (const targetRange in registryEntry.updateWarnings) {\n        if (semver.satisfies(endVersion, targetRange)) {\n          const updateWarnings = registryEntry.updateWarnings[targetRange];\n\n          for (const updateWarning of updateWarnings) {\n            if (semver.satisfies(startVersion, updateWarning.from)) {\n              yield updateHelper_1.confirmUpdateWarning(updateWarning);\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n  });\n}\n\nexports.promptForUpdateWarnings = promptForUpdateWarnings;\n\nfunction getExtensionRegistry() {\n  return __awaiter(this, void 0, void 0, function* () {\n    const res = yield api.request(\"GET\", EXTENSIONS_REGISTRY_ENDPOINT, {\n      origin: api.firebaseExtensionsRegistryOrigin\n    });\n    return res.body.mods;\n  });\n}\n\nexports.getExtensionRegistry = getExtensionRegistry;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/extensions/resolveSource.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","_","require","clc","semver","api","error_1","updateHelper_1","EXTENSIONS_REGISTRY_ENDPOINT","resolveSourceUrl","registryEntry","name","version","targetVersion","getTargetVersion","sourceUrl","get","FirebaseError","bold","resolveRegistryEntry","extensionsRegistry","getExtensionRegistry","versionOrLabel","seekVersion","versionFromLabel","promptForUpdateWarnings","startVersion","endVersion","updateWarnings","targetRange","satisfies","updateWarning","from","confirmUpdateWarning","res","request","origin","firebaseExtensionsRegistryOrigin","body","mods"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst clc = require(\"cli-color\");\nconst semver = require(\"semver\");\nconst api = require(\"../api\");\nconst error_1 = require(\"../error\");\nconst updateHelper_1 = require(\"./updateHelper\");\nconst EXTENSIONS_REGISTRY_ENDPOINT = \"/extensions.json\";\nfunction resolveSourceUrl(registryEntry, name, version) {\n    const targetVersion = getTargetVersion(registryEntry, version);\n    const sourceUrl = _.get(registryEntry, [\"versions\", targetVersion]);\n    if (!sourceUrl) {\n        throw new error_1.FirebaseError(`Could not find version ${clc.bold(version)} of extension ${clc.bold(name)}.`);\n    }\n    return sourceUrl;\n}\nexports.resolveSourceUrl = resolveSourceUrl;\nfunction resolveRegistryEntry(name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const extensionsRegistry = yield getExtensionRegistry();\n        const registryEntry = _.get(extensionsRegistry, name);\n        if (!registryEntry) {\n            throw new error_1.FirebaseError(`Unable to find extension source named ${clc.bold(name)}.`);\n        }\n        return registryEntry;\n    });\n}\nexports.resolveRegistryEntry = resolveRegistryEntry;\nfunction getTargetVersion(registryEntry, versionOrLabel) {\n    const seekVersion = versionOrLabel || \"latest\";\n    const versionFromLabel = _.get(registryEntry, [\"labels\", seekVersion]);\n    return versionFromLabel || seekVersion;\n}\nexports.getTargetVersion = getTargetVersion;\nfunction promptForUpdateWarnings(registryEntry, startVersion, endVersion) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (registryEntry.updateWarnings) {\n            for (const targetRange in registryEntry.updateWarnings) {\n                if (semver.satisfies(endVersion, targetRange)) {\n                    const updateWarnings = registryEntry.updateWarnings[targetRange];\n                    for (const updateWarning of updateWarnings) {\n                        if (semver.satisfies(startVersion, updateWarning.from)) {\n                            yield updateHelper_1.confirmUpdateWarning(updateWarning);\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    });\n}\nexports.promptForUpdateWarnings = promptForUpdateWarnings;\nfunction getExtensionRegistry() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = yield api.request(\"GET\", EXTENSIONS_REGISTRY_ENDPOINT, {\n            origin: api.firebaseExtensionsRegistryOrigin,\n        });\n        return res.body.mods;\n    });\n}\nexports.getExtensionRegistry = getExtensionRegistry;\n"]},"metadata":{},"sourceType":"script"}
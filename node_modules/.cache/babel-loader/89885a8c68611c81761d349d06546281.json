{"ast":null,"code":"\"use strict\";\n\nvar _require = require(\"../command\"),\n    Command = _require.Command;\n\nvar requireInstance = require(\"../requireInstance\");\n\nvar _require2 = require(\"../requirePermissions\"),\n    requirePermissions = _require2.requirePermissions;\n\nvar DatabaseRemove = require(\"../database/remove\").default;\n\nvar api = require(\"../api\");\n\nvar utils = require(\"../utils\");\n\nvar _require3 = require(\"../prompt\"),\n    prompt = _require3.prompt;\n\nvar clc = require(\"cli-color\");\n\nvar _ = require(\"lodash\");\n\nmodule.exports = new Command(\"database:remove <path>\").description(\"remove data from your Firebase at the specified path\").option(\"-y, --confirm\", \"pass this option to bypass confirmation prompt\").option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\").before(requirePermissions, [\"firebasedatabase.instances.update\"]).before(requireInstance).action(function (path, options) {\n  if (!_.startsWith(path, \"/\")) {\n    return utils.reject(\"Path must begin with /\", {\n      exit: 1\n    });\n  }\n\n  return prompt(options, [{\n    type: \"confirm\",\n    name: \"confirm\",\n    default: false,\n    message: \"You are about to remove all data at \" + clc.cyan(utils.addSubdomain(api.realtimeOrigin, options.instance) + path) + \". Are you sure?\"\n  }]).then(function () {\n    if (!options.confirm) {\n      return utils.reject(\"Command aborted.\", {\n        exit: 1\n      });\n    }\n\n    var removeOps = new DatabaseRemove(options.instance, path);\n    return removeOps.execute().then(function () {\n      utils.logSuccess(\"Data removed successfully\");\n    });\n  });\n});","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/database-remove.js"],"names":["require","Command","requireInstance","requirePermissions","DatabaseRemove","default","api","utils","prompt","clc","_","module","exports","description","option","before","action","path","options","startsWith","reject","exit","type","name","message","cyan","addSubdomain","realtimeOrigin","instance","then","confirm","removeOps","execute","logSuccess"],"mappings":"AAAA;;eACkBA,OAAO,CAAC,YAAD,C;IAAnBC,O,YAAAA,O;;AACN,IAAIC,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAA7B;;gBAC6BA,OAAO,CAAC,uBAAD,C;IAA9BG,kB,aAAAA,kB;;AACN,IAAIC,cAAc,GAAGJ,OAAO,CAAC,oBAAD,CAAP,CAA8BK,OAAnD;;AACA,IAAIC,GAAG,GAAGN,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIO,KAAK,GAAGP,OAAO,CAAC,UAAD,CAAnB;;gBACiBA,OAAO,CAAC,WAAD,C;IAAlBQ,M,aAAAA,M;;AACN,IAAIC,GAAG,GAAGT,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIU,CAAC,GAAGV,OAAO,CAAC,QAAD,CAAf;;AACAW,MAAM,CAACC,OAAP,GAAiB,IAAIX,OAAJ,CAAY,wBAAZ,EACZY,WADY,CACA,sDADA,EAEZC,MAFY,CAEL,eAFK,EAEY,gDAFZ,EAGZA,MAHY,CAGL,uBAHK,EAGoB,wFAHpB,EAIZC,MAJY,CAILZ,kBAJK,EAIe,CAAC,mCAAD,CAJf,EAKZY,MALY,CAKLb,eALK,EAMZc,MANY,CAML,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AACjC,MAAI,CAACR,CAAC,CAACS,UAAF,CAAaF,IAAb,EAAmB,GAAnB,CAAL,EAA8B;AAC1B,WAAOV,KAAK,CAACa,MAAN,CAAa,wBAAb,EAAuC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAvC,CAAP;AACH;;AACD,SAAOb,MAAM,CAACU,OAAD,EAAU,CACnB;AACII,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,IAAI,EAAE,SAFV;AAGIlB,IAAAA,OAAO,EAAE,KAHb;AAIImB,IAAAA,OAAO,EAAE,yCACLf,GAAG,CAACgB,IAAJ,CAASlB,KAAK,CAACmB,YAAN,CAAmBpB,GAAG,CAACqB,cAAvB,EAAuCT,OAAO,CAACU,QAA/C,IAA2DX,IAApE,CADK,GAEL;AANR,GADmB,CAAV,CAAN,CASJY,IATI,CASC,YAAY;AAChB,QAAI,CAACX,OAAO,CAACY,OAAb,EAAsB;AAClB,aAAOvB,KAAK,CAACa,MAAN,CAAa,kBAAb,EAAiC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAjC,CAAP;AACH;;AACD,QAAIU,SAAS,GAAG,IAAI3B,cAAJ,CAAmBc,OAAO,CAACU,QAA3B,EAAqCX,IAArC,CAAhB;AACA,WAAOc,SAAS,CAACC,OAAV,GAAoBH,IAApB,CAAyB,YAAY;AACxCtB,MAAAA,KAAK,CAAC0B,UAAN,CAAiB,2BAAjB;AACH,KAFM,CAAP;AAGH,GAjBM,CAAP;AAkBH,CA5BgB,CAAjB","sourcesContent":["\"use strict\";\nvar { Command } = require(\"../command\");\nvar requireInstance = require(\"../requireInstance\");\nvar { requirePermissions } = require(\"../requirePermissions\");\nvar DatabaseRemove = require(\"../database/remove\").default;\nvar api = require(\"../api\");\nvar utils = require(\"../utils\");\nvar { prompt } = require(\"../prompt\");\nvar clc = require(\"cli-color\");\nvar _ = require(\"lodash\");\nmodule.exports = new Command(\"database:remove <path>\")\n    .description(\"remove data from your Firebase at the specified path\")\n    .option(\"-y, --confirm\", \"pass this option to bypass confirmation prompt\")\n    .option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\")\n    .before(requirePermissions, [\"firebasedatabase.instances.update\"])\n    .before(requireInstance)\n    .action(function (path, options) {\n    if (!_.startsWith(path, \"/\")) {\n        return utils.reject(\"Path must begin with /\", { exit: 1 });\n    }\n    return prompt(options, [\n        {\n            type: \"confirm\",\n            name: \"confirm\",\n            default: false,\n            message: \"You are about to remove all data at \" +\n                clc.cyan(utils.addSubdomain(api.realtimeOrigin, options.instance) + path) +\n                \". Are you sure?\",\n        },\n    ]).then(function () {\n        if (!options.confirm) {\n            return utils.reject(\"Command aborted.\", { exit: 1 });\n        }\n        var removeOps = new DatabaseRemove(options.instance, path);\n        return removeOps.execute().then(function () {\n            utils.logSuccess(\"Data removed successfully\");\n        });\n    });\n});\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clc = require(\"cli-color\");\n\nconst utils = require(\"../utils\");\n\nconst logger = require(\"../logger\");\n\nconst TYPE_VERBOSITY = {\n  DEBUG: 0,\n  INFO: 1,\n  BULLET: 1,\n  SUCCESS: 1,\n  USER: 2,\n  WARN: 2,\n  WARN_ONCE: 2\n};\nvar Verbosity;\n\n(function (Verbosity) {\n  Verbosity[Verbosity[\"DEBUG\"] = 0] = \"DEBUG\";\n  Verbosity[Verbosity[\"INFO\"] = 1] = \"INFO\";\n  Verbosity[Verbosity[\"QUIET\"] = 2] = \"QUIET\";\n})(Verbosity = exports.Verbosity || (exports.Verbosity = {}));\n\nclass EmulatorLogger {\n  static log(type, text) {\n    if (EmulatorLogger.shouldSupress(type)) {\n      logger.debug(`${type}: ${text}`);\n      return;\n    }\n\n    switch (type) {\n      case \"DEBUG\":\n        logger.debug(text);\n        break;\n\n      case \"INFO\":\n        logger.info(text);\n        break;\n\n      case \"USER\":\n        logger.info(text);\n        break;\n\n      case \"BULLET\":\n        utils.logBullet(text);\n        break;\n\n      case \"WARN\":\n        utils.logWarning(text);\n        break;\n\n      case \"WARN_ONCE\":\n        if (!this.warnOnceCache.has(text)) {\n          utils.logWarning(text);\n          this.warnOnceCache.add(text);\n        }\n\n        break;\n\n      case \"SUCCESS\":\n        utils.logSuccess(text);\n        break;\n    }\n  }\n\n  static handleRuntimeLog(log, ignore = []) {\n    if (ignore.indexOf(log.level) >= 0) {\n      return;\n    }\n\n    switch (log.level) {\n      case \"SYSTEM\":\n        EmulatorLogger.handleSystemLog(log);\n        break;\n\n      case \"USER\":\n        EmulatorLogger.log(\"USER\", `${clc.blackBright(\"> \")} ${log.text}`);\n        break;\n\n      case \"DEBUG\":\n        if (log.data && Object.keys(log.data).length > 0) {\n          EmulatorLogger.log(\"DEBUG\", `[${log.type}] ${log.text} ${JSON.stringify(log.data)}`);\n        } else {\n          EmulatorLogger.log(\"DEBUG\", `[${log.type}] ${log.text}`);\n        }\n\n        break;\n\n      case \"INFO\":\n        EmulatorLogger.logLabeled(\"BULLET\", \"functions\", log.text);\n        break;\n\n      case \"WARN\":\n        EmulatorLogger.logLabeled(\"WARN\", \"functions\", log.text);\n        break;\n\n      case \"WARN_ONCE\":\n        EmulatorLogger.logLabeled(\"WARN_ONCE\", \"functions\", log.text);\n        break;\n\n      case \"FATAL\":\n        EmulatorLogger.logLabeled(\"WARN\", \"functions\", log.text);\n        break;\n\n      default:\n        EmulatorLogger.log(\"INFO\", `${log.level}: ${log.text}`);\n        break;\n    }\n  }\n\n  static handleSystemLog(systemLog) {\n    switch (systemLog.type) {\n      case \"runtime-status\":\n        if (systemLog.text === \"killed\") {\n          EmulatorLogger.log(\"WARN\", `Your function was killed because it raised an unhandled error.`);\n        }\n\n        break;\n\n      case \"googleapis-network-access\":\n        EmulatorLogger.log(\"WARN\", `Google API requested!\\n   - URL: \"${systemLog.data.href}\"\\n   - Be careful, this may be a production service.`);\n        break;\n\n      case \"unidentified-network-access\":\n        EmulatorLogger.log(\"WARN\", `External network resource requested!\\n   - URL: \"${systemLog.data.href}\"\\n - Be careful, this may be a production service.`);\n        break;\n\n      case \"functions-config-missing-value\":\n        EmulatorLogger.log(\"WARN\", `Non-existent functions.config() value requested!\\n   - Path: \"${systemLog.data.valuePath}\"\\n   - Learn more at https://firebase.google.com/docs/functions/local-emulator`);\n        break;\n\n      case \"non-default-admin-app-used\":\n        EmulatorLogger.log(\"WARN\", `Non-default \"firebase-admin\" instance created!\\n   ` + `- This instance will *not* be mocked and will access production resources.`);\n        break;\n\n      case \"missing-module\":\n        EmulatorLogger.log(\"WARN\", `The Cloud Functions emulator requires the module \"${systemLog.data.name}\" to be installed as a ${systemLog.data.isDev ? \"development dependency\" : \"dependency\"}. To fix this, run \"npm install ${systemLog.data.isDev ? \"--save-dev\" : \"--save\"} ${systemLog.data.name}\" in your functions directory.`);\n        break;\n\n      case \"uninstalled-module\":\n        EmulatorLogger.log(\"WARN\", `The Cloud Functions emulator requires the module \"${systemLog.data.name}\" to be installed. This package is in your package.json, but it's not available. \\\nYou probably need to run \"npm install\" in your functions directory.`);\n        break;\n\n      case \"out-of-date-module\":\n        EmulatorLogger.log(\"WARN\", `The Cloud Functions emulator requires the module \"${systemLog.data.name}\" to be version >${systemLog.data.minVersion} so your version is too old. \\\nYou can probably fix this by running \"npm install ${systemLog.data.name}@latest\" in your functions directory.`);\n        break;\n\n      case \"missing-package-json\":\n        EmulatorLogger.log(\"WARN\", `The Cloud Functions directory you specified does not have a \"package.json\" file, so we can't load it.`);\n        break;\n\n      case \"function-code-resolution-failed\":\n        EmulatorLogger.log(\"WARN\", systemLog.data.error);\n        const helper = [\"We were unable to load your functions code. (see above)\"];\n\n        if (systemLog.data.isPotentially.wrong_directory) {\n          helper.push(`   - There is no \"package.json\" file in your functions directory.`);\n        }\n\n        if (systemLog.data.isPotentially.typescript) {\n          helper.push(\"   - It appears your code is written in Typescript, which must be compiled before emulation.\");\n        }\n\n        if (systemLog.data.isPotentially.uncompiled) {\n          helper.push(`   - You may be able to run \"npm run build\" in your functions directory to resolve this.`);\n        }\n\n        utils.logWarning(helper.join(\"\\n\"));\n\n      default:\n    }\n  }\n\n  static logLabeled(type, label, text) {\n    if (EmulatorLogger.shouldSupress(type)) {\n      logger.debug(`[${label}] ${text}`);\n      return;\n    }\n\n    switch (type) {\n      case \"DEBUG\":\n        logger.debug(`[${label}] ${text}`);\n        break;\n\n      case \"BULLET\":\n        utils.logLabeledBullet(label, text);\n        break;\n\n      case \"SUCCESS\":\n        utils.logLabeledSuccess(label, text);\n        break;\n\n      case \"WARN\":\n        utils.logLabeledWarning(label, text);\n        break;\n\n      case \"WARN_ONCE\":\n        if (!this.warnOnceCache.has(text)) {\n          utils.logLabeledWarning(label, text);\n          this.warnOnceCache.add(text);\n        }\n\n        break;\n    }\n  }\n\n  static shouldSupress(type) {\n    const typeVerbosity = TYPE_VERBOSITY[type];\n    return EmulatorLogger.verbosity > typeVerbosity;\n  }\n\n}\n\nEmulatorLogger.verbosity = Verbosity.DEBUG;\nEmulatorLogger.warnOnceCache = new Set();\nexports.EmulatorLogger = EmulatorLogger;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/emulator/emulatorLogger.js"],"names":["Object","defineProperty","exports","value","clc","require","utils","logger","TYPE_VERBOSITY","DEBUG","INFO","BULLET","SUCCESS","USER","WARN","WARN_ONCE","Verbosity","EmulatorLogger","log","type","text","shouldSupress","debug","info","logBullet","logWarning","warnOnceCache","has","add","logSuccess","handleRuntimeLog","ignore","indexOf","level","handleSystemLog","blackBright","data","keys","length","JSON","stringify","logLabeled","systemLog","href","valuePath","name","isDev","minVersion","error","helper","isPotentially","wrong_directory","push","typescript","uncompiled","join","label","logLabeledBullet","logLabeledSuccess","logLabeledWarning","typeVerbosity","verbosity","Set"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clc = require(\"cli-color\");\nconst utils = require(\"../utils\");\nconst logger = require(\"../logger\");\nconst TYPE_VERBOSITY = {\n    DEBUG: 0,\n    INFO: 1,\n    BULLET: 1,\n    SUCCESS: 1,\n    USER: 2,\n    WARN: 2,\n    WARN_ONCE: 2,\n};\nvar Verbosity;\n(function (Verbosity) {\n    Verbosity[Verbosity[\"DEBUG\"] = 0] = \"DEBUG\";\n    Verbosity[Verbosity[\"INFO\"] = 1] = \"INFO\";\n    Verbosity[Verbosity[\"QUIET\"] = 2] = \"QUIET\";\n})(Verbosity = exports.Verbosity || (exports.Verbosity = {}));\nclass EmulatorLogger {\n    static log(type, text) {\n        if (EmulatorLogger.shouldSupress(type)) {\n            logger.debug(`${type}: ${text}`);\n            return;\n        }\n        switch (type) {\n            case \"DEBUG\":\n                logger.debug(text);\n                break;\n            case \"INFO\":\n                logger.info(text);\n                break;\n            case \"USER\":\n                logger.info(text);\n                break;\n            case \"BULLET\":\n                utils.logBullet(text);\n                break;\n            case \"WARN\":\n                utils.logWarning(text);\n                break;\n            case \"WARN_ONCE\":\n                if (!this.warnOnceCache.has(text)) {\n                    utils.logWarning(text);\n                    this.warnOnceCache.add(text);\n                }\n                break;\n            case \"SUCCESS\":\n                utils.logSuccess(text);\n                break;\n        }\n    }\n    static handleRuntimeLog(log, ignore = []) {\n        if (ignore.indexOf(log.level) >= 0) {\n            return;\n        }\n        switch (log.level) {\n            case \"SYSTEM\":\n                EmulatorLogger.handleSystemLog(log);\n                break;\n            case \"USER\":\n                EmulatorLogger.log(\"USER\", `${clc.blackBright(\"> \")} ${log.text}`);\n                break;\n            case \"DEBUG\":\n                if (log.data && Object.keys(log.data).length > 0) {\n                    EmulatorLogger.log(\"DEBUG\", `[${log.type}] ${log.text} ${JSON.stringify(log.data)}`);\n                }\n                else {\n                    EmulatorLogger.log(\"DEBUG\", `[${log.type}] ${log.text}`);\n                }\n                break;\n            case \"INFO\":\n                EmulatorLogger.logLabeled(\"BULLET\", \"functions\", log.text);\n                break;\n            case \"WARN\":\n                EmulatorLogger.logLabeled(\"WARN\", \"functions\", log.text);\n                break;\n            case \"WARN_ONCE\":\n                EmulatorLogger.logLabeled(\"WARN_ONCE\", \"functions\", log.text);\n                break;\n            case \"FATAL\":\n                EmulatorLogger.logLabeled(\"WARN\", \"functions\", log.text);\n                break;\n            default:\n                EmulatorLogger.log(\"INFO\", `${log.level}: ${log.text}`);\n                break;\n        }\n    }\n    static handleSystemLog(systemLog) {\n        switch (systemLog.type) {\n            case \"runtime-status\":\n                if (systemLog.text === \"killed\") {\n                    EmulatorLogger.log(\"WARN\", `Your function was killed because it raised an unhandled error.`);\n                }\n                break;\n            case \"googleapis-network-access\":\n                EmulatorLogger.log(\"WARN\", `Google API requested!\\n   - URL: \"${systemLog.data.href}\"\\n   - Be careful, this may be a production service.`);\n                break;\n            case \"unidentified-network-access\":\n                EmulatorLogger.log(\"WARN\", `External network resource requested!\\n   - URL: \"${systemLog.data.href}\"\\n - Be careful, this may be a production service.`);\n                break;\n            case \"functions-config-missing-value\":\n                EmulatorLogger.log(\"WARN\", `Non-existent functions.config() value requested!\\n   - Path: \"${systemLog.data.valuePath}\"\\n   - Learn more at https://firebase.google.com/docs/functions/local-emulator`);\n                break;\n            case \"non-default-admin-app-used\":\n                EmulatorLogger.log(\"WARN\", `Non-default \"firebase-admin\" instance created!\\n   ` +\n                    `- This instance will *not* be mocked and will access production resources.`);\n                break;\n            case \"missing-module\":\n                EmulatorLogger.log(\"WARN\", `The Cloud Functions emulator requires the module \"${systemLog.data.name}\" to be installed as a ${systemLog.data.isDev ? \"development dependency\" : \"dependency\"}. To fix this, run \"npm install ${systemLog.data.isDev ? \"--save-dev\" : \"--save\"} ${systemLog.data.name}\" in your functions directory.`);\n                break;\n            case \"uninstalled-module\":\n                EmulatorLogger.log(\"WARN\", `The Cloud Functions emulator requires the module \"${systemLog.data.name}\" to be installed. This package is in your package.json, but it's not available. \\\nYou probably need to run \"npm install\" in your functions directory.`);\n                break;\n            case \"out-of-date-module\":\n                EmulatorLogger.log(\"WARN\", `The Cloud Functions emulator requires the module \"${systemLog.data.name}\" to be version >${systemLog.data.minVersion} so your version is too old. \\\nYou can probably fix this by running \"npm install ${systemLog.data.name}@latest\" in your functions directory.`);\n                break;\n            case \"missing-package-json\":\n                EmulatorLogger.log(\"WARN\", `The Cloud Functions directory you specified does not have a \"package.json\" file, so we can't load it.`);\n                break;\n            case \"function-code-resolution-failed\":\n                EmulatorLogger.log(\"WARN\", systemLog.data.error);\n                const helper = [\"We were unable to load your functions code. (see above)\"];\n                if (systemLog.data.isPotentially.wrong_directory) {\n                    helper.push(`   - There is no \"package.json\" file in your functions directory.`);\n                }\n                if (systemLog.data.isPotentially.typescript) {\n                    helper.push(\"   - It appears your code is written in Typescript, which must be compiled before emulation.\");\n                }\n                if (systemLog.data.isPotentially.uncompiled) {\n                    helper.push(`   - You may be able to run \"npm run build\" in your functions directory to resolve this.`);\n                }\n                utils.logWarning(helper.join(\"\\n\"));\n            default:\n        }\n    }\n    static logLabeled(type, label, text) {\n        if (EmulatorLogger.shouldSupress(type)) {\n            logger.debug(`[${label}] ${text}`);\n            return;\n        }\n        switch (type) {\n            case \"DEBUG\":\n                logger.debug(`[${label}] ${text}`);\n                break;\n            case \"BULLET\":\n                utils.logLabeledBullet(label, text);\n                break;\n            case \"SUCCESS\":\n                utils.logLabeledSuccess(label, text);\n                break;\n            case \"WARN\":\n                utils.logLabeledWarning(label, text);\n                break;\n            case \"WARN_ONCE\":\n                if (!this.warnOnceCache.has(text)) {\n                    utils.logLabeledWarning(label, text);\n                    this.warnOnceCache.add(text);\n                }\n                break;\n        }\n    }\n    static shouldSupress(type) {\n        const typeVerbosity = TYPE_VERBOSITY[type];\n        return EmulatorLogger.verbosity > typeVerbosity;\n    }\n}\nEmulatorLogger.verbosity = Verbosity.DEBUG;\nEmulatorLogger.warnOnceCache = new Set();\nexports.EmulatorLogger = EmulatorLogger;\n"]},"metadata":{},"sourceType":"script"}
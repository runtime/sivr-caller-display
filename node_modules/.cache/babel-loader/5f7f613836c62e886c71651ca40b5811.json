{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clc = require(\"cli-color\");\n\nconst ora = require(\"ora\");\n\nconst Table = require(\"cli-table\");\n\nconst command_1 = require(\"../command\");\n\nconst projects_1 = require(\"../management/projects\");\n\nconst requireAuth = require(\"../requireAuth\");\n\nconst logger = require(\"../logger\");\n\nconst NOT_SPECIFIED = clc.yellow(\"[Not specified]\");\n\nfunction logProjectsList(projects, currentProjectId) {\n  if (projects.length === 0) {\n    logger.info(clc.bold(\"No projects found.\"));\n    return;\n  }\n\n  const tableHead = [\"Project Display Name\", \"Project ID\", \"Resource Location ID\"];\n  const table = new Table({\n    head: tableHead,\n    style: {\n      head: [\"green\"]\n    }\n  });\n  projects.forEach(({\n    projectId,\n    displayName,\n    resources\n  }) => {\n    if (projectId === currentProjectId) {\n      projectId = clc.cyan.bold(`${projectId} (current)`);\n    }\n\n    table.push([displayName || NOT_SPECIFIED, projectId, resources && resources.locationId || NOT_SPECIFIED]);\n  });\n  logger.info(table.toString());\n}\n\nfunction logProjectCount(count = 0) {\n  if (count === 0) {\n    return;\n  }\n\n  logger.info(\"\");\n  logger.info(`${count} project(s) total.`);\n}\n\nmodule.exports = new command_1.Command(\"projects:list\").description(\"list all Firebase projects you have access to\").before(requireAuth).action(options => __awaiter(this, void 0, void 0, function* () {\n  const spinner = ora(\"Preparing the list of your Firebase projects\").start();\n  let projects;\n\n  try {\n    projects = yield projects_1.listFirebaseProjects();\n  } catch (err) {\n    spinner.fail();\n    throw err;\n  }\n\n  spinner.succeed();\n  logProjectsList(projects, options.project);\n  logProjectCount(projects.length);\n  return projects;\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/projects-list.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","clc","require","ora","Table","command_1","projects_1","requireAuth","logger","NOT_SPECIFIED","yellow","logProjectsList","projects","currentProjectId","length","info","bold","tableHead","table","head","style","forEach","projectId","displayName","resources","cyan","push","locationId","toString","logProjectCount","count","module","Command","description","before","action","options","spinner","start","listFirebaseProjects","err","fail","succeed","project"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clc = require(\"cli-color\");\nconst ora = require(\"ora\");\nconst Table = require(\"cli-table\");\nconst command_1 = require(\"../command\");\nconst projects_1 = require(\"../management/projects\");\nconst requireAuth = require(\"../requireAuth\");\nconst logger = require(\"../logger\");\nconst NOT_SPECIFIED = clc.yellow(\"[Not specified]\");\nfunction logProjectsList(projects, currentProjectId) {\n    if (projects.length === 0) {\n        logger.info(clc.bold(\"No projects found.\"));\n        return;\n    }\n    const tableHead = [\"Project Display Name\", \"Project ID\", \"Resource Location ID\"];\n    const table = new Table({ head: tableHead, style: { head: [\"green\"] } });\n    projects.forEach(({ projectId, displayName, resources }) => {\n        if (projectId === currentProjectId) {\n            projectId = clc.cyan.bold(`${projectId} (current)`);\n        }\n        table.push([\n            displayName || NOT_SPECIFIED,\n            projectId,\n            (resources && resources.locationId) || NOT_SPECIFIED,\n        ]);\n    });\n    logger.info(table.toString());\n}\nfunction logProjectCount(count = 0) {\n    if (count === 0) {\n        return;\n    }\n    logger.info(\"\");\n    logger.info(`${count} project(s) total.`);\n}\nmodule.exports = new command_1.Command(\"projects:list\")\n    .description(\"list all Firebase projects you have access to\")\n    .before(requireAuth)\n    .action((options) => __awaiter(this, void 0, void 0, function* () {\n    const spinner = ora(\"Preparing the list of your Firebase projects\").start();\n    let projects;\n    try {\n        projects = yield projects_1.listFirebaseProjects();\n    }\n    catch (err) {\n        spinner.fail();\n        throw err;\n    }\n    spinner.succeed();\n    logProjectsList(projects, options.project);\n    logProjectCount(projects.length);\n    return projects;\n}));\n"]},"metadata":{},"sourceType":"script"}
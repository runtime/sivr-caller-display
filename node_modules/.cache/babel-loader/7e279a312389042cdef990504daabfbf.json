{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar archiver = require(\"archiver\");\n\nvar clc = require(\"cli-color\");\n\nvar filesize = require(\"filesize\");\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar tmp = require(\"tmp\");\n\nvar _require = require(\"./error\"),\n    FirebaseError = _require.FirebaseError;\n\nvar functionsConfig = require(\"./functionsConfig\");\n\nvar getProjectId = require(\"./getProjectId\");\n\nvar logger = require(\"./logger\");\n\nvar utils = require(\"./utils\");\n\nvar parseTriggers = require(\"./parseTriggers\");\n\nvar fsAsync = require(\"./fsAsync\");\n\nvar _require2 = require(\"./runtimeChoiceSelector\"),\n    getRuntimeChoice = _require2.getRuntimeChoice;\n\nvar CONFIG_DEST_FILE = \".runtimeconfig.json\";\n\nvar _getFunctionsConfig = function (context) {\n  var next = Promise.resolve({});\n\n  if (context.runtimeConfigEnabled) {\n    next = functionsConfig.materializeAll(context.firebaseConfig.projectId).catch(function (err) {\n      logger.debug(err);\n\n      var errorCode = _.get(err, \"context.response.statusCode\");\n\n      if (errorCode === 500 || errorCode === 503) {\n        throw new FirebaseError(\"Cloud Runtime Config is currently experiencing issues, \" + \"which is preventing your functions from being deployed. \" + \"Please wait a few minutes and then try to deploy your functions again.\" + \"\\nRun `firebase deploy --except functions` if you want to continue deploying the rest of your project.\");\n      }\n    });\n  }\n\n  return next.then(function (config) {\n    var firebaseConfig = _.get(context, \"firebaseConfig\");\n\n    _.set(config, \"firebase\", firebaseConfig);\n\n    return config;\n  });\n};\n\nvar _pipeAsync = function (from, to) {\n  return new Promise(function (resolve, reject) {\n    to.on(\"finish\", resolve);\n    to.on(\"error\", reject);\n    from.pipe(to);\n  });\n};\n\nvar _packageSource = function (options, sourceDir, configValues) {\n  var tmpFile = tmp.fileSync({\n    prefix: \"firebase-functions-\",\n    postfix: \".zip\"\n  }).name;\n  var fileStream = fs.createWriteStream(tmpFile, {\n    flags: \"w\",\n    defaultEncoding: \"binary\"\n  });\n  var archive = archiver(\"zip\");\n\n  var archiveDone = _pipeAsync(archive, fileStream);\n\n  var ignore = options.config.get(\"functions.ignore\", [\"node_modules\"]);\n  ignore.push(\"firebase-debug.log\", CONFIG_DEST_FILE);\n  return fsAsync.readdirRecursive({\n    path: sourceDir,\n    ignore: ignore\n  }).then(function (files) {\n    _.forEach(files, function (file) {\n      archive.file(file.name, {\n        name: path.relative(sourceDir, file.name),\n        mode: file.mode\n      });\n    });\n\n    archive.append(JSON.stringify(configValues, null, 2), {\n      name: CONFIG_DEST_FILE,\n      mode: 420\n    });\n    archive.finalize();\n    return archiveDone;\n  }).then(function () {\n    utils.logBullet(clc.cyan.bold(\"functions:\") + \" packaged \" + clc.bold(options.config.get(\"functions.source\")) + \" (\" + filesize(archive.pointer()) + \") for uploading\");\n    return {\n      file: tmpFile,\n      stream: fs.createReadStream(tmpFile),\n      size: archive.pointer()\n    };\n  }, function (err) {\n    throw new FirebaseError(\"Could not read source directory. Remove links and shortcuts and try again.\", {\n      original: err,\n      exit: 1\n    });\n  });\n};\n\nmodule.exports = function (context, options) {\n  var configValues;\n  var sourceDir = options.config.path(options.config.get(\"functions.source\"));\n  context.runtimeChoice = getRuntimeChoice(sourceDir);\n  return _getFunctionsConfig(context).then(function (result) {\n    configValues = result;\n    return parseTriggers(getProjectId(options), sourceDir, configValues);\n  }).then(function (triggers) {\n    options.config.set(\"functions.triggers\", triggers);\n\n    if (options.config.get(\"functions.triggers\").length === 0) {\n      return Promise.resolve(null);\n    }\n\n    return _packageSource(options, sourceDir, configValues);\n  });\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/prepareFunctionsUpload.js"],"names":["_","require","archiver","clc","filesize","fs","path","tmp","FirebaseError","functionsConfig","getProjectId","logger","utils","parseTriggers","fsAsync","getRuntimeChoice","CONFIG_DEST_FILE","_getFunctionsConfig","context","next","Promise","resolve","runtimeConfigEnabled","materializeAll","firebaseConfig","projectId","catch","err","debug","errorCode","get","then","config","set","_pipeAsync","from","to","reject","on","pipe","_packageSource","options","sourceDir","configValues","tmpFile","fileSync","prefix","postfix","name","fileStream","createWriteStream","flags","defaultEncoding","archive","archiveDone","ignore","push","readdirRecursive","files","forEach","file","relative","mode","append","JSON","stringify","finalize","logBullet","cyan","bold","pointer","stream","createReadStream","size","original","exit","module","exports","runtimeChoice","result","triggers","length"],"mappings":"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","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar archiver = require(\"archiver\");\nvar clc = require(\"cli-color\");\nvar filesize = require(\"filesize\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar tmp = require(\"tmp\");\nvar { FirebaseError } = require(\"./error\");\nvar functionsConfig = require(\"./functionsConfig\");\nvar getProjectId = require(\"./getProjectId\");\nvar logger = require(\"./logger\");\nvar utils = require(\"./utils\");\nvar parseTriggers = require(\"./parseTriggers\");\nvar fsAsync = require(\"./fsAsync\");\nvar { getRuntimeChoice } = require(\"./runtimeChoiceSelector\");\nvar CONFIG_DEST_FILE = \".runtimeconfig.json\";\nvar _getFunctionsConfig = function (context) {\n    var next = Promise.resolve({});\n    if (context.runtimeConfigEnabled) {\n        next = functionsConfig.materializeAll(context.firebaseConfig.projectId).catch(function (err) {\n            logger.debug(err);\n            var errorCode = _.get(err, \"context.response.statusCode\");\n            if (errorCode === 500 || errorCode === 503) {\n                throw new FirebaseError(\"Cloud Runtime Config is currently experiencing issues, \" +\n                    \"which is preventing your functions from being deployed. \" +\n                    \"Please wait a few minutes and then try to deploy your functions again.\" +\n                    \"\\nRun `firebase deploy --except functions` if you want to continue deploying the rest of your project.\");\n            }\n        });\n    }\n    return next.then(function (config) {\n        var firebaseConfig = _.get(context, \"firebaseConfig\");\n        _.set(config, \"firebase\", firebaseConfig);\n        return config;\n    });\n};\nvar _pipeAsync = function (from, to) {\n    return new Promise(function (resolve, reject) {\n        to.on(\"finish\", resolve);\n        to.on(\"error\", reject);\n        from.pipe(to);\n    });\n};\nvar _packageSource = function (options, sourceDir, configValues) {\n    var tmpFile = tmp.fileSync({ prefix: \"firebase-functions-\", postfix: \".zip\" }).name;\n    var fileStream = fs.createWriteStream(tmpFile, {\n        flags: \"w\",\n        defaultEncoding: \"binary\",\n    });\n    var archive = archiver(\"zip\");\n    var archiveDone = _pipeAsync(archive, fileStream);\n    var ignore = options.config.get(\"functions.ignore\", [\"node_modules\"]);\n    ignore.push(\"firebase-debug.log\", CONFIG_DEST_FILE);\n    return fsAsync\n        .readdirRecursive({ path: sourceDir, ignore: ignore })\n        .then(function (files) {\n        _.forEach(files, function (file) {\n            archive.file(file.name, {\n                name: path.relative(sourceDir, file.name),\n                mode: file.mode,\n            });\n        });\n        archive.append(JSON.stringify(configValues, null, 2), {\n            name: CONFIG_DEST_FILE,\n            mode: 420,\n        });\n        archive.finalize();\n        return archiveDone;\n    })\n        .then(function () {\n        utils.logBullet(clc.cyan.bold(\"functions:\") +\n            \" packaged \" +\n            clc.bold(options.config.get(\"functions.source\")) +\n            \" (\" +\n            filesize(archive.pointer()) +\n            \") for uploading\");\n        return {\n            file: tmpFile,\n            stream: fs.createReadStream(tmpFile),\n            size: archive.pointer(),\n        };\n    }, function (err) {\n        throw new FirebaseError(\"Could not read source directory. Remove links and shortcuts and try again.\", {\n            original: err,\n            exit: 1,\n        });\n    });\n};\nmodule.exports = function (context, options) {\n    var configValues;\n    var sourceDir = options.config.path(options.config.get(\"functions.source\"));\n    context.runtimeChoice = getRuntimeChoice(sourceDir);\n    return _getFunctionsConfig(context)\n        .then(function (result) {\n        configValues = result;\n        return parseTriggers(getProjectId(options), sourceDir, configValues);\n    })\n        .then(function (triggers) {\n        options.config.set(\"functions.triggers\", triggers);\n        if (options.config.get(\"functions.triggers\").length === 0) {\n            return Promise.resolve(null);\n        }\n        return _packageSource(options, sourceDir, configValues);\n    });\n};\n"]},"metadata":{},"sourceType":"script"}
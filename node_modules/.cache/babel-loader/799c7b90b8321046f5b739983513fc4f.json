{"ast":null,"code":"/**\n * Copyright 2013 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar Auth2Client = require('./oauth2client.js');\n\nvar util = require('util');\n/**\n * Google Compute Engine metadata server token endpoint.\n * @private\n */\n\n\nCompute.GOOGLE_OAUTH2_TOKEN_URL_ = 'http://metadata.google.internal/computeMetadata/v1beta1/instance/service-accounts/default/token';\n/**\n * Google Compute Engine service account credentials.\n *\n * Retrieve access token from the metadata server.\n * See: https://developers.google.com/compute/docs/authentication\n * @constructor@constructor\n */\n\nfunction Compute() {\n  Compute.super_.call(this); // Start with an expired refresh token, which will automatically be refreshed\n  // before the first API call is made.\n\n  this.credentials = {\n    refresh_token: 'compute-placeholder',\n    expiry_date: 1\n  }; // Hook the post request method so we can provide better error messages.\n\n  this._postRequest = this._injectErrorMessage;\n}\n/**\n * Inherit from Auth2Client.\n */\n\n\nutil.inherits(Compute, Auth2Client);\n/**\n * Indicates whether the credential requires scopes to be created by calling createdScoped before\n * use.\n * @return {object} The cloned instance.\n */\n\nCompute.prototype.createScopedRequired = function () {\n  // On compute engine, scopes are specified at the compute instance's creation time,\n  // and cannot be changed. For this reason, always return false.\n  return false;\n};\n/**\n * Refreshes the access token.\n * @param {object=} ignored_\n * @param {function=} opt_callback Optional callback.\n * @private\n */\n\n\nCompute.prototype.refreshToken_ = function (ignored_, opt_callback) {\n  var uri = this.opts.tokenUrl || Compute.GOOGLE_OAUTH2_TOKEN_URL_; // request for new token\n\n  this.transporter.request({\n    method: 'GET',\n    uri: uri,\n    json: true\n  }, function (err, tokens, response) {\n    if (!err && tokens && tokens.expires_in) {\n      tokens.expiry_date = new Date().getTime() + tokens.expires_in * 1000;\n      delete tokens.expires_in;\n    }\n\n    if (opt_callback) {\n      opt_callback(err, tokens, response);\n    }\n  });\n};\n/**\n * Inserts a helpful error message guiding the user toward fixing common auth issues.\n * @param {object} err Error result.\n * @param {object} result The result.\n * @param {object} response The HTTP response.\n * @param {Function} callback The callback.\n * @private\n */\n\n\nCompute.prototype._injectErrorMessage = function (err, result, response, callback) {\n  if (response && response.statusCode) {\n    var helpfulMessage = null;\n\n    if (response.statusCode === 403) {\n      helpfulMessage = 'A Forbidden error was returned while attempting to retrieve an access ' + 'token for the Compute Engine built-in service account. This may be because the Compute ' + 'Engine instance does not have the correct permission scopes specified.';\n    } else if (response.statusCode === 404) {\n      helpfulMessage = 'A Not Found error was returned while attempting to retrieve an access' + 'token for the Compute Engine built-in service account. This may be because the Compute ' + 'Engine instance does not have any permission scopes specified.';\n    }\n\n    if (helpfulMessage) {\n      if (err && err.message) {\n        helpfulMessage += ' ' + err.message;\n      }\n\n      if (err) {\n        err.message = helpfulMessage;\n      } else {\n        err = new Error(helpfulMessage);\n        err.code = response.statusCode;\n      }\n    }\n  }\n\n  callback(err, result, response);\n};\n/**\n * Export Compute.\n */\n\n\nmodule.exports = Compute;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/google-auto-auth/node_modules/google-auth-library/lib/auth/computeclient.js"],"names":["Auth2Client","require","util","Compute","GOOGLE_OAUTH2_TOKEN_URL_","super_","call","credentials","refresh_token","expiry_date","_postRequest","_injectErrorMessage","inherits","prototype","createScopedRequired","refreshToken_","ignored_","opt_callback","uri","opts","tokenUrl","transporter","request","method","json","err","tokens","response","expires_in","Date","getTime","result","callback","statusCode","helpfulMessage","message","Error","code","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAAzB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;AAEA;;;;;;AAIAE,OAAO,CAACC,wBAAR,GACE,iGADF;AAGA;;;;;;;;AAOA,SAASD,OAAT,GAAmB;AACjBA,EAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CAAoB,IAApB,EADiB,CAEjB;AACA;;AACA,OAAKC,WAAL,GAAmB;AACjBC,IAAAA,aAAa,EAAE,qBADE;AAEjBC,IAAAA,WAAW,EAAE;AAFI,GAAnB,CAJiB,CASjB;;AACA,OAAKC,YAAL,GAAoB,KAAKC,mBAAzB;AACD;AAED;;;;;AAGAT,IAAI,CAACU,QAAL,CAAcT,OAAd,EAAuBH,WAAvB;AAEA;;;;;;AAKAG,OAAO,CAACU,SAAR,CAAkBC,oBAAlB,GAAyC,YAAW;AAClD;AACA;AACA,SAAO,KAAP;AACD,CAJD;AAMA;;;;;;;;AAMAX,OAAO,CAACU,SAAR,CAAkBE,aAAlB,GAAkC,UAASC,QAAT,EAAmBC,YAAnB,EAAiC;AACjE,MAAIC,GAAG,GAAG,KAAKC,IAAL,CAAUC,QAAV,IAAsBjB,OAAO,CAACC,wBAAxC,CADiE,CAEjE;;AACA,OAAKiB,WAAL,CAAiBC,OAAjB,CAAyB;AACvBC,IAAAA,MAAM,EAAE,KADe;AAEvBL,IAAAA,GAAG,EAAEA,GAFkB;AAGvBM,IAAAA,IAAI,EAAE;AAHiB,GAAzB,EAIG,UAASC,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,EAAgC;AACjC,QAAI,CAACF,GAAD,IAAQC,MAAR,IAAkBA,MAAM,CAACE,UAA7B,EAAyC;AACvCF,MAAAA,MAAM,CAACjB,WAAP,GAAuB,IAAIoB,IAAJ,EAAD,CAAaC,OAAb,KAA0BJ,MAAM,CAACE,UAAP,GAAoB,IAApE;AACA,aAAOF,MAAM,CAACE,UAAd;AACD;;AAED,QAAIX,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACQ,GAAD,EAAMC,MAAN,EAAcC,QAAd,CAAZ;AACD;AACF,GAbD;AAcD,CAjBD;AAmBA;;;;;;;;;;AAQAxB,OAAO,CAACU,SAAR,CAAkBF,mBAAlB,GAAwC,UAASc,GAAT,EAAcM,MAAd,EAAsBJ,QAAtB,EAAgCK,QAAhC,EAA0C;AAChF,MAAIL,QAAQ,IAAIA,QAAQ,CAACM,UAAzB,EAAqC;AACnC,QAAIC,cAAc,GAAG,IAArB;;AACA,QAAIP,QAAQ,CAACM,UAAT,KAAwB,GAA5B,EAAiC;AAC/BC,MAAAA,cAAc,GAAG,2EACf,yFADe,GAEf,wEAFF;AAGD,KAJD,MAIO,IAAIP,QAAQ,CAACM,UAAT,KAAwB,GAA5B,EAAiC;AACtCC,MAAAA,cAAc,GAAG,0EACf,yFADe,GAEf,gEAFF;AAGD;;AACD,QAAIA,cAAJ,EAAoB;AAClB,UAAIT,GAAG,IAAIA,GAAG,CAACU,OAAf,EAAwB;AACtBD,QAAAA,cAAc,IAAI,MAAMT,GAAG,CAACU,OAA5B;AACD;;AAED,UAAIV,GAAJ,EAAS;AACPA,QAAAA,GAAG,CAACU,OAAJ,GAAcD,cAAd;AACD,OAFD,MAEO;AACLT,QAAAA,GAAG,GAAG,IAAIW,KAAJ,CAAUF,cAAV,CAAN;AACAT,QAAAA,GAAG,CAACY,IAAJ,GAAWV,QAAQ,CAACM,UAApB;AACD;AACF;AACF;;AACDD,EAAAA,QAAQ,CAACP,GAAD,EAAMM,MAAN,EAAcJ,QAAd,CAAR;AACD,CA1BD;AA4BA;;;;;AAGAW,MAAM,CAACC,OAAP,GAAiBpC,OAAjB","sourcesContent":["/**\n * Copyright 2013 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nvar Auth2Client = require('./oauth2client.js');\nvar util = require('util');\n\n/**\n * Google Compute Engine metadata server token endpoint.\n * @private\n */\nCompute.GOOGLE_OAUTH2_TOKEN_URL_ =\n  'http://metadata.google.internal/computeMetadata/v1beta1/instance/service-accounts/default/token';\n\n/**\n * Google Compute Engine service account credentials.\n *\n * Retrieve access token from the metadata server.\n * See: https://developers.google.com/compute/docs/authentication\n * @constructor@constructor\n */\nfunction Compute() {\n  Compute.super_.call(this);\n  // Start with an expired refresh token, which will automatically be refreshed\n  // before the first API call is made.\n  this.credentials = {\n    refresh_token: 'compute-placeholder',\n    expiry_date: 1\n  };\n\n  // Hook the post request method so we can provide better error messages.\n  this._postRequest = this._injectErrorMessage;\n}\n\n/**\n * Inherit from Auth2Client.\n */\nutil.inherits(Compute, Auth2Client);\n\n/**\n * Indicates whether the credential requires scopes to be created by calling createdScoped before\n * use.\n * @return {object} The cloned instance.\n */\nCompute.prototype.createScopedRequired = function() {\n  // On compute engine, scopes are specified at the compute instance's creation time,\n  // and cannot be changed. For this reason, always return false.\n  return false;\n};\n\n/**\n * Refreshes the access token.\n * @param {object=} ignored_\n * @param {function=} opt_callback Optional callback.\n * @private\n */\nCompute.prototype.refreshToken_ = function(ignored_, opt_callback) {\n  var uri = this.opts.tokenUrl || Compute.GOOGLE_OAUTH2_TOKEN_URL_;\n  // request for new token\n  this.transporter.request({\n    method: 'GET',\n    uri: uri,\n    json: true\n  }, function(err, tokens, response) {\n    if (!err && tokens && tokens.expires_in) {\n      tokens.expiry_date = ((new Date()).getTime() + (tokens.expires_in * 1000));\n      delete tokens.expires_in;\n    }\n\n    if (opt_callback) {\n      opt_callback(err, tokens, response);\n    }\n  });\n};\n\n/**\n * Inserts a helpful error message guiding the user toward fixing common auth issues.\n * @param {object} err Error result.\n * @param {object} result The result.\n * @param {object} response The HTTP response.\n * @param {Function} callback The callback.\n * @private\n */\nCompute.prototype._injectErrorMessage = function(err, result, response, callback) {\n  if (response && response.statusCode) {\n    var helpfulMessage = null;\n    if (response.statusCode === 403) {\n      helpfulMessage = 'A Forbidden error was returned while attempting to retrieve an access ' +\n        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n        'Engine instance does not have the correct permission scopes specified.';\n    } else if (response.statusCode === 404) {\n      helpfulMessage = 'A Not Found error was returned while attempting to retrieve an access' +\n        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n        'Engine instance does not have any permission scopes specified.';\n    }\n    if (helpfulMessage) {\n      if (err && err.message) {\n        helpfulMessage += ' ' + err.message;\n      }\n\n      if (err) {\n        err.message = helpfulMessage;\n      } else {\n        err = new Error(helpfulMessage);\n        err.code = response.statusCode;\n      }\n    }\n  }\n  callback(err, result, response);\n};\n\n/**\n * Export Compute.\n */\nmodule.exports = Compute;\n"]},"metadata":{},"sourceType":"script"}
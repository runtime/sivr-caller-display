{"ast":null,"code":"\"use strict\";\n\nvar program = require(\"commander\");\n\nvar pkg = require(\"../package.json\");\n\nvar clc = require(\"cli-color\");\n\nvar logger = require(\"./logger\");\n\nvar didYouMean = require(\"didyoumean\");\n\nprogram.version(pkg.version);\nprogram.option(\"-P, --project <alias_or_project_id>\", \"the Firebase project to use for this command\");\nprogram.option(\"-j, --json\", \"output JSON instead of text, also triggers non-interactive mode\");\nprogram.option(\"--token <token>\", \"supply an auth token for this command\");\nprogram.option(\"--non-interactive\", \"error out of the command instead of waiting for prompts\");\nprogram.option(\"-i, --interactive\", \"force prompts to be displayed\");\nprogram.option(\"--debug\", \"print verbose debug output and keep a debug log file\");\nvar client = {};\nclient.cli = program;\nclient.logger = require(\"./logger\");\nclient.errorOut = require(\"./errorOut\").errorOut;\n\nclient.getCommand = function (name) {\n  for (var i = 0; i < client.cli.commands.length; i++) {\n    if (client.cli.commands[i]._name === name) {\n      return client.cli.commands[i];\n    }\n  }\n\n  return null;\n};\n\nrequire(\"./commands\")(client);\n\nfunction suggestCommands(cmd, cmdList) {\n  var suggestion = didYouMean(cmd, cmdList);\n\n  if (suggestion) {\n    logger.error();\n    logger.error(\"Did you mean \" + clc.bold(suggestion) + \"?\");\n    return suggestion;\n  }\n}\n\nvar commandNames = program.commands.map(function (cmd) {\n  return cmd._name;\n});\nvar RENAMED_COMMANDS = {\n  \"delete-site\": \"hosting:disable\",\n  \"disable:hosting\": \"hosting:disable\",\n  \"data:get\": \"database:get\",\n  \"data:push\": \"database:push\",\n  \"data:remove\": \"database:remove\",\n  \"data:set\": \"database:set\",\n  \"data:update\": \"database:update\",\n  \"deploy:hosting\": \"deploy --only hosting\",\n  \"deploy:database\": \"deploy --only database\",\n  \"prefs:token\": \"login:ci\"\n};\nprogram.action(function (_, args) {\n  var cmd = args[0];\n  logger.error(clc.bold.red(\"Error:\"), clc.bold(cmd), \"is not a Firebase command\");\n\n  if (RENAMED_COMMANDS[cmd]) {\n    logger.error();\n    logger.error(clc.bold(cmd) + \" has been renamed, please run\", clc.bold(\"firebase \" + RENAMED_COMMANDS[cmd]), \"instead\");\n  } else {\n    if (!suggestCommands(cmd, commandNames)) {\n      suggestCommands(args.join(\":\"), commandNames);\n    }\n  }\n\n  process.exit(1);\n});\nmodule.exports = client;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/index.js"],"names":["program","require","pkg","clc","logger","didYouMean","version","option","client","cli","errorOut","getCommand","name","i","commands","length","_name","suggestCommands","cmd","cmdList","suggestion","error","bold","commandNames","map","RENAMED_COMMANDS","action","_","args","red","join","process","exit","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar program = require(\"commander\");\nvar pkg = require(\"../package.json\");\nvar clc = require(\"cli-color\");\nvar logger = require(\"./logger\");\nvar didYouMean = require(\"didyoumean\");\nprogram.version(pkg.version);\nprogram.option(\"-P, --project <alias_or_project_id>\", \"the Firebase project to use for this command\");\nprogram.option(\"-j, --json\", \"output JSON instead of text, also triggers non-interactive mode\");\nprogram.option(\"--token <token>\", \"supply an auth token for this command\");\nprogram.option(\"--non-interactive\", \"error out of the command instead of waiting for prompts\");\nprogram.option(\"-i, --interactive\", \"force prompts to be displayed\");\nprogram.option(\"--debug\", \"print verbose debug output and keep a debug log file\");\nvar client = {};\nclient.cli = program;\nclient.logger = require(\"./logger\");\nclient.errorOut = require(\"./errorOut\").errorOut;\nclient.getCommand = function (name) {\n    for (var i = 0; i < client.cli.commands.length; i++) {\n        if (client.cli.commands[i]._name === name) {\n            return client.cli.commands[i];\n        }\n    }\n    return null;\n};\nrequire(\"./commands\")(client);\nfunction suggestCommands(cmd, cmdList) {\n    var suggestion = didYouMean(cmd, cmdList);\n    if (suggestion) {\n        logger.error();\n        logger.error(\"Did you mean \" + clc.bold(suggestion) + \"?\");\n        return suggestion;\n    }\n}\nvar commandNames = program.commands.map(function (cmd) {\n    return cmd._name;\n});\nvar RENAMED_COMMANDS = {\n    \"delete-site\": \"hosting:disable\",\n    \"disable:hosting\": \"hosting:disable\",\n    \"data:get\": \"database:get\",\n    \"data:push\": \"database:push\",\n    \"data:remove\": \"database:remove\",\n    \"data:set\": \"database:set\",\n    \"data:update\": \"database:update\",\n    \"deploy:hosting\": \"deploy --only hosting\",\n    \"deploy:database\": \"deploy --only database\",\n    \"prefs:token\": \"login:ci\",\n};\nprogram.action(function (_, args) {\n    var cmd = args[0];\n    logger.error(clc.bold.red(\"Error:\"), clc.bold(cmd), \"is not a Firebase command\");\n    if (RENAMED_COMMANDS[cmd]) {\n        logger.error();\n        logger.error(clc.bold(cmd) + \" has been renamed, please run\", clc.bold(\"firebase \" + RENAMED_COMMANDS[cmd]), \"instead\");\n    }\n    else {\n        if (!suggestCommands(cmd, commandNames)) {\n            suggestCommands(args.join(\":\"), commandNames);\n        }\n    }\n    process.exit(1);\n});\nmodule.exports = client;\n"]},"metadata":{},"sourceType":"script"}
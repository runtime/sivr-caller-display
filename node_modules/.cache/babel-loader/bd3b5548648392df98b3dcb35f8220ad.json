{"ast":null,"code":"/*\n * exception.js: Utility methods for gathing information about uncaughtExceptions.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n *\n */\nvar os = require('os'),\n    stackTrace = require('stack-trace');\n\nvar exception = exports;\n\nexception.getAllInfo = function (err) {\n  return {\n    date: new Date().toString(),\n    process: exception.getProcessInfo(),\n    os: exception.getOsInfo(),\n    trace: exception.getTrace(err),\n    stack: err.stack && err.stack.split('\\n')\n  };\n};\n\nexception.getProcessInfo = function () {\n  return {\n    pid: process.pid,\n    uid: process.getuid ? process.getuid() : null,\n    gid: process.getgid ? process.getgid() : null,\n    cwd: process.cwd(),\n    execPath: process.execPath,\n    version: process.version,\n    argv: process.argv,\n    memoryUsage: process.memoryUsage()\n  };\n};\n\nexception.getOsInfo = function () {\n  return {\n    loadavg: os.loadavg(),\n    uptime: os.uptime()\n  };\n};\n\nexception.getTrace = function (err) {\n  var trace = err ? stackTrace.parse(err) : stackTrace.get();\n  return trace.map(function (site) {\n    return {\n      column: site.getColumnNumber(),\n      file: site.getFileName(),\n      function: site.getFunctionName(),\n      line: site.getLineNumber(),\n      method: site.getMethodName(),\n      native: site.isNative()\n    };\n  });\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/winston/lib/winston/exception.js"],"names":["os","require","stackTrace","exception","exports","getAllInfo","err","date","Date","toString","process","getProcessInfo","getOsInfo","trace","getTrace","stack","split","pid","uid","getuid","gid","getgid","cwd","execPath","version","argv","memoryUsage","loadavg","uptime","parse","get","map","site","column","getColumnNumber","file","getFileName","function","getFunctionName","line","getLineNumber","method","getMethodName","native","isNative"],"mappings":"AAAA;;;;;;;AAQA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;AAAA,IACIC,UAAU,GAAGD,OAAO,CAAC,aAAD,CADxB;;AAGA,IAAIE,SAAS,GAAGC,OAAhB;;AAEAD,SAAS,CAACE,UAAV,GAAuB,UAAUC,GAAV,EAAe;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAK,IAAIC,IAAJ,GAAWC,QAAX,EADJ;AAELC,IAAAA,OAAO,EAAEP,SAAS,CAACQ,cAAV,EAFJ;AAGLX,IAAAA,EAAE,EAAOG,SAAS,CAACS,SAAV,EAHJ;AAILC,IAAAA,KAAK,EAAIV,SAAS,CAACW,QAAV,CAAmBR,GAAnB,CAJJ;AAKLS,IAAAA,KAAK,EAAIT,GAAG,CAACS,KAAJ,IAAaT,GAAG,CAACS,KAAJ,CAAUC,KAAV,CAAgB,IAAhB;AALjB,GAAP;AAOD,CARD;;AAUAb,SAAS,CAACQ,cAAV,GAA2B,YAAY;AACrC,SAAO;AACLM,IAAAA,GAAG,EAAUP,OAAO,CAACO,GADhB;AAELC,IAAAA,GAAG,EAAUR,OAAO,CAACS,MAAR,GAAiBT,OAAO,CAACS,MAAR,EAAjB,GAAoC,IAF5C;AAGLC,IAAAA,GAAG,EAAUV,OAAO,CAACW,MAAR,GAAiBX,OAAO,CAACW,MAAR,EAAjB,GAAoC,IAH5C;AAILC,IAAAA,GAAG,EAAUZ,OAAO,CAACY,GAAR,EAJR;AAKLC,IAAAA,QAAQ,EAAKb,OAAO,CAACa,QALhB;AAMLC,IAAAA,OAAO,EAAMd,OAAO,CAACc,OANhB;AAOLC,IAAAA,IAAI,EAASf,OAAO,CAACe,IAPhB;AAQLC,IAAAA,WAAW,EAAEhB,OAAO,CAACgB,WAAR;AARR,GAAP;AAUD,CAXD;;AAaAvB,SAAS,CAACS,SAAV,GAAsB,YAAY;AAChC,SAAO;AACLe,IAAAA,OAAO,EAAE3B,EAAE,CAAC2B,OAAH,EADJ;AAELC,IAAAA,MAAM,EAAG5B,EAAE,CAAC4B,MAAH;AAFJ,GAAP;AAID,CALD;;AAOAzB,SAAS,CAACW,QAAV,GAAqB,UAAUR,GAAV,EAAe;AAClC,MAAIO,KAAK,GAAGP,GAAG,GAAGJ,UAAU,CAAC2B,KAAX,CAAiBvB,GAAjB,CAAH,GAA2BJ,UAAU,CAAC4B,GAAX,EAA1C;AACA,SAAOjB,KAAK,CAACkB,GAAN,CAAU,UAAUC,IAAV,EAAgB;AAC/B,WAAO;AACLC,MAAAA,MAAM,EAAID,IAAI,CAACE,eAAL,EADL;AAELC,MAAAA,IAAI,EAAMH,IAAI,CAACI,WAAL,EAFL;AAGLC,MAAAA,QAAQ,EAAEL,IAAI,CAACM,eAAL,EAHL;AAILC,MAAAA,IAAI,EAAMP,IAAI,CAACQ,aAAL,EAJL;AAKLC,MAAAA,MAAM,EAAIT,IAAI,CAACU,aAAL,EALL;AAMLC,MAAAA,MAAM,EAAIX,IAAI,CAACY,QAAL;AANL,KAAP;AAQD,GATM,CAAP;AAUD,CAZD","sourcesContent":["/*\n * exception.js: Utility methods for gathing information about uncaughtExceptions.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n *\n */\n\nvar os = require('os'),\n    stackTrace = require('stack-trace');\n\nvar exception = exports;\n\nexception.getAllInfo = function (err) {\n  return {\n    date:    new Date().toString(),\n    process: exception.getProcessInfo(),\n    os:      exception.getOsInfo(),\n    trace:   exception.getTrace(err),\n    stack:   err.stack && err.stack.split('\\n')\n  };\n};\n\nexception.getProcessInfo = function () {\n  return {\n    pid:         process.pid,\n    uid:         process.getuid ? process.getuid() : null,\n    gid:         process.getgid ? process.getgid() : null,\n    cwd:         process.cwd(),\n    execPath:    process.execPath,\n    version:     process.version,\n    argv:        process.argv,\n    memoryUsage: process.memoryUsage()\n  };\n};\n\nexception.getOsInfo = function () {\n  return {\n    loadavg: os.loadavg(),\n    uptime:  os.uptime()\n  };\n};\n\nexception.getTrace = function (err) {\n  var trace = err ? stackTrace.parse(err) : stackTrace.get();\n  return trace.map(function (site) {\n    return {\n      column:   site.getColumnNumber(),\n      file:     site.getFileName(),\n      function: site.getFunctionName(),\n      line:     site.getLineNumber(),\n      method:   site.getMethodName(),\n      native:   site.isNative(),\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"script"}
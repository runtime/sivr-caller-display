{"ast":null,"code":"'use strict';\n\nvar isPromise = require('is-promise');\n/**\n * Return a function that will run a function asynchronously or synchronously\n *\n * example:\n * runAsync(wrappedFunction, callback)(...args);\n *\n * @param   {Function} func  Function to run\n * @param   {Function} cb    Callback function passed the `func` returned value\n * @return  {Function(arguments)} Arguments to pass to `func`. This function will in turn\n *                                return a Promise (Node >= 0.12) or call the callbacks.\n */\n\n\nvar runAsync = module.exports = function (func, cb) {\n  cb = cb || function () {};\n\n  return function () {\n    var async = false;\n    var args = arguments;\n    var promise = new Promise(function (resolve, reject) {\n      var answer = func.apply({\n        async: function () {\n          async = true;\n          return function (err, value) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(value);\n            }\n          };\n        }\n      }, Array.prototype.slice.call(args));\n\n      if (!async) {\n        if (isPromise(answer)) {\n          answer.then(resolve, reject);\n        } else {\n          resolve(answer);\n        }\n      }\n    });\n    promise.then(cb.bind(null, null), cb);\n    return promise;\n  };\n};\n\nrunAsync.cb = function (func, cb) {\n  return runAsync(function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    if (args.length === func.length - 1) {\n      args.push(this.async());\n    }\n\n    return func.apply(this, args);\n  }, cb);\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/run-async/index.js"],"names":["isPromise","require","runAsync","module","exports","func","cb","async","args","arguments","promise","Promise","resolve","reject","answer","apply","err","value","Array","prototype","slice","call","then","bind","length","push"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;AAEA;;;;;;;;;;;;;AAYA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AAClDA,EAAAA,EAAE,GAAGA,EAAE,IAAI,YAAY,CAAE,CAAzB;;AAEA,SAAO,YAAY;AACjB,QAAIC,KAAK,GAAG,KAAZ;AACA,QAAIC,IAAI,GAAGC,SAAX;AAEA,QAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACnD,UAAIC,MAAM,GAAGT,IAAI,CAACU,KAAL,CAAW;AACtBR,QAAAA,KAAK,EAAE,YAAY;AACjBA,UAAAA,KAAK,GAAG,IAAR;AACA,iBAAO,UAAUS,GAAV,EAAeC,KAAf,EAAsB;AAC3B,gBAAID,GAAJ,EAAS;AACPH,cAAAA,MAAM,CAACG,GAAD,CAAN;AACD,aAFD,MAEO;AACLJ,cAAAA,OAAO,CAACK,KAAD,CAAP;AACD;AACF,WAND;AAOD;AAVqB,OAAX,EAWVC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2Bb,IAA3B,CAXU,CAAb;;AAaA,UAAI,CAACD,KAAL,EAAY;AACV,YAAIP,SAAS,CAACc,MAAD,CAAb,EAAuB;AACrBA,UAAAA,MAAM,CAACQ,IAAP,CAAYV,OAAZ,EAAqBC,MAArB;AACD,SAFD,MAEO;AACLD,UAAAA,OAAO,CAACE,MAAD,CAAP;AACD;AACF;AACF,KArBa,CAAd;AAuBAJ,IAAAA,OAAO,CAACY,IAAR,CAAahB,EAAE,CAACiB,IAAH,CAAQ,IAAR,EAAc,IAAd,CAAb,EAAkCjB,EAAlC;AAEA,WAAOI,OAAP;AACD,GA9BD;AA+BD,CAlCD;;AAoCAR,QAAQ,CAACI,EAAT,GAAc,UAAUD,IAAV,EAAgBC,EAAhB,EAAoB;AAChC,SAAOJ,QAAQ,CAAC,YAAY;AAC1B,QAAIM,IAAI,GAAGU,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BZ,SAA3B,CAAX;;AACA,QAAID,IAAI,CAACgB,MAAL,KAAgBnB,IAAI,CAACmB,MAAL,GAAc,CAAlC,EAAqC;AACnChB,MAAAA,IAAI,CAACiB,IAAL,CAAU,KAAKlB,KAAL,EAAV;AACD;;AACD,WAAOF,IAAI,CAACU,KAAL,CAAW,IAAX,EAAiBP,IAAjB,CAAP;AACD,GANc,EAMZF,EANY,CAAf;AAOD,CARD","sourcesContent":["'use strict';\n\nvar isPromise = require('is-promise');\n\n/**\n * Return a function that will run a function asynchronously or synchronously\n *\n * example:\n * runAsync(wrappedFunction, callback)(...args);\n *\n * @param   {Function} func  Function to run\n * @param   {Function} cb    Callback function passed the `func` returned value\n * @return  {Function(arguments)} Arguments to pass to `func`. This function will in turn\n *                                return a Promise (Node >= 0.12) or call the callbacks.\n */\n\nvar runAsync = module.exports = function (func, cb) {\n  cb = cb || function () {};\n\n  return function () {\n    var async = false;\n    var args = arguments;\n\n    var promise = new Promise(function (resolve, reject) {\n      var answer = func.apply({\n        async: function () {\n          async = true;\n          return function (err, value) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(value);\n            }\n          };\n        }\n      }, Array.prototype.slice.call(args));\n\n      if (!async) {\n        if (isPromise(answer)) {\n          answer.then(resolve, reject);\n        } else {\n          resolve(answer);\n        }\n      }\n    });\n\n    promise.then(cb.bind(null, null), cb);\n\n    return promise;\n  }\n};\n\nrunAsync.cb = function (func, cb) {\n  return runAsync(function () {\n    var args = Array.prototype.slice.call(arguments);\n    if (args.length === func.length - 1) {\n      args.push(this.async());\n    }\n    return func.apply(this, args);\n  }, cb);\n};\n"]},"metadata":{},"sourceType":"script"}
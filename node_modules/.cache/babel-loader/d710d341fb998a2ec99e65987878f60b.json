{"ast":null,"code":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar _ = require('lodash');\n\nvar makerouter = require('router');\n\nvar fsProvider = require('./providers/fs');\n\nvar Responder = require('./responder');\n\nvar activator = require('./activator');\n\nvar notFound = require('./middleware/missing');\n\nvar promiseback = require('./utils/promiseback');\n\nvar loadConfigFile = require('./loaders/config-file');\n\nvar defaultCompressor = require('compression')();\n\nvar CWD = process.cwd();\n\nvar superstatic = function (spec) {\n  spec = _.assign({\n    stack: 'default'\n  }, spec);\n\n  if (!_.has(spec, 'fallthrough')) {\n    spec.fallthrough = true;\n  }\n\n  if (_.isString(spec.stack) && _.has(superstatic.stacks, spec.stack)) {\n    spec.stack = superstatic.stacks[spec.stack];\n  }\n\n  var router = makerouter();\n  var cwd = spec.cwd || CWD; // Load data\n\n  var config = spec.config = loadConfigFile(spec.config);\n  config.errorPage = config.errorPage || '/404.html'; // Set up provider\n\n  var provider = spec.provider ? promiseback(spec.provider, 2) : fsProvider(_.extend({\n    cwd: cwd // default current working directory\n\n  }, config)); // Select compression middleware\n\n  var compressor;\n\n  if (_.isFunction(spec.compression)) {\n    compressor = spec.compression;\n  } else if (spec.compression || spec.gzip) {\n    compressor = defaultCompressor;\n  } else {\n    compressor = null;\n  } // Setup helpers\n\n\n  router.use(function (req, res, next) {\n    res.superstatic = new Responder(req, res, {\n      provider: provider,\n      config: config,\n      compressor: compressor,\n      rewriters: spec.rewriters\n    });\n    next();\n  });\n  router.use(activator(spec, provider)); // Handle not found pages\n\n  if (!spec.fallthrough) {\n    router.use(notFound(spec));\n  }\n\n  return router;\n};\n\nsuperstatic.stacks = {\n  default: ['protect', 'redirects', 'headers', 'env', 'files', 'rewrites', 'missing'],\n  strict: ['redirects', 'headers', 'files', 'rewrites', 'missing']\n};\nmodule.exports = superstatic;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/superstatic/lib/superstatic.js"],"names":["_","require","makerouter","fsProvider","Responder","activator","notFound","promiseback","loadConfigFile","defaultCompressor","CWD","process","cwd","superstatic","spec","assign","stack","has","fallthrough","isString","stacks","router","config","errorPage","provider","extend","compressor","isFunction","compression","gzip","use","req","res","next","rewriters","default","strict","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar _ = require('lodash');\nvar makerouter = require('router');\n\nvar fsProvider = require('./providers/fs');\nvar Responder = require('./responder');\nvar activator = require('./activator');\nvar notFound = require('./middleware/missing');\n\nvar promiseback = require('./utils/promiseback');\nvar loadConfigFile = require('./loaders/config-file');\nvar defaultCompressor = require('compression')();\n\nvar CWD = process.cwd();\n\nvar superstatic = function(spec) {\n  spec = _.assign({\n    stack: 'default'\n  }, spec);\n\n  if (!_.has(spec, 'fallthrough')) {\n    spec.fallthrough = true;\n  }\n\n  if (_.isString(spec.stack) && _.has(superstatic.stacks, spec.stack)) {\n    spec.stack = superstatic.stacks[spec.stack];\n  }\n\n  var router = makerouter();\n  var cwd = spec.cwd || CWD;\n\n  // Load data\n  var config = spec.config = loadConfigFile(spec.config);\n  config.errorPage = config.errorPage || '/404.html';\n\n  // Set up provider\n  var provider = spec.provider ? promiseback(spec.provider, 2) : fsProvider(_.extend({\n    cwd: cwd // default current working directory\n  }, config));\n\n  // Select compression middleware\n  var compressor;\n  if (_.isFunction(spec.compression)) {\n    compressor = spec.compression;\n  } else if (spec.compression || spec.gzip) {\n    compressor = defaultCompressor;\n  } else {\n    compressor = null;\n  }\n\n  // Setup helpers\n  router.use(function(req, res, next) {\n    res.superstatic = new Responder(req, res, {\n      provider: provider,\n      config: config,\n      compressor: compressor,\n      rewriters: spec.rewriters\n    });\n\n    next();\n  });\n\n  router.use(activator(spec, provider));\n\n  // Handle not found pages\n  if (!spec.fallthrough) {\n    router.use(notFound(spec));\n  }\n\n  return router;\n};\n\nsuperstatic.stacks = {\n  default: ['protect', 'redirects', 'headers', 'env', 'files', 'rewrites', 'missing'],\n  strict: ['redirects', 'headers', 'files', 'rewrites', 'missing']\n};\n\nmodule.exports = superstatic;\n"]},"metadata":{},"sourceType":"script"}
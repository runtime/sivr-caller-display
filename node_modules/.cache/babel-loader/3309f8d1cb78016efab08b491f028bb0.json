{"ast":null,"code":"\"use strict\";\n\nconst api = require(\"../../api\");\n\nconst utils = require(\"../../utils\");\n\nconst logger = require(\"../../logger\");\n\nmodule.exports = function (context, options) {\n  if (!context.hosting || !context.hosting.deploys) {\n    return Promise.resolve();\n  }\n\n  logger.debug(JSON.stringify(context.hosting.deploys, null, 2));\n  return Promise.all(context.hosting.deploys.map(function (deploy) {\n    utils.logLabeledBullet(\"hosting[\" + deploy.site + \"]\", \"finalizing version...\");\n    return api.request(\"PATCH\", \"/v1beta1/\" + deploy.version + \"?updateMask=status\", {\n      origin: api.hostingApiOrigin,\n      auth: true,\n      data: {\n        status: \"FINALIZED\"\n      }\n    }).then(function (result) {\n      logger.debug(\"[hosting] finalized version for \" + deploy.site + \":\", result.body);\n      utils.logLabeledSuccess(\"hosting[\" + deploy.site + \"]\", \"version finalized\");\n      utils.logLabeledBullet(\"hosting[\" + deploy.site + \"]\", \"releasing new version...\");\n      return api.request(\"POST\", \"/v1beta1/sites/\" + deploy.site + \"/releases?version_name=\" + deploy.version, {\n        auth: true,\n        origin: api.hostingApiOrigin,\n        data: {\n          message: options.message || null\n        }\n      });\n    }).then(function (result) {\n      logger.debug(\"[hosting] release:\", result.body);\n      utils.logLabeledSuccess(\"hosting[\" + deploy.site + \"]\", \"release complete\");\n    });\n  }));\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/deploy/hosting/release.js"],"names":["api","require","utils","logger","module","exports","context","options","hosting","deploys","Promise","resolve","debug","JSON","stringify","all","map","deploy","logLabeledBullet","site","request","version","origin","hostingApiOrigin","auth","data","status","then","result","body","logLabeledSuccess","message"],"mappings":"AAAA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,cAAD,CAAtB;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACzC,MAAI,CAACD,OAAO,CAACE,OAAT,IAAoB,CAACF,OAAO,CAACE,OAAR,CAAgBC,OAAzC,EAAkD;AAC9C,WAAOC,OAAO,CAACC,OAAR,EAAP;AACH;;AACDR,EAAAA,MAAM,CAACS,KAAP,CAAaC,IAAI,CAACC,SAAL,CAAeR,OAAO,CAACE,OAAR,CAAgBC,OAA/B,EAAwC,IAAxC,EAA8C,CAA9C,CAAb;AACA,SAAOC,OAAO,CAACK,GAAR,CAAYT,OAAO,CAACE,OAAR,CAAgBC,OAAhB,CAAwBO,GAAxB,CAA4B,UAAUC,MAAV,EAAkB;AAC7Df,IAAAA,KAAK,CAACgB,gBAAN,CAAuB,aAAaD,MAAM,CAACE,IAApB,GAA2B,GAAlD,EAAuD,uBAAvD;AACA,WAAOnB,GAAG,CACLoB,OADE,CACM,OADN,EACe,cAAcH,MAAM,CAACI,OAArB,GAA+B,oBAD9C,EACoE;AACvEC,MAAAA,MAAM,EAAEtB,GAAG,CAACuB,gBAD2D;AAEvEC,MAAAA,IAAI,EAAE,IAFiE;AAGvEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAHiE,KADpE,EAMFC,IANE,CAMG,UAAUC,MAAV,EAAkB;AACxBzB,MAAAA,MAAM,CAACS,KAAP,CAAa,qCAAqCK,MAAM,CAACE,IAA5C,GAAmD,GAAhE,EAAqES,MAAM,CAACC,IAA5E;AACA3B,MAAAA,KAAK,CAAC4B,iBAAN,CAAwB,aAAab,MAAM,CAACE,IAApB,GAA2B,GAAnD,EAAwD,mBAAxD;AACAjB,MAAAA,KAAK,CAACgB,gBAAN,CAAuB,aAAaD,MAAM,CAACE,IAApB,GAA2B,GAAlD,EAAuD,0BAAvD;AACA,aAAOnB,GAAG,CAACoB,OAAJ,CAAY,MAAZ,EAAoB,oBAAoBH,MAAM,CAACE,IAA3B,GAAkC,yBAAlC,GAA8DF,MAAM,CAACI,OAAzF,EAAkG;AACrGG,QAAAA,IAAI,EAAE,IAD+F;AAErGF,QAAAA,MAAM,EAAEtB,GAAG,CAACuB,gBAFyF;AAGrGE,QAAAA,IAAI,EAAE;AAAEM,UAAAA,OAAO,EAAExB,OAAO,CAACwB,OAAR,IAAmB;AAA9B;AAH+F,OAAlG,CAAP;AAKH,KAfM,EAgBFJ,IAhBE,CAgBG,UAAUC,MAAV,EAAkB;AACxBzB,MAAAA,MAAM,CAACS,KAAP,CAAa,oBAAb,EAAmCgB,MAAM,CAACC,IAA1C;AACA3B,MAAAA,KAAK,CAAC4B,iBAAN,CAAwB,aAAab,MAAM,CAACE,IAApB,GAA2B,GAAnD,EAAwD,kBAAxD;AACH,KAnBM,CAAP;AAoBH,GAtBkB,CAAZ,CAAP;AAuBH,CA5BD","sourcesContent":["\"use strict\";\nconst api = require(\"../../api\");\nconst utils = require(\"../../utils\");\nconst logger = require(\"../../logger\");\nmodule.exports = function (context, options) {\n    if (!context.hosting || !context.hosting.deploys) {\n        return Promise.resolve();\n    }\n    logger.debug(JSON.stringify(context.hosting.deploys, null, 2));\n    return Promise.all(context.hosting.deploys.map(function (deploy) {\n        utils.logLabeledBullet(\"hosting[\" + deploy.site + \"]\", \"finalizing version...\");\n        return api\n            .request(\"PATCH\", \"/v1beta1/\" + deploy.version + \"?updateMask=status\", {\n            origin: api.hostingApiOrigin,\n            auth: true,\n            data: { status: \"FINALIZED\" },\n        })\n            .then(function (result) {\n            logger.debug(\"[hosting] finalized version for \" + deploy.site + \":\", result.body);\n            utils.logLabeledSuccess(\"hosting[\" + deploy.site + \"]\", \"version finalized\");\n            utils.logLabeledBullet(\"hosting[\" + deploy.site + \"]\", \"releasing new version...\");\n            return api.request(\"POST\", \"/v1beta1/sites/\" + deploy.site + \"/releases?version_name=\" + deploy.version, {\n                auth: true,\n                origin: api.hostingApiOrigin,\n                data: { message: options.message || null },\n            });\n        })\n            .then(function (result) {\n            logger.debug(\"[hosting] release:\", result.body);\n            utils.logLabeledSuccess(\"hosting[\" + deploy.site + \"]\", \"release complete\");\n        });\n    }));\n};\n"]},"metadata":{},"sourceType":"script"}
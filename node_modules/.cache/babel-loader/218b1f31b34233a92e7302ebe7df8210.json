{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst api = require(\"../api\");\n\nconst clc = require(\"cli-color\");\n\nconst ora = require(\"ora\");\n\nconst _ = require(\"lodash\");\n\nconst logger = require(\"../logger\");\n\nconst error_1 = require(\"../error\");\n\nconst operation_poller_1 = require(\"../operation-poller\");\n\nconst prompt_1 = require(\"../prompt\");\n\nconst utils = require(\"../utils\");\n\nconst TIMEOUT_MILLIS = 30000;\nconst MAXIMUM_PROMPT_LIST = 100;\nconst PROJECT_LIST_PAGE_SIZE = 1000;\nconst CREATE_PROJECT_API_REQUEST_TIMEOUT_MILLIS = 15000;\nvar ProjectParentResourceType;\n\n(function (ProjectParentResourceType) {\n  ProjectParentResourceType[\"ORGANIZATION\"] = \"organization\";\n  ProjectParentResourceType[\"FOLDER\"] = \"folder\";\n})(ProjectParentResourceType = exports.ProjectParentResourceType || (exports.ProjectParentResourceType = {}));\n\nexports.PROJECTS_CREATE_QUESTIONS = [{\n  type: \"input\",\n  name: \"projectId\",\n  default: \"\",\n  message: \"Please specify a unique project id \" + `(${clc.yellow(\"warning\")}: cannot be modified afterward) [6-30 characters]:\\n`\n}, {\n  type: \"input\",\n  name: \"displayName\",\n  default: \"\",\n  message: \"What would you like to call your project? (defaults to your project ID)\"\n}];\n\nfunction createFirebaseProjectAndLog(projectId, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const spinner = ora(\"Creating Google Cloud Platform project\").start();\n\n    try {\n      yield createCloudProject(projectId, options);\n      spinner.succeed();\n    } catch (err) {\n      spinner.fail();\n      throw err;\n    }\n\n    return addFirebaseToCloudProjectAndLog(projectId);\n  });\n}\n\nexports.createFirebaseProjectAndLog = createFirebaseProjectAndLog;\n\nfunction addFirebaseToCloudProjectAndLog(projectId) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let projectInfo;\n    const spinner = ora(\"Adding Firebase resources to Google Cloud Platform project\").start();\n\n    try {\n      projectInfo = yield addFirebaseToCloudProject(projectId);\n    } catch (err) {\n      spinner.fail();\n      throw err;\n    }\n\n    spinner.succeed();\n    logNewFirebaseProjectInfo(projectInfo);\n    return projectInfo;\n  });\n}\n\nexports.addFirebaseToCloudProjectAndLog = addFirebaseToCloudProjectAndLog;\n\nfunction logNewFirebaseProjectInfo(projectInfo) {\n  logger.info(\"\");\n\n  if (process.platform === \"win32\") {\n    logger.info(\"=== Your Firebase project is ready! ===\");\n  } else {\n    logger.info(\"ðŸŽ‰ðŸŽ‰ðŸŽ‰ Your Firebase project is ready! ðŸŽ‰ðŸŽ‰ðŸŽ‰\");\n  }\n\n  logger.info(\"\");\n  logger.info(\"Project information:\");\n  logger.info(`   - Project ID: ${clc.bold(projectInfo.projectId)}`);\n  logger.info(`   - Project Name: ${clc.bold(projectInfo.displayName)}`);\n  logger.info(\"\");\n  logger.info(\"Firebase console is available at\");\n  logger.info(`https://console.firebase.google.com/project/${clc.bold(projectInfo.projectId)}/overview`);\n}\n\nfunction getOrPromptProject(options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (options.project) {\n      return yield getFirebaseProject(options.project);\n    }\n\n    return selectProjectInteractively();\n  });\n}\n\nexports.getOrPromptProject = getOrPromptProject;\n\nfunction selectProjectInteractively(pageSize = MAXIMUM_PROMPT_LIST) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const _ref = yield getFirebaseProjectPage(pageSize),\n          projects = _ref.projects,\n          nextPageToken = _ref.nextPageToken;\n\n    if (projects.length === 0) {\n      throw new error_1.FirebaseError(\"There are no Firebase projects associated with this account.\");\n    }\n\n    if (nextPageToken) {\n      return selectProjectByPrompting();\n    }\n\n    return selectProjectFromList(projects);\n  });\n}\n\nfunction selectProjectByPrompting() {\n  return __awaiter(this, void 0, void 0, function* () {\n    const projectId = yield prompt_1.promptOnce({\n      type: \"input\",\n      message: \"Please input the project ID you would like to use:\"\n    });\n    return yield getFirebaseProject(projectId);\n  });\n}\n\nfunction selectProjectFromList(projects = []) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let choices = projects.filter(p => !!p).map(p => {\n      return {\n        name: p.projectId + (p.displayName ? ` (${p.displayName})` : \"\"),\n        value: p.projectId\n      };\n    });\n    choices = _.orderBy(choices, [\"name\"], [\"asc\"]);\n\n    if (choices.length >= 25) {\n      utils.logBullet(`Don't want to scroll through all your projects? If you know your project ID, ` + `you can initialize it directly using ${clc.bold(\"firebase init --project <project_id>\")}.\\n`);\n    }\n\n    const projectId = yield prompt_1.promptOnce({\n      type: \"list\",\n      name: \"id\",\n      message: \"Select a default Firebase project for this directory:\",\n      choices\n    });\n    const project = projects.find(p => p.projectId === projectId);\n\n    if (!project) {\n      throw new error_1.FirebaseError(\"Unexpected error. Project does not exist\");\n    }\n\n    return project;\n  });\n}\n\nfunction getProjectId(cloudProject) {\n  const resourceName = cloudProject.project;\n  return resourceName.substring(resourceName.lastIndexOf(\"/\") + 1);\n}\n\nfunction promptAvailableProjectId() {\n  return __awaiter(this, void 0, void 0, function* () {\n    const _ref2 = yield getAvailableCloudProjectPage(MAXIMUM_PROMPT_LIST),\n          projects = _ref2.projects,\n          nextPageToken = _ref2.nextPageToken;\n\n    if (projects.length === 0) {\n      throw new error_1.FirebaseError(\"There are no available Google Cloud projects to add Firebase services.\");\n    }\n\n    if (nextPageToken) {\n      return yield prompt_1.promptOnce({\n        type: \"input\",\n        message: \"Please input the ID of the Google Cloud Project you would like to add Firebase:\"\n      });\n    } else {\n      let choices = projects.filter(p => !!p).map(p => {\n        const projectId = getProjectId(p);\n        return {\n          name: projectId + (p.displayName ? ` (${p.displayName})` : \"\"),\n          value: projectId\n        };\n      });\n      choices = _.orderBy(choices, [\"name\"], [\"asc\"]);\n      return yield prompt_1.promptOnce({\n        type: \"list\",\n        name: \"id\",\n        message: \"Select the Google Cloud Platform project you would like to add Firebase:\",\n        choices\n      });\n    }\n  });\n}\n\nexports.promptAvailableProjectId = promptAvailableProjectId;\n\nfunction createCloudProject(projectId, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      const response = yield api.request(\"POST\", \"/v1/projects\", {\n        auth: true,\n        origin: api.resourceManagerOrigin,\n        timeout: CREATE_PROJECT_API_REQUEST_TIMEOUT_MILLIS,\n        data: {\n          projectId,\n          name: options.displayName || projectId,\n          parent: options.parentResource\n        }\n      });\n      const projectInfo = yield operation_poller_1.pollOperation({\n        pollerName: \"Project Creation Poller\",\n        apiOrigin: api.resourceManagerOrigin,\n        apiVersion: \"v1\",\n        operationResourceName: response.body.name\n      });\n      return projectInfo;\n    } catch (err) {\n      logger.debug(err.message);\n      throw new error_1.FirebaseError(\"Failed to create Google Cloud project. See firebase-debug.log for more info.\", {\n        exit: 2,\n        original: err\n      });\n    }\n  });\n}\n\nexports.createCloudProject = createCloudProject;\n\nfunction addFirebaseToCloudProject(projectId) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      const response = yield api.request(\"POST\", `/v1beta1/projects/${projectId}:addFirebase`, {\n        auth: true,\n        origin: api.firebaseApiOrigin,\n        timeout: CREATE_PROJECT_API_REQUEST_TIMEOUT_MILLIS\n      });\n      const projectInfo = yield operation_poller_1.pollOperation({\n        pollerName: \"Add Firebase Poller\",\n        apiOrigin: api.firebaseApiOrigin,\n        apiVersion: \"v1beta1\",\n        operationResourceName: response.body.name\n      });\n      return projectInfo;\n    } catch (err) {\n      logger.debug(err.message);\n      throw new error_1.FirebaseError(\"Failed to add Firebase to Google Cloud Platform project. See firebase-debug.log for more info.\", {\n        exit: 2,\n        original: err\n      });\n    }\n  });\n}\n\nexports.addFirebaseToCloudProject = addFirebaseToCloudProject;\n\nfunction getProjectPage(apiResource, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let apiResponse;\n    const responseKey = options.responseKey,\n          pageToken = options.pageToken,\n          pageSize = options.pageSize;\n    const pageTokenQueryString = pageToken ? `&pageToken=${pageToken}` : \"\";\n    apiResponse = yield api.request(\"GET\", `${apiResource}?pageSize=${pageSize}${pageTokenQueryString}`, {\n      auth: true,\n      origin: api.firebaseApiOrigin,\n      timeout: TIMEOUT_MILLIS\n    });\n    return {\n      projects: apiResponse.body[responseKey] || [],\n      nextPageToken: apiResponse.body.nextPageToken\n    };\n  });\n}\n\nfunction getFirebaseProjectPage(pageSize = PROJECT_LIST_PAGE_SIZE, pageToken) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let projectPage;\n\n    try {\n      projectPage = yield getProjectPage(\"/v1beta1/projects\", {\n        responseKey: \"results\",\n        pageSize,\n        pageToken\n      });\n    } catch (err) {\n      logger.debug(err.message);\n      throw new error_1.FirebaseError(\"Failed to list Firebase projects. See firebase-debug.log for more info.\", {\n        exit: 2,\n        original: err\n      });\n    }\n\n    return projectPage;\n  });\n}\n\nexports.getFirebaseProjectPage = getFirebaseProjectPage;\n\nfunction getAvailableCloudProjectPage(pageSize = PROJECT_LIST_PAGE_SIZE, pageToken) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      return yield getProjectPage(\"/v1beta1/availableProjects\", {\n        responseKey: \"projectInfo\",\n        pageSize,\n        pageToken\n      });\n    } catch (err) {\n      logger.debug(err.message);\n      throw new error_1.FirebaseError(\"Failed to list available Google Cloud Platform projects. See firebase-debug.log for more info.\", {\n        exit: 2,\n        original: err\n      });\n    }\n  });\n}\n\nexports.getAvailableCloudProjectPage = getAvailableCloudProjectPage;\n\nfunction listFirebaseProjects(pageSize) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const projects = [];\n    let nextPageToken;\n\n    do {\n      const projectPage = yield getFirebaseProjectPage(pageSize, nextPageToken);\n      projects.push(...projectPage.projects);\n      nextPageToken = projectPage.nextPageToken;\n    } while (nextPageToken);\n\n    return projects;\n  });\n}\n\nexports.listFirebaseProjects = listFirebaseProjects;\n\nfunction getFirebaseProject(projectId) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      const response = yield api.request(\"GET\", `/v1beta1/projects/${projectId}`, {\n        auth: true,\n        origin: api.firebaseApiOrigin,\n        timeout: TIMEOUT_MILLIS\n      });\n      return response.body;\n    } catch (err) {\n      logger.debug(err.message);\n      throw new error_1.FirebaseError(`Failed to get Firebase project ${projectId}. ` + \"Please make sure the project exists and your account has permission to access it.\", {\n        exit: 2,\n        original: err\n      });\n    }\n  });\n}\n\nexports.getFirebaseProject = getFirebaseProject;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/management/projects.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","api","require","clc","ora","_","logger","error_1","operation_poller_1","prompt_1","utils","TIMEOUT_MILLIS","MAXIMUM_PROMPT_LIST","PROJECT_LIST_PAGE_SIZE","CREATE_PROJECT_API_REQUEST_TIMEOUT_MILLIS","ProjectParentResourceType","PROJECTS_CREATE_QUESTIONS","type","name","default","message","yellow","createFirebaseProjectAndLog","projectId","options","spinner","start","createCloudProject","succeed","err","fail","addFirebaseToCloudProjectAndLog","projectInfo","addFirebaseToCloudProject","logNewFirebaseProjectInfo","info","process","platform","bold","displayName","getOrPromptProject","project","getFirebaseProject","selectProjectInteractively","pageSize","getFirebaseProjectPage","projects","nextPageToken","length","FirebaseError","selectProjectByPrompting","selectProjectFromList","promptOnce","choices","filter","p","map","orderBy","logBullet","find","getProjectId","cloudProject","resourceName","substring","lastIndexOf","promptAvailableProjectId","getAvailableCloudProjectPage","response","request","auth","origin","resourceManagerOrigin","timeout","data","parent","parentResource","pollOperation","pollerName","apiOrigin","apiVersion","operationResourceName","body","debug","exit","original","firebaseApiOrigin","getProjectPage","apiResource","apiResponse","responseKey","pageToken","pageTokenQueryString","projectPage","listFirebaseProjects","push"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api = require(\"../api\");\nconst clc = require(\"cli-color\");\nconst ora = require(\"ora\");\nconst _ = require(\"lodash\");\nconst logger = require(\"../logger\");\nconst error_1 = require(\"../error\");\nconst operation_poller_1 = require(\"../operation-poller\");\nconst prompt_1 = require(\"../prompt\");\nconst utils = require(\"../utils\");\nconst TIMEOUT_MILLIS = 30000;\nconst MAXIMUM_PROMPT_LIST = 100;\nconst PROJECT_LIST_PAGE_SIZE = 1000;\nconst CREATE_PROJECT_API_REQUEST_TIMEOUT_MILLIS = 15000;\nvar ProjectParentResourceType;\n(function (ProjectParentResourceType) {\n    ProjectParentResourceType[\"ORGANIZATION\"] = \"organization\";\n    ProjectParentResourceType[\"FOLDER\"] = \"folder\";\n})(ProjectParentResourceType = exports.ProjectParentResourceType || (exports.ProjectParentResourceType = {}));\nexports.PROJECTS_CREATE_QUESTIONS = [\n    {\n        type: \"input\",\n        name: \"projectId\",\n        default: \"\",\n        message: \"Please specify a unique project id \" +\n            `(${clc.yellow(\"warning\")}: cannot be modified afterward) [6-30 characters]:\\n`,\n    },\n    {\n        type: \"input\",\n        name: \"displayName\",\n        default: \"\",\n        message: \"What would you like to call your project? (defaults to your project ID)\",\n    },\n];\nfunction createFirebaseProjectAndLog(projectId, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const spinner = ora(\"Creating Google Cloud Platform project\").start();\n        try {\n            yield createCloudProject(projectId, options);\n            spinner.succeed();\n        }\n        catch (err) {\n            spinner.fail();\n            throw err;\n        }\n        return addFirebaseToCloudProjectAndLog(projectId);\n    });\n}\nexports.createFirebaseProjectAndLog = createFirebaseProjectAndLog;\nfunction addFirebaseToCloudProjectAndLog(projectId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let projectInfo;\n        const spinner = ora(\"Adding Firebase resources to Google Cloud Platform project\").start();\n        try {\n            projectInfo = yield addFirebaseToCloudProject(projectId);\n        }\n        catch (err) {\n            spinner.fail();\n            throw err;\n        }\n        spinner.succeed();\n        logNewFirebaseProjectInfo(projectInfo);\n        return projectInfo;\n    });\n}\nexports.addFirebaseToCloudProjectAndLog = addFirebaseToCloudProjectAndLog;\nfunction logNewFirebaseProjectInfo(projectInfo) {\n    logger.info(\"\");\n    if (process.platform === \"win32\") {\n        logger.info(\"=== Your Firebase project is ready! ===\");\n    }\n    else {\n        logger.info(\"ðŸŽ‰ðŸŽ‰ðŸŽ‰ Your Firebase project is ready! ðŸŽ‰ðŸŽ‰ðŸŽ‰\");\n    }\n    logger.info(\"\");\n    logger.info(\"Project information:\");\n    logger.info(`   - Project ID: ${clc.bold(projectInfo.projectId)}`);\n    logger.info(`   - Project Name: ${clc.bold(projectInfo.displayName)}`);\n    logger.info(\"\");\n    logger.info(\"Firebase console is available at\");\n    logger.info(`https://console.firebase.google.com/project/${clc.bold(projectInfo.projectId)}/overview`);\n}\nfunction getOrPromptProject(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options.project) {\n            return yield getFirebaseProject(options.project);\n        }\n        return selectProjectInteractively();\n    });\n}\nexports.getOrPromptProject = getOrPromptProject;\nfunction selectProjectInteractively(pageSize = MAXIMUM_PROMPT_LIST) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { projects, nextPageToken } = yield getFirebaseProjectPage(pageSize);\n        if (projects.length === 0) {\n            throw new error_1.FirebaseError(\"There are no Firebase projects associated with this account.\");\n        }\n        if (nextPageToken) {\n            return selectProjectByPrompting();\n        }\n        return selectProjectFromList(projects);\n    });\n}\nfunction selectProjectByPrompting() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const projectId = yield prompt_1.promptOnce({\n            type: \"input\",\n            message: \"Please input the project ID you would like to use:\",\n        });\n        return yield getFirebaseProject(projectId);\n    });\n}\nfunction selectProjectFromList(projects = []) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let choices = projects.filter((p) => !!p).map((p) => {\n            return {\n                name: p.projectId + (p.displayName ? ` (${p.displayName})` : \"\"),\n                value: p.projectId,\n            };\n        });\n        choices = _.orderBy(choices, [\"name\"], [\"asc\"]);\n        if (choices.length >= 25) {\n            utils.logBullet(`Don't want to scroll through all your projects? If you know your project ID, ` +\n                `you can initialize it directly using ${clc.bold(\"firebase init --project <project_id>\")}.\\n`);\n        }\n        const projectId = yield prompt_1.promptOnce({\n            type: \"list\",\n            name: \"id\",\n            message: \"Select a default Firebase project for this directory:\",\n            choices,\n        });\n        const project = projects.find((p) => p.projectId === projectId);\n        if (!project) {\n            throw new error_1.FirebaseError(\"Unexpected error. Project does not exist\");\n        }\n        return project;\n    });\n}\nfunction getProjectId(cloudProject) {\n    const resourceName = cloudProject.project;\n    return resourceName.substring(resourceName.lastIndexOf(\"/\") + 1);\n}\nfunction promptAvailableProjectId() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { projects, nextPageToken } = yield getAvailableCloudProjectPage(MAXIMUM_PROMPT_LIST);\n        if (projects.length === 0) {\n            throw new error_1.FirebaseError(\"There are no available Google Cloud projects to add Firebase services.\");\n        }\n        if (nextPageToken) {\n            return yield prompt_1.promptOnce({\n                type: \"input\",\n                message: \"Please input the ID of the Google Cloud Project you would like to add Firebase:\",\n            });\n        }\n        else {\n            let choices = projects.filter((p) => !!p).map((p) => {\n                const projectId = getProjectId(p);\n                return {\n                    name: projectId + (p.displayName ? ` (${p.displayName})` : \"\"),\n                    value: projectId,\n                };\n            });\n            choices = _.orderBy(choices, [\"name\"], [\"asc\"]);\n            return yield prompt_1.promptOnce({\n                type: \"list\",\n                name: \"id\",\n                message: \"Select the Google Cloud Platform project you would like to add Firebase:\",\n                choices,\n            });\n        }\n    });\n}\nexports.promptAvailableProjectId = promptAvailableProjectId;\nfunction createCloudProject(projectId, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const response = yield api.request(\"POST\", \"/v1/projects\", {\n                auth: true,\n                origin: api.resourceManagerOrigin,\n                timeout: CREATE_PROJECT_API_REQUEST_TIMEOUT_MILLIS,\n                data: { projectId, name: options.displayName || projectId, parent: options.parentResource },\n            });\n            const projectInfo = yield operation_poller_1.pollOperation({\n                pollerName: \"Project Creation Poller\",\n                apiOrigin: api.resourceManagerOrigin,\n                apiVersion: \"v1\",\n                operationResourceName: response.body.name,\n            });\n            return projectInfo;\n        }\n        catch (err) {\n            logger.debug(err.message);\n            throw new error_1.FirebaseError(\"Failed to create Google Cloud project. See firebase-debug.log for more info.\", { exit: 2, original: err });\n        }\n    });\n}\nexports.createCloudProject = createCloudProject;\nfunction addFirebaseToCloudProject(projectId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const response = yield api.request(\"POST\", `/v1beta1/projects/${projectId}:addFirebase`, {\n                auth: true,\n                origin: api.firebaseApiOrigin,\n                timeout: CREATE_PROJECT_API_REQUEST_TIMEOUT_MILLIS,\n            });\n            const projectInfo = yield operation_poller_1.pollOperation({\n                pollerName: \"Add Firebase Poller\",\n                apiOrigin: api.firebaseApiOrigin,\n                apiVersion: \"v1beta1\",\n                operationResourceName: response.body.name,\n            });\n            return projectInfo;\n        }\n        catch (err) {\n            logger.debug(err.message);\n            throw new error_1.FirebaseError(\"Failed to add Firebase to Google Cloud Platform project. See firebase-debug.log for more info.\", { exit: 2, original: err });\n        }\n    });\n}\nexports.addFirebaseToCloudProject = addFirebaseToCloudProject;\nfunction getProjectPage(apiResource, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let apiResponse;\n        const { responseKey, pageToken, pageSize } = options;\n        const pageTokenQueryString = pageToken ? `&pageToken=${pageToken}` : \"\";\n        apiResponse = yield api.request(\"GET\", `${apiResource}?pageSize=${pageSize}${pageTokenQueryString}`, {\n            auth: true,\n            origin: api.firebaseApiOrigin,\n            timeout: TIMEOUT_MILLIS,\n        });\n        return {\n            projects: apiResponse.body[responseKey] || [],\n            nextPageToken: apiResponse.body.nextPageToken,\n        };\n    });\n}\nfunction getFirebaseProjectPage(pageSize = PROJECT_LIST_PAGE_SIZE, pageToken) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let projectPage;\n        try {\n            projectPage = yield getProjectPage(\"/v1beta1/projects\", {\n                responseKey: \"results\",\n                pageSize,\n                pageToken,\n            });\n        }\n        catch (err) {\n            logger.debug(err.message);\n            throw new error_1.FirebaseError(\"Failed to list Firebase projects. See firebase-debug.log for more info.\", { exit: 2, original: err });\n        }\n        return projectPage;\n    });\n}\nexports.getFirebaseProjectPage = getFirebaseProjectPage;\nfunction getAvailableCloudProjectPage(pageSize = PROJECT_LIST_PAGE_SIZE, pageToken) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield getProjectPage(\"/v1beta1/availableProjects\", {\n                responseKey: \"projectInfo\",\n                pageSize,\n                pageToken,\n            });\n        }\n        catch (err) {\n            logger.debug(err.message);\n            throw new error_1.FirebaseError(\"Failed to list available Google Cloud Platform projects. See firebase-debug.log for more info.\", { exit: 2, original: err });\n        }\n    });\n}\nexports.getAvailableCloudProjectPage = getAvailableCloudProjectPage;\nfunction listFirebaseProjects(pageSize) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const projects = [];\n        let nextPageToken;\n        do {\n            const projectPage = yield getFirebaseProjectPage(pageSize, nextPageToken);\n            projects.push(...projectPage.projects);\n            nextPageToken = projectPage.nextPageToken;\n        } while (nextPageToken);\n        return projects;\n    });\n}\nexports.listFirebaseProjects = listFirebaseProjects;\nfunction getFirebaseProject(projectId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const response = yield api.request(\"GET\", `/v1beta1/projects/${projectId}`, {\n                auth: true,\n                origin: api.firebaseApiOrigin,\n                timeout: TIMEOUT_MILLIS,\n            });\n            return response.body;\n        }\n        catch (err) {\n            logger.debug(err.message);\n            throw new error_1.FirebaseError(`Failed to get Firebase project ${projectId}. ` +\n                \"Please make sure the project exists and your account has permission to access it.\", { exit: 2, original: err });\n        }\n    });\n}\nexports.getFirebaseProject = getFirebaseProject;\n"]},"metadata":{},"sourceType":"script"}
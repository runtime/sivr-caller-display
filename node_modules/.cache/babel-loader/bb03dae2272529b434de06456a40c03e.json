{"ast":null,"code":"var assign = require('./util/assign');\n\nvar fse = {};\n\nvar gfs = require('graceful-fs'); // attach fs methods to fse\n\n\nObject.keys(gfs).forEach(function (key) {\n  fse[key] = gfs[key];\n});\nvar fs = fse;\nassign(fs, require('./copy'));\nassign(fs, require('./copy-sync'));\nassign(fs, require('./mkdirs'));\nassign(fs, require('./remove'));\nassign(fs, require('./json'));\nassign(fs, require('./move'));\nassign(fs, require('./streams'));\nassign(fs, require('./empty'));\nassign(fs, require('./ensure'));\nassign(fs, require('./output'));\nmodule.exports = fs; // maintain backwards compatibility for awhile\n\nvar jsonfile = {};\nObject.defineProperty(jsonfile, 'spaces', {\n  get: function () {\n    return fs.spaces; // found in ./json\n  },\n  set: function (val) {\n    fs.spaces = val;\n  }\n});\nmodule.exports.jsonfile = jsonfile; // so users of fs-extra can modify jsonFile.spaces","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/node_modules/fs-extra/lib/index.js"],"names":["assign","require","fse","gfs","Object","keys","forEach","key","fs","module","exports","jsonfile","defineProperty","get","spaces","set","val"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AAEA,IAAIC,GAAG,GAAG,EAAV;;AACA,IAAIC,GAAG,GAAGF,OAAO,CAAC,aAAD,CAAjB,C,CAEA;;;AACAG,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,OAAjB,CAAyB,UAAUC,GAAV,EAAe;AACtCL,EAAAA,GAAG,CAACK,GAAD,CAAH,GAAWJ,GAAG,CAACI,GAAD,CAAd;AACD,CAFD;AAIA,IAAIC,EAAE,GAAGN,GAAT;AAEAF,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,QAAD,CAAZ,CAAN;AACAD,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,aAAD,CAAZ,CAAN;AACAD,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,UAAD,CAAZ,CAAN;AACAD,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,UAAD,CAAZ,CAAN;AACAD,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,QAAD,CAAZ,CAAN;AACAD,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,QAAD,CAAZ,CAAN;AACAD,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,WAAD,CAAZ,CAAN;AACAD,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,SAAD,CAAZ,CAAN;AACAD,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,UAAD,CAAZ,CAAN;AACAD,MAAM,CAACQ,EAAD,EAAKP,OAAO,CAAC,UAAD,CAAZ,CAAN;AAEAQ,MAAM,CAACC,OAAP,GAAiBF,EAAjB,C,CAEA;;AACA,IAAIG,QAAQ,GAAG,EAAf;AACAP,MAAM,CAACQ,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AACxCE,EAAAA,GAAG,EAAE,YAAY;AACf,WAAOL,EAAE,CAACM,MAAV,CADe,CACE;AAClB,GAHuC;AAIxCC,EAAAA,GAAG,EAAE,UAAUC,GAAV,EAAe;AAClBR,IAAAA,EAAE,CAACM,MAAH,GAAYE,GAAZ;AACD;AANuC,CAA1C;AASAP,MAAM,CAACC,OAAP,CAAeC,QAAf,GAA0BA,QAA1B,C,CAAmC","sourcesContent":["var assign = require('./util/assign')\n\nvar fse = {}\nvar gfs = require('graceful-fs')\n\n// attach fs methods to fse\nObject.keys(gfs).forEach(function (key) {\n  fse[key] = gfs[key]\n})\n\nvar fs = fse\n\nassign(fs, require('./copy'))\nassign(fs, require('./copy-sync'))\nassign(fs, require('./mkdirs'))\nassign(fs, require('./remove'))\nassign(fs, require('./json'))\nassign(fs, require('./move'))\nassign(fs, require('./streams'))\nassign(fs, require('./empty'))\nassign(fs, require('./ensure'))\nassign(fs, require('./output'))\n\nmodule.exports = fs\n\n// maintain backwards compatibility for awhile\nvar jsonfile = {}\nObject.defineProperty(jsonfile, 'spaces', {\n  get: function () {\n    return fs.spaces // found in ./json\n  },\n  set: function (val) {\n    fs.spaces = val\n  }\n})\n\nmodule.exports.jsonfile = jsonfile // so users of fs-extra can modify jsonFile.spaces\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _ = require(\"lodash\");\n\nconst gcp = require(\"../../gcp\");\n\nconst rulesDeploy_1 = require(\"../../rulesDeploy\");\n\nfunction default_1(context, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let rulesConfig = options.config.get(\"storage\");\n\n    if (!rulesConfig) {\n      return;\n    }\n\n    _.set(context, \"storage.rules\", rulesConfig);\n\n    const rulesDeploy = new rulesDeploy_1.RulesDeploy(options, rulesDeploy_1.RulesetServiceType.FIREBASE_STORAGE);\n\n    _.set(context, \"storage.rulesDeploy\", rulesDeploy);\n\n    if (_.isPlainObject(rulesConfig)) {\n      const defaultBucket = yield gcp.storage.getDefaultBucket(options.project);\n      rulesConfig = [_.assign(rulesConfig, {\n        bucket: defaultBucket\n      })];\n\n      _.set(context, \"storage.rules\", rulesConfig);\n    }\n\n    rulesConfig.forEach(ruleConfig => {\n      if (ruleConfig.target) {\n        options.rc.requireTarget(context.projectId, \"storage\", ruleConfig.target);\n      }\n\n      rulesDeploy.addFile(ruleConfig.rules);\n    });\n    yield rulesDeploy.compile();\n  });\n}\n\nexports.default = default_1;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/deploy/storage/prepare.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","_","require","gcp","rulesDeploy_1","default_1","context","options","rulesConfig","config","get","set","rulesDeploy","RulesDeploy","RulesetServiceType","FIREBASE_STORAGE","isPlainObject","defaultBucket","storage","getDefaultBucket","project","assign","bucket","forEach","ruleConfig","target","rc","requireTarget","projectId","addFile","rules","compile","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst gcp = require(\"../../gcp\");\nconst rulesDeploy_1 = require(\"../../rulesDeploy\");\nfunction default_1(context, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let rulesConfig = options.config.get(\"storage\");\n        if (!rulesConfig) {\n            return;\n        }\n        _.set(context, \"storage.rules\", rulesConfig);\n        const rulesDeploy = new rulesDeploy_1.RulesDeploy(options, rulesDeploy_1.RulesetServiceType.FIREBASE_STORAGE);\n        _.set(context, \"storage.rulesDeploy\", rulesDeploy);\n        if (_.isPlainObject(rulesConfig)) {\n            const defaultBucket = yield gcp.storage.getDefaultBucket(options.project);\n            rulesConfig = [_.assign(rulesConfig, { bucket: defaultBucket })];\n            _.set(context, \"storage.rules\", rulesConfig);\n        }\n        rulesConfig.forEach((ruleConfig) => {\n            if (ruleConfig.target) {\n                options.rc.requireTarget(context.projectId, \"storage\", ruleConfig.target);\n            }\n            rulesDeploy.addFile(ruleConfig.rules);\n        });\n        yield rulesDeploy.compile();\n    });\n}\nexports.default = default_1;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst command_1 = require(\"../command\");\n\nconst logger = require(\"../logger\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst getProjectNumber = require(\"../getProjectNumber\");\n\nconst firedata = require(\"../gcp/firedata\");\n\nexports.default = new command_1.Command(\"database:instances:list\").description(\"list realtime database instances\").before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.list\"]).action(options => __awaiter(this, void 0, void 0, function* () {\n  const projectNumber = yield getProjectNumber(options);\n  const instances = yield firedata.listDatabaseInstances(projectNumber);\n\n  for (const instance of instances) {\n    logger.info(instance.instance);\n  }\n\n  logger.info(`Project ${options.project} has ${instances.length} database instances`);\n  return instances;\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/database-instances-list.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","command_1","require","logger","requirePermissions_1","getProjectNumber","firedata","default","Command","description","before","requirePermissions","action","options","projectNumber","instances","listDatabaseInstances","instance","info","project","length"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,SAAO,KAAKD,CAAC,KAAKA,CAAC,GAAGE,OAAT,CAAN,EAAyB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAE,UAAI;AAAEC,QAAAA,IAAI,CAACN,SAAS,CAACO,IAAV,CAAeF,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOG,CAAP,EAAU;AAAEL,QAAAA,MAAM,CAACK,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AAAE,UAAI;AAAEC,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBK,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOG,CAAP,EAAU;AAAEL,QAAAA,MAAM,CAACK,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACL,KAAR,CAArB,GAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,QAAAA,OAAO,CAACQ,MAAM,CAACL,KAAR,CAAP;AAAwB,OAAnD,EAAqDO,IAArD,CAA0DR,SAA1D,EAAqEK,QAArE,CAAtC;AAAuH;;AAC/IH,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACa,KAAV,CAAgBhB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDS,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CAPD;;AAQAO,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEX,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMY,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,uBAAD,CAApC;;AACA,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,qBAAD,CAAhC;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,iBAAD,CAAxB;;AACAF,OAAO,CAACO,OAAR,GAAkB,IAAIN,SAAS,CAACO,OAAd,CAAsB,yBAAtB,EACbC,WADa,CACD,kCADC,EAEbC,MAFa,CAENN,oBAAoB,CAACO,kBAFf,EAEmC,CAAC,iCAAD,CAFnC,EAGbC,MAHa,CAGLC,OAAD,IAAajC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClE,QAAMkC,aAAa,GAAG,MAAMT,gBAAgB,CAACQ,OAAD,CAA5C;AACA,QAAME,SAAS,GAAG,MAAMT,QAAQ,CAACU,qBAAT,CAA+BF,aAA/B,CAAxB;;AACA,OAAK,MAAMG,QAAX,IAAuBF,SAAvB,EAAkC;AAC9BZ,IAAAA,MAAM,CAACe,IAAP,CAAYD,QAAQ,CAACA,QAArB;AACH;;AACDd,EAAAA,MAAM,CAACe,IAAP,CAAa,WAAUL,OAAO,CAACM,OAAQ,QAAOJ,SAAS,CAACK,MAAO,qBAA/D;AACA,SAAOL,SAAP;AACH,CARiC,CAHhB,CAAlB","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"../command\");\nconst logger = require(\"../logger\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst getProjectNumber = require(\"../getProjectNumber\");\nconst firedata = require(\"../gcp/firedata\");\nexports.default = new command_1.Command(\"database:instances:list\")\n    .description(\"list realtime database instances\")\n    .before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.list\"])\n    .action((options) => __awaiter(this, void 0, void 0, function* () {\n    const projectNumber = yield getProjectNumber(options);\n    const instances = yield firedata.listDatabaseInstances(projectNumber);\n    for (const instance of instances) {\n        logger.info(instance.instance);\n    }\n    logger.info(`Project ${options.project} has ${instances.length} database instances`);\n    return instances;\n}));\n"]},"metadata":{},"sourceType":"script"}
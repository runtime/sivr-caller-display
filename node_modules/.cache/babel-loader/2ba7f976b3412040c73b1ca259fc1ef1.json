{"ast":null,"code":"\"use strict\";\n\nvar repl = require(\"repl\");\n\nvar _ = require(\"lodash\");\n\nvar request = require(\"request\");\n\nvar util = require(\"util\");\n\nvar serveFunctions = require(\"./serve/functions\");\n\nvar LocalFunction = require(\"./localFunction\");\n\nvar logger = require(\"./logger\");\n\nvar shell = require(\"./emulator/functionsEmulatorShell\");\n\nmodule.exports = function (options) {\n  options.port = parseInt(options.port, 10);\n  return serveFunctions.start(options, {\n    quiet: true\n  }).then(function () {\n    return serveFunctions.connect();\n  }).then(function () {\n    const instance = serveFunctions.get();\n    const emulator = new shell.FunctionsEmulatorShell(instance);\n\n    if (emulator.emulatedFunctions && emulator.emulatedFunctions.length === 0) {\n      logger.info(\"No functions emulated.\");\n      process.exit();\n    }\n\n    var writer = function (output) {\n      if (output instanceof request.Request) {\n        return \"Sent request to function.\";\n      }\n\n      return util.inspect(output);\n    };\n\n    var prompt = \"firebase > \";\n    var replServer = repl.start({\n      prompt: prompt,\n      writer: writer,\n      useColors: true\n    });\n\n    _.forEach(emulator.triggers, function (trigger) {\n      if (_.includes(emulator.emulatedFunctions, trigger.name)) {\n        var localFunction = new LocalFunction(trigger, emulator.urls, emulator);\n        var triggerNameDotNotation = trigger.name.replace(/\\-/g, \".\");\n\n        _.set(replServer.context, triggerNameDotNotation, localFunction.call);\n      }\n    });\n\n    replServer.context.help = \"Instructions for the Functions Shell can be found at: \" + \"https://firebase.google.com/docs/functions/local-emulator\";\n  }).then(function () {\n    return new Promise(function (resolve) {\n      process.on(\"SIGINT\", function () {\n        return serveFunctions.stop().then(resolve).catch(resolve);\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/functionsShellCommandAction.js"],"names":["repl","require","_","request","util","serveFunctions","LocalFunction","logger","shell","module","exports","options","port","parseInt","start","quiet","then","connect","instance","get","emulator","FunctionsEmulatorShell","emulatedFunctions","length","info","process","exit","writer","output","Request","inspect","prompt","replServer","useColors","forEach","triggers","trigger","includes","name","localFunction","urls","triggerNameDotNotation","replace","set","context","call","help","Promise","resolve","on","stop","catch"],"mappings":"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","sourcesContent":["\"use strict\";\nvar repl = require(\"repl\");\nvar _ = require(\"lodash\");\nvar request = require(\"request\");\nvar util = require(\"util\");\nvar serveFunctions = require(\"./serve/functions\");\nvar LocalFunction = require(\"./localFunction\");\nvar logger = require(\"./logger\");\nvar shell = require(\"./emulator/functionsEmulatorShell\");\nmodule.exports = function (options) {\n    options.port = parseInt(options.port, 10);\n    return serveFunctions\n        .start(options, {\n        quiet: true,\n    })\n        .then(function () {\n        return serveFunctions.connect();\n    })\n        .then(function () {\n        const instance = serveFunctions.get();\n        const emulator = new shell.FunctionsEmulatorShell(instance);\n        if (emulator.emulatedFunctions && emulator.emulatedFunctions.length === 0) {\n            logger.info(\"No functions emulated.\");\n            process.exit();\n        }\n        var writer = function (output) {\n            if (output instanceof request.Request) {\n                return \"Sent request to function.\";\n            }\n            return util.inspect(output);\n        };\n        var prompt = \"firebase > \";\n        var replServer = repl.start({\n            prompt: prompt,\n            writer: writer,\n            useColors: true,\n        });\n        _.forEach(emulator.triggers, function (trigger) {\n            if (_.includes(emulator.emulatedFunctions, trigger.name)) {\n                var localFunction = new LocalFunction(trigger, emulator.urls, emulator);\n                var triggerNameDotNotation = trigger.name.replace(/\\-/g, \".\");\n                _.set(replServer.context, triggerNameDotNotation, localFunction.call);\n            }\n        });\n        replServer.context.help =\n            \"Instructions for the Functions Shell can be found at: \" +\n                \"https://firebase.google.com/docs/functions/local-emulator\";\n    })\n        .then(function () {\n        return new Promise(function (resolve) {\n            process.on(\"SIGINT\", function () {\n                return serveFunctions\n                    .stop()\n                    .then(resolve)\n                    .catch(resolve);\n            });\n        });\n    });\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar clc = require(\"cli-color\");\n\nvar _require = require(\"../error\"),\n    FirebaseError = _require.FirebaseError;\n\nvar superstatic = require(\"superstatic\").server;\n\nvar utils = require(\"../utils\");\n\nvar detectProjectRoot = require(\"../detectProjectRoot\");\n\nvar implicitInit = require(\"../hosting/implicitInit\");\n\nvar initMiddleware = require(\"../hosting/initMiddleware\");\n\nvar functionsProxy = require(\"../hosting/functionsProxy\").default;\n\nvar cloudRunProxy = require(\"../hosting/cloudRunProxy\").default;\n\nvar normalizedHostingConfigs = require(\"../hosting/normalizedHostingConfigs\");\n\nvar MAX_PORT_ATTEMPTS = 10;\nvar _attempts = 0;\nvar server;\n\nfunction _startServer(options, config, port, init) {\n  server = superstatic({\n    debug: true,\n    port: port,\n    host: options.host,\n    config: config,\n    cwd: detectProjectRoot(options.cwd),\n    stack: \"strict\",\n    before: {\n      files: initMiddleware(init)\n    },\n    rewriters: {\n      function: functionsProxy(options),\n      run: cloudRunProxy(options)\n    }\n  }).listen(function () {\n    var siteName = config.target || config.site;\n    var label = siteName ? \"hosting[\" + siteName + \"]\" : \"hosting\";\n\n    if (config.public && config.public !== \".\") {\n      utils.logLabeledBullet(label, \"Serving hosting files from: \" + clc.bold(config.public));\n    }\n\n    utils.logLabeledSuccess(label, \"Local server: \" + clc.underline(clc.bold(\"http://\" + options.host + \":\" + port)));\n  });\n  server.on(\"error\", function (err) {\n    if (err.code === \"EADDRINUSE\") {\n      var message = \"Port \" + options.port + \" is not available.\";\n\n      if (_attempts < MAX_PORT_ATTEMPTS) {\n        utils.logWarning(clc.yellow(\"hosting: \") + message + \" Trying another port...\");\n        _attempts++;\n\n        _startServer(options, config, port + 5, init);\n      } else {\n        utils.logWarning(message);\n        throw new FirebaseError(\"Could not find an open port for hosting development server.\", {\n          exit: 1\n        });\n      }\n    } else {\n      throw new FirebaseError(\"An error occurred while starting the hosting development server:\\n\\n\" + err.toString(), {\n        exit: 1\n      });\n    }\n  });\n}\n\nfunction _stop() {\n  if (server) {\n    server.close();\n  }\n\n  return Promise.resolve();\n}\n\nfunction _start(options) {\n  return implicitInit(options).then(function (init) {\n    var configs = normalizedHostingConfigs(options);\n\n    for (var i = 0; i < configs.length; i++) {\n      var port = i === 0 ? options.port : options.port + 4 + i;\n\n      _startServer(options, configs[i], port, init);\n    }\n  });\n}\n\nfunction _connect() {\n  return Promise.resolve();\n}\n\nmodule.exports = {\n  start: _start,\n  connect: _connect,\n  stop: _stop\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/serve/hosting.js"],"names":["clc","require","FirebaseError","superstatic","server","utils","detectProjectRoot","implicitInit","initMiddleware","functionsProxy","default","cloudRunProxy","normalizedHostingConfigs","MAX_PORT_ATTEMPTS","_attempts","_startServer","options","config","port","init","debug","host","cwd","stack","before","files","rewriters","function","run","listen","siteName","target","site","label","public","logLabeledBullet","bold","logLabeledSuccess","underline","on","err","code","message","logWarning","yellow","exit","toString","_stop","close","Promise","resolve","_start","then","configs","i","length","_connect","module","exports","start","connect","stop"],"mappings":"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","sourcesContent":["\"use strict\";\nvar clc = require(\"cli-color\");\nvar { FirebaseError } = require(\"../error\");\nvar superstatic = require(\"superstatic\").server;\nvar utils = require(\"../utils\");\nvar detectProjectRoot = require(\"../detectProjectRoot\");\nvar implicitInit = require(\"../hosting/implicitInit\");\nvar initMiddleware = require(\"../hosting/initMiddleware\");\nvar functionsProxy = require(\"../hosting/functionsProxy\").default;\nvar cloudRunProxy = require(\"../hosting/cloudRunProxy\").default;\nvar normalizedHostingConfigs = require(\"../hosting/normalizedHostingConfigs\");\nvar MAX_PORT_ATTEMPTS = 10;\nvar _attempts = 0;\nvar server;\nfunction _startServer(options, config, port, init) {\n    server = superstatic({\n        debug: true,\n        port: port,\n        host: options.host,\n        config: config,\n        cwd: detectProjectRoot(options.cwd),\n        stack: \"strict\",\n        before: {\n            files: initMiddleware(init),\n        },\n        rewriters: {\n            function: functionsProxy(options),\n            run: cloudRunProxy(options),\n        },\n    }).listen(function () {\n        var siteName = config.target || config.site;\n        var label = siteName ? \"hosting[\" + siteName + \"]\" : \"hosting\";\n        if (config.public && config.public !== \".\") {\n            utils.logLabeledBullet(label, \"Serving hosting files from: \" + clc.bold(config.public));\n        }\n        utils.logLabeledSuccess(label, \"Local server: \" + clc.underline(clc.bold(\"http://\" + options.host + \":\" + port)));\n    });\n    server.on(\"error\", function (err) {\n        if (err.code === \"EADDRINUSE\") {\n            var message = \"Port \" + options.port + \" is not available.\";\n            if (_attempts < MAX_PORT_ATTEMPTS) {\n                utils.logWarning(clc.yellow(\"hosting: \") + message + \" Trying another port...\");\n                _attempts++;\n                _startServer(options, config, port + 5, init);\n            }\n            else {\n                utils.logWarning(message);\n                throw new FirebaseError(\"Could not find an open port for hosting development server.\", {\n                    exit: 1,\n                });\n            }\n        }\n        else {\n            throw new FirebaseError(\"An error occurred while starting the hosting development server:\\n\\n\" + err.toString(), { exit: 1 });\n        }\n    });\n}\nfunction _stop() {\n    if (server) {\n        server.close();\n    }\n    return Promise.resolve();\n}\nfunction _start(options) {\n    return implicitInit(options).then(function (init) {\n        var configs = normalizedHostingConfigs(options);\n        for (var i = 0; i < configs.length; i++) {\n            var port = i === 0 ? options.port : options.port + 4 + i;\n            _startServer(options, configs[i], port, init);\n        }\n    });\n}\nfunction _connect() {\n    return Promise.resolve();\n}\nmodule.exports = {\n    start: _start,\n    connect: _connect,\n    stop: _stop,\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _ = require(\"lodash\");\n\nconst clc = require(\"cli-color\");\n\nconst command_1 = require(\"../command\");\n\nconst getProjectId = require(\"../getProjectId\");\n\nconst extensionsHelper_1 = require(\"../extensions/extensionsHelper\");\n\nconst listExtensions_1 = require(\"../extensions/listExtensions\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst logger = require(\"../logger\");\n\nconst utils = require(\"../utils\");\n\nmodule.exports = new command_1.Command(\"ext\").description(\"display information on how to use ext commands and extensions installed to your project\").action(options => __awaiter(this, void 0, void 0, function* () {\n  utils.logLabeledBullet(extensionsHelper_1.logPrefix, \"list of extensions commands:\");\n\n  const firebaseTools = require(\"../\");\n\n  const commandNames = [\"ext:install\", \"ext:info\", \"ext:list\", \"ext:configure\", \"ext:update\", \"ext:uninstall\"];\n\n  _.forEach(commandNames, commandName => {\n    const command = firebaseTools.getCommand(commandName);\n    logger.info(clc.bold(\"\\n\" + command.name()));\n    command.outputHelp();\n  });\n\n  logger.info();\n\n  try {\n    yield requirePermissions_1.requirePermissions(options, [\"firebasemods.instances.list\"]);\n    const projectId = getProjectId(options);\n    return listExtensions_1.listExtensions(projectId);\n  } catch (err) {\n    return;\n  }\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/ext.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","_","require","clc","command_1","getProjectId","extensionsHelper_1","listExtensions_1","requirePermissions_1","logger","utils","module","Command","description","action","options","logLabeledBullet","logPrefix","firebaseTools","commandNames","forEach","commandName","command","getCommand","info","bold","name","outputHelp","requirePermissions","projectId","listExtensions","err"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst clc = require(\"cli-color\");\nconst command_1 = require(\"../command\");\nconst getProjectId = require(\"../getProjectId\");\nconst extensionsHelper_1 = require(\"../extensions/extensionsHelper\");\nconst listExtensions_1 = require(\"../extensions/listExtensions\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst logger = require(\"../logger\");\nconst utils = require(\"../utils\");\nmodule.exports = new command_1.Command(\"ext\")\n    .description(\"display information on how to use ext commands and extensions installed to your project\")\n    .action((options) => __awaiter(this, void 0, void 0, function* () {\n    utils.logLabeledBullet(extensionsHelper_1.logPrefix, \"list of extensions commands:\");\n    const firebaseTools = require(\"../\");\n    const commandNames = [\n        \"ext:install\",\n        \"ext:info\",\n        \"ext:list\",\n        \"ext:configure\",\n        \"ext:update\",\n        \"ext:uninstall\",\n    ];\n    _.forEach(commandNames, (commandName) => {\n        const command = firebaseTools.getCommand(commandName);\n        logger.info(clc.bold(\"\\n\" + command.name()));\n        command.outputHelp();\n    });\n    logger.info();\n    try {\n        yield requirePermissions_1.requirePermissions(options, [\"firebasemods.instances.list\"]);\n        const projectId = getProjectId(options);\n        return listExtensions_1.listExtensions(projectId);\n    }\n    catch (err) {\n        return;\n    }\n}));\n"]},"metadata":{},"sourceType":"script"}
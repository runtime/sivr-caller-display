{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar _require = require(\"../command\"),\n    Command = _require.Command;\n\nvar getProjectId = require(\"../getProjectId\");\n\nvar logger = require(\"../logger\");\n\nvar _require2 = require(\"../requirePermissions\"),\n    requirePermissions = _require2.requirePermissions;\n\nvar functionsConfig = require(\"../functionsConfig\");\n\nfunction _materialize(projectId, path) {\n  if (_.isUndefined(path)) {\n    return functionsConfig.materializeAll(projectId);\n  }\n\n  var parts = path.split(\".\");\n  var configId = parts[0];\n\n  var configName = _.join([\"projects\", projectId, \"configs\", configId], \"/\");\n\n  return functionsConfig.materializeConfig(configName, {}).then(function (result) {\n    var query = _.chain(parts).join(\".\").value();\n\n    return query ? _.get(result, query) : result;\n  });\n}\n\nmodule.exports = new Command(\"functions:config:get [path]\").description(\"fetch environment config stored at the given path\").before(requirePermissions, [\"runtimeconfig.configs.list\", \"runtimeconfig.configs.get\", \"runtimeconfig.variables.list\", \"runtimeconfig.variables.get\"]).before(functionsConfig.ensureApi).action(function (path, options) {\n  return _materialize(getProjectId(options), path).then(function (result) {\n    logger.info(JSON.stringify(result, null, 2));\n    return result;\n  });\n});","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/functions-config-get.js"],"names":["_","require","Command","getProjectId","logger","requirePermissions","functionsConfig","_materialize","projectId","path","isUndefined","materializeAll","parts","split","configId","configName","join","materializeConfig","then","result","query","chain","value","get","module","exports","description","before","ensureApi","action","options","info","JSON","stringify"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;eACkBA,OAAO,CAAC,YAAD,C;IAAnBC,O,YAAAA,O;;AACN,IAAIC,YAAY,GAAGF,OAAO,CAAC,iBAAD,CAA1B;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,WAAD,CAApB;;gBAC6BA,OAAO,CAAC,uBAAD,C;IAA9BI,kB,aAAAA,kB;;AACN,IAAIC,eAAe,GAAGL,OAAO,CAAC,oBAAD,CAA7B;;AACA,SAASM,YAAT,CAAsBC,SAAtB,EAAiCC,IAAjC,EAAuC;AACnC,MAAIT,CAAC,CAACU,WAAF,CAAcD,IAAd,CAAJ,EAAyB;AACrB,WAAOH,eAAe,CAACK,cAAhB,CAA+BH,SAA/B,CAAP;AACH;;AACD,MAAII,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAZ;AACA,MAAIC,QAAQ,GAAGF,KAAK,CAAC,CAAD,CAApB;;AACA,MAAIG,UAAU,GAAGf,CAAC,CAACgB,IAAF,CAAO,CAAC,UAAD,EAAaR,SAAb,EAAwB,SAAxB,EAAmCM,QAAnC,CAAP,EAAqD,GAArD,CAAjB;;AACA,SAAOR,eAAe,CAACW,iBAAhB,CAAkCF,UAAlC,EAA8C,EAA9C,EAAkDG,IAAlD,CAAuD,UAAUC,MAAV,EAAkB;AAC5E,QAAIC,KAAK,GAAGpB,CAAC,CAACqB,KAAF,CAAQT,KAAR,EACPI,IADO,CACF,GADE,EAEPM,KAFO,EAAZ;;AAGA,WAAOF,KAAK,GAAGpB,CAAC,CAACuB,GAAF,CAAMJ,MAAN,EAAcC,KAAd,CAAH,GAA0BD,MAAtC;AACH,GALM,CAAP;AAMH;;AACDK,MAAM,CAACC,OAAP,GAAiB,IAAIvB,OAAJ,CAAY,6BAAZ,EACZwB,WADY,CACA,mDADA,EAEZC,MAFY,CAELtB,kBAFK,EAEe,CAC5B,4BAD4B,EAE5B,2BAF4B,EAG5B,8BAH4B,EAI5B,6BAJ4B,CAFf,EAQZsB,MARY,CAQLrB,eAAe,CAACsB,SARX,EASZC,MATY,CASL,UAAUpB,IAAV,EAAgBqB,OAAhB,EAAyB;AACjC,SAAOvB,YAAY,CAACJ,YAAY,CAAC2B,OAAD,CAAb,EAAwBrB,IAAxB,CAAZ,CAA0CS,IAA1C,CAA+C,UAAUC,MAAV,EAAkB;AACpEf,IAAAA,MAAM,CAAC2B,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAed,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAZ;AACA,WAAOA,MAAP;AACH,GAHM,CAAP;AAIH,CAdgB,CAAjB","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar { Command } = require(\"../command\");\nvar getProjectId = require(\"../getProjectId\");\nvar logger = require(\"../logger\");\nvar { requirePermissions } = require(\"../requirePermissions\");\nvar functionsConfig = require(\"../functionsConfig\");\nfunction _materialize(projectId, path) {\n    if (_.isUndefined(path)) {\n        return functionsConfig.materializeAll(projectId);\n    }\n    var parts = path.split(\".\");\n    var configId = parts[0];\n    var configName = _.join([\"projects\", projectId, \"configs\", configId], \"/\");\n    return functionsConfig.materializeConfig(configName, {}).then(function (result) {\n        var query = _.chain(parts)\n            .join(\".\")\n            .value();\n        return query ? _.get(result, query) : result;\n    });\n}\nmodule.exports = new Command(\"functions:config:get [path]\")\n    .description(\"fetch environment config stored at the given path\")\n    .before(requirePermissions, [\n    \"runtimeconfig.configs.list\",\n    \"runtimeconfig.configs.get\",\n    \"runtimeconfig.variables.list\",\n    \"runtimeconfig.variables.get\",\n])\n    .before(functionsConfig.ensureApi)\n    .action(function (path, options) {\n    return _materialize(getProjectId(options), path).then(function (result) {\n        logger.info(JSON.stringify(result, null, 2));\n        return result;\n    });\n});\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var Promise = require('bluebird');\n\nvar Stream = require('stream');\n\nvar Buffer = require('./Buffer'); // Backwards compatibility for node versions < 8\n\n\nif (!Stream.Writable || !Stream.Writable.prototype.destroy) Stream = require('readable-stream');\n\nmodule.exports = function (entry) {\n  return new Promise(function (resolve, reject) {\n    var buffer = Buffer.from(''),\n        bufferStream = Stream.Transform().on('finish', function () {\n      resolve(buffer);\n    }).on('error', reject);\n\n    bufferStream._transform = function (d, e, cb) {\n      buffer = Buffer.concat([buffer, d]);\n      cb();\n    };\n\n    entry.on('error', reject).pipe(bufferStream);\n  });\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/unzipper/lib/BufferStream.js"],"names":["Promise","require","Stream","Buffer","Writable","prototype","destroy","module","exports","entry","resolve","reject","buffer","from","bufferStream","Transform","on","_transform","d","e","cb","concat","pipe"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB,C,CAEA;;;AACA,IAAI,CAACC,MAAM,CAACE,QAAR,IAAoB,CAACF,MAAM,CAACE,QAAP,CAAgBC,SAAhB,CAA0BC,OAAnD,EACEJ,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAhB;;AAEFM,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/B,SAAO,IAAIT,OAAJ,CAAY,UAASU,OAAT,EAAiBC,MAAjB,EAAyB;AAC1C,QAAIC,MAAM,GAAGT,MAAM,CAACU,IAAP,CAAY,EAAZ,CAAb;AAAA,QACIC,YAAY,GAAGZ,MAAM,CAACa,SAAP,GACZC,EADY,CACT,QADS,EACA,YAAW;AACtBN,MAAAA,OAAO,CAACE,MAAD,CAAP;AACD,KAHY,EAIZI,EAJY,CAIT,OAJS,EAIDL,MAJC,CADnB;;AAOAG,IAAAA,YAAY,CAACG,UAAb,GAA0B,UAASC,CAAT,EAAWC,CAAX,EAAaC,EAAb,EAAiB;AACzCR,MAAAA,MAAM,GAAGT,MAAM,CAACkB,MAAP,CAAc,CAACT,MAAD,EAAQM,CAAR,CAAd,CAAT;AACAE,MAAAA,EAAE;AACH,KAHD;;AAIAX,IAAAA,KAAK,CAACO,EAAN,CAAS,OAAT,EAAiBL,MAAjB,EACGW,IADH,CACQR,YADR;AAED,GAdM,CAAP;AAeD,CAhBD","sourcesContent":["var Promise = require('bluebird');\nvar Stream = require('stream');\nvar Buffer = require('./Buffer');\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = require('readable-stream');\n\nmodule.exports = function(entry) {\n  return new Promise(function(resolve,reject) {\n    var buffer = Buffer.from(''),\n        bufferStream = Stream.Transform()\n          .on('finish',function() {\n            resolve(buffer);\n          })\n          .on('error',reject);\n        \n    bufferStream._transform = function(d,e,cb) {\n      buffer = Buffer.concat([buffer,d]);\n      cb();\n    };\n    entry.on('error',reject)\n      .pipe(bufferStream);\n  });\n};"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst crypto = require(\"crypto\");\n\nconst request = require(\"request\");\n\nconst ProgressBar = require(\"progress\");\n\nconst error_1 = require(\"../error\");\n\nconst utils = require(\"../utils\");\n\nconst javaEmulators = require(\"../serve/javaEmulators\");\n\nconst tmp = require(\"tmp\");\n\nconst fs = require(\"fs-extra\");\n\nconst path = require(\"path\");\n\nconst unzipper = require(\"unzipper\");\n\ntmp.setGracefulCleanup();\n\nmodule.exports = name => __awaiter(this, void 0, void 0, function* () {\n  const emulator = javaEmulators.getDownloadDetails(name);\n  utils.logLabeledBullet(name, `downloading ${path.basename(emulator.downloadPath)}...`);\n  fs.ensureDirSync(emulator.opts.cacheDir);\n  const tmpfile = yield downloadToTmp(emulator.opts.remoteUrl);\n  yield validateSize(tmpfile, emulator.opts.expectedSize);\n  yield validateChecksum(tmpfile, emulator.opts.expectedChecksum);\n  fs.copySync(tmpfile, emulator.downloadPath);\n\n  if (emulator.unzipDir) {\n    yield unzip(emulator.downloadPath, emulator.unzipDir);\n  }\n\n  const executablePath = emulator.binaryPath || emulator.downloadPath;\n  fs.chmodSync(executablePath, 0o755);\n  yield removeOldFiles(name, emulator);\n});\n\nfunction unzip(zipPath, unzipDir) {\n  return new Promise((resolve, reject) => {\n    fs.createReadStream(zipPath).pipe(unzipper.Extract({\n      path: unzipDir\n    })).on(\"error\", reject).on(\"finish\", resolve);\n  });\n}\n\nfunction removeOldFiles(name, emulator) {\n  const currentLocalPath = emulator.downloadPath;\n  const currentUnzipPath = emulator.unzipDir;\n  const files = fs.readdirSync(emulator.opts.cacheDir);\n\n  for (const file of files) {\n    const fullFilePath = path.join(emulator.opts.cacheDir, file);\n\n    if (file.indexOf(emulator.opts.namePrefix) < 0) {\n      continue;\n    }\n\n    if (fullFilePath !== currentLocalPath && fullFilePath !== currentUnzipPath) {\n      utils.logLabeledBullet(name, `Removing outdated emulator files: ${file}`);\n      fs.removeSync(fullFilePath);\n    }\n  }\n}\n\nfunction downloadToTmp(remoteUrl) {\n  return new Promise((resolve, reject) => {\n    const tmpfile = tmp.fileSync();\n    const req = request.get(remoteUrl);\n    const writeStream = fs.createWriteStream(tmpfile.name);\n    req.on(\"error\", err => reject(err));\n    let bar;\n    req.on(\"response\", response => {\n      if (response.statusCode !== 200) {\n        reject(new error_1.FirebaseError(`download failed, status ${response.statusCode}`, {\n          exit: 1\n        }));\n      }\n\n      const total = parseInt(response.headers[\"content-length\"] || \"0\", 10);\n      const totalMb = Math.ceil(total / 1000000);\n      bar = new ProgressBar(`Progress: :bar (:percent of ${totalMb}MB)`, {\n        total,\n        head: \">\"\n      });\n    });\n    req.on(\"data\", chunk => {\n      if (bar) {\n        bar.tick(chunk.length);\n      }\n    });\n    writeStream.on(\"finish\", () => {\n      resolve(tmpfile.name);\n    });\n    req.pipe(writeStream);\n  });\n}\n\nfunction validateSize(filepath, expectedSize) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      const stat = fs.statSync(filepath);\n      return stat.size === expectedSize ? resolve() : reject(new error_1.FirebaseError(`download failed, expected ${expectedSize} bytes but got ${stat.size}`, {\n        exit: 1\n      }));\n    });\n  });\n}\n\nfunction validateChecksum(filepath, expectedChecksum) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      const hash = crypto.createHash(\"md5\");\n      const stream = fs.createReadStream(filepath);\n      stream.on(\"data\", data => hash.update(data));\n      stream.on(\"end\", () => {\n        const checksum = hash.digest(\"hex\");\n        return checksum === expectedChecksum ? resolve() : reject(new error_1.FirebaseError(`download failed, expected checksum ${expectedChecksum} but got ${checksum}`, {\n          exit: 1\n        }));\n      });\n    });\n  });\n}","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/emulator/download.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","crypto","require","request","ProgressBar","error_1","utils","javaEmulators","tmp","fs","path","unzipper","setGracefulCleanup","module","name","emulator","getDownloadDetails","logLabeledBullet","basename","downloadPath","ensureDirSync","opts","cacheDir","tmpfile","downloadToTmp","remoteUrl","validateSize","expectedSize","validateChecksum","expectedChecksum","copySync","unzipDir","unzip","executablePath","binaryPath","chmodSync","removeOldFiles","zipPath","createReadStream","pipe","Extract","on","currentLocalPath","currentUnzipPath","files","readdirSync","file","fullFilePath","join","indexOf","namePrefix","removeSync","fileSync","req","get","writeStream","createWriteStream","err","bar","response","statusCode","FirebaseError","exit","total","parseInt","headers","totalMb","Math","ceil","head","chunk","tick","length","filepath","stat","statSync","size","hash","createHash","stream","data","update","checksum","digest"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"crypto\");\nconst request = require(\"request\");\nconst ProgressBar = require(\"progress\");\nconst error_1 = require(\"../error\");\nconst utils = require(\"../utils\");\nconst javaEmulators = require(\"../serve/javaEmulators\");\nconst tmp = require(\"tmp\");\nconst fs = require(\"fs-extra\");\nconst path = require(\"path\");\nconst unzipper = require(\"unzipper\");\ntmp.setGracefulCleanup();\nmodule.exports = (name) => __awaiter(this, void 0, void 0, function* () {\n    const emulator = javaEmulators.getDownloadDetails(name);\n    utils.logLabeledBullet(name, `downloading ${path.basename(emulator.downloadPath)}...`);\n    fs.ensureDirSync(emulator.opts.cacheDir);\n    const tmpfile = yield downloadToTmp(emulator.opts.remoteUrl);\n    yield validateSize(tmpfile, emulator.opts.expectedSize);\n    yield validateChecksum(tmpfile, emulator.opts.expectedChecksum);\n    fs.copySync(tmpfile, emulator.downloadPath);\n    if (emulator.unzipDir) {\n        yield unzip(emulator.downloadPath, emulator.unzipDir);\n    }\n    const executablePath = emulator.binaryPath || emulator.downloadPath;\n    fs.chmodSync(executablePath, 0o755);\n    yield removeOldFiles(name, emulator);\n});\nfunction unzip(zipPath, unzipDir) {\n    return new Promise((resolve, reject) => {\n        fs.createReadStream(zipPath)\n            .pipe(unzipper.Extract({ path: unzipDir }))\n            .on(\"error\", reject)\n            .on(\"finish\", resolve);\n    });\n}\nfunction removeOldFiles(name, emulator) {\n    const currentLocalPath = emulator.downloadPath;\n    const currentUnzipPath = emulator.unzipDir;\n    const files = fs.readdirSync(emulator.opts.cacheDir);\n    for (const file of files) {\n        const fullFilePath = path.join(emulator.opts.cacheDir, file);\n        if (file.indexOf(emulator.opts.namePrefix) < 0) {\n            continue;\n        }\n        if (fullFilePath !== currentLocalPath && fullFilePath !== currentUnzipPath) {\n            utils.logLabeledBullet(name, `Removing outdated emulator files: ${file}`);\n            fs.removeSync(fullFilePath);\n        }\n    }\n}\nfunction downloadToTmp(remoteUrl) {\n    return new Promise((resolve, reject) => {\n        const tmpfile = tmp.fileSync();\n        const req = request.get(remoteUrl);\n        const writeStream = fs.createWriteStream(tmpfile.name);\n        req.on(\"error\", (err) => reject(err));\n        let bar;\n        req.on(\"response\", (response) => {\n            if (response.statusCode !== 200) {\n                reject(new error_1.FirebaseError(`download failed, status ${response.statusCode}`, { exit: 1 }));\n            }\n            const total = parseInt(response.headers[\"content-length\"] || \"0\", 10);\n            const totalMb = Math.ceil(total / 1000000);\n            bar = new ProgressBar(`Progress: :bar (:percent of ${totalMb}MB)`, { total, head: \">\" });\n        });\n        req.on(\"data\", (chunk) => {\n            if (bar) {\n                bar.tick(chunk.length);\n            }\n        });\n        writeStream.on(\"finish\", () => {\n            resolve(tmpfile.name);\n        });\n        req.pipe(writeStream);\n    });\n}\nfunction validateSize(filepath, expectedSize) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            const stat = fs.statSync(filepath);\n            return stat.size === expectedSize\n                ? resolve()\n                : reject(new error_1.FirebaseError(`download failed, expected ${expectedSize} bytes but got ${stat.size}`, { exit: 1 }));\n        });\n    });\n}\nfunction validateChecksum(filepath, expectedChecksum) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            const hash = crypto.createHash(\"md5\");\n            const stream = fs.createReadStream(filepath);\n            stream.on(\"data\", (data) => hash.update(data));\n            stream.on(\"end\", () => {\n                const checksum = hash.digest(\"hex\");\n                return checksum === expectedChecksum\n                    ? resolve()\n                    : reject(new error_1.FirebaseError(`download failed, expected checksum ${expectedChecksum} but got ${checksum}`, { exit: 1 }));\n            });\n        });\n    });\n}\n"]},"metadata":{},"sourceType":"script"}
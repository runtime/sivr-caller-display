{"ast":null,"code":"var fs = require('graceful-fs');\n\nvar path = require('path');\n\nvar o777 = parseInt('0777', 8);\n\nfunction mkdirsSync(p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = {\n      mode: opts\n    };\n  }\n\n  var mode = opts.mode;\n  var xfs = opts.fs || fs;\n\n  if (mode === undefined) {\n    mode = o777 & ~process.umask();\n  }\n\n  if (!made) made = null;\n  p = path.resolve(p);\n\n  try {\n    xfs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case 'ENOENT':\n        made = mkdirsSync(path.dirname(p), opts, made);\n        mkdirsSync(p, opts, made);\n        break;\n      // In the case of any other error, just see if there's a dir\n      // there already.  If so, then hooray!  If not, then something\n      // is borked.\n\n      default:\n        var stat;\n\n        try {\n          stat = xfs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n\n  return made;\n}\n\nmodule.exports = mkdirsSync;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/node_modules/fs-extra/lib/mkdirs/mkdirs-sync.js"],"names":["fs","require","path","o777","parseInt","mkdirsSync","p","opts","made","mode","xfs","undefined","process","umask","resolve","mkdirSync","err0","code","dirname","stat","statSync","err1","isDirectory","module","exports"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIE,IAAI,GAAGC,QAAQ,CAAC,MAAD,EAAS,CAAT,CAAnB;;AAEA,SAASC,UAAT,CAAqBC,CAArB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AAClC,MAAI,CAACD,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;AACrCA,IAAAA,IAAI,GAAG;AAAEE,MAAAA,IAAI,EAAEF;AAAR,KAAP;AACD;;AAED,MAAIE,IAAI,GAAGF,IAAI,CAACE,IAAhB;AACA,MAAIC,GAAG,GAAGH,IAAI,CAACP,EAAL,IAAWA,EAArB;;AAEA,MAAIS,IAAI,KAAKE,SAAb,EAAwB;AACtBF,IAAAA,IAAI,GAAGN,IAAI,GAAI,CAACS,OAAO,CAACC,KAAR,EAAhB;AACD;;AACD,MAAI,CAACL,IAAL,EAAWA,IAAI,GAAG,IAAP;AAEXF,EAAAA,CAAC,GAAGJ,IAAI,CAACY,OAAL,CAAaR,CAAb,CAAJ;;AAEA,MAAI;AACFI,IAAAA,GAAG,CAACK,SAAJ,CAAcT,CAAd,EAAiBG,IAAjB;AACAD,IAAAA,IAAI,GAAGA,IAAI,IAAIF,CAAf;AACD,GAHD,CAGE,OAAOU,IAAP,EAAa;AACb,YAAQA,IAAI,CAACC,IAAb;AACE,WAAK,QAAL;AACET,QAAAA,IAAI,GAAGH,UAAU,CAACH,IAAI,CAACgB,OAAL,CAAaZ,CAAb,CAAD,EAAkBC,IAAlB,EAAwBC,IAAxB,CAAjB;AACAH,QAAAA,UAAU,CAACC,CAAD,EAAIC,IAAJ,EAAUC,IAAV,CAAV;AACA;AAEF;AACA;AACA;;AACA;AACE,YAAIW,IAAJ;;AACA,YAAI;AACFA,UAAAA,IAAI,GAAGT,GAAG,CAACU,QAAJ,CAAad,CAAb,CAAP;AACD,SAFD,CAEE,OAAOe,IAAP,EAAa;AACb,gBAAML,IAAN;AACD;;AACD,YAAI,CAACG,IAAI,CAACG,WAAL,EAAL,EAAyB,MAAMN,IAAN;AACzB;AAjBJ;AAmBD;;AAED,SAAOR,IAAP;AACD;;AAEDe,MAAM,CAACC,OAAP,GAAiBnB,UAAjB","sourcesContent":["var fs = require('graceful-fs')\nvar path = require('path')\n\nvar o777 = parseInt('0777', 8)\n\nfunction mkdirsSync (p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = { mode: opts }\n  }\n\n  var mode = opts.mode\n  var xfs = opts.fs || fs\n\n  if (mode === undefined) {\n    mode = o777 & (~process.umask())\n  }\n  if (!made) made = null\n\n  p = path.resolve(p)\n\n  try {\n    xfs.mkdirSync(p, mode)\n    made = made || p\n  } catch (err0) {\n    switch (err0.code) {\n      case 'ENOENT' :\n        made = mkdirsSync(path.dirname(p), opts, made)\n        mkdirsSync(p, opts, made)\n        break\n\n      // In the case of any other error, just see if there's a dir\n      // there already.  If so, then hooray!  If not, then something\n      // is borked.\n      default:\n        var stat\n        try {\n          stat = xfs.statSync(p)\n        } catch (err1) {\n          throw err0\n        }\n        if (!stat.isDirectory()) throw err0\n        break\n    }\n  }\n\n  return made\n}\n\nmodule.exports = mkdirsSync\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clc = require(\"cli-color\");\n\nconst ora = require(\"ora\");\n\nconst command_1 = require(\"../command\");\n\nconst getProjectId = require(\"../getProjectId\");\n\nconst error_1 = require(\"../error\");\n\nconst apps_1 = require(\"../management/apps\");\n\nconst prompt_1 = require(\"../prompt\");\n\nconst requireAuth = require(\"../requireAuth\");\n\nconst logger = require(\"../logger\");\n\nconst DISPLAY_NAME_QUESTION = {\n  type: \"input\",\n  name: \"displayName\",\n  default: \"\",\n  message: \"What would you like to call your app?\"\n};\n\nfunction logPostAppCreationInformation(appMetadata, appPlatform) {\n  logger.info(\"\");\n  logger.info(`ðŸŽ‰ðŸŽ‰ðŸŽ‰ Your Firebase ${appPlatform} App is ready! ðŸŽ‰ðŸŽ‰ðŸŽ‰`);\n  logger.info(\"\");\n  logger.info(\"App information:\");\n  logger.info(`  - App ID: ${appMetadata.appId}`);\n\n  if (appMetadata.displayName) {\n    logger.info(`  - Display name: ${appMetadata.displayName}`);\n  }\n\n  if (appPlatform === apps_1.AppPlatform.IOS) {\n    const iosAppMetadata = appMetadata;\n    logger.info(`  - Bundle ID: ${iosAppMetadata.bundleId}`);\n\n    if (iosAppMetadata.appStoreId) {\n      logger.info(`  - App Store ID: ${iosAppMetadata.appStoreId}`);\n    }\n  } else if (appPlatform === apps_1.AppPlatform.ANDROID) {\n    logger.info(`  - Package name: ${appMetadata.packageName}`);\n  }\n\n  logger.info(\"\");\n  logger.info(\"You can run this command to print out your new app's Google Services config:\");\n  logger.info(`  firebase apps:sdkconfig ${appPlatform} ${appMetadata.appId}`);\n}\n\nfunction initiateIosAppCreation(options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!options.nonInteractive) {\n      yield prompt_1.prompt(options, [DISPLAY_NAME_QUESTION, {\n        type: \"input\",\n        default: \"\",\n        name: \"bundleId\",\n        message: \"Please specify your iOS app bundle ID:\"\n      }, {\n        type: \"input\",\n        default: \"\",\n        name: \"appStoreId\",\n        message: \"Please specify your iOS app App Store ID:\"\n      }]);\n    }\n\n    if (!options.bundleId) {\n      throw new error_1.FirebaseError(\"Bundle ID for iOS app cannot be empty\");\n    }\n\n    const spinner = ora(\"Creating your iOS app\").start();\n\n    try {\n      const appData = yield apps_1.createIosApp(options.project, {\n        displayName: options.displayName,\n        bundleId: options.bundleId,\n        appStoreId: options.appStoreId\n      });\n      spinner.succeed();\n      return appData;\n    } catch (err) {\n      spinner.fail();\n      throw err;\n    }\n  });\n}\n\nfunction initiateAndroidAppCreation(options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!options.nonInteractive) {\n      yield prompt_1.prompt(options, [DISPLAY_NAME_QUESTION, {\n        type: \"input\",\n        default: \"\",\n        name: \"packageName\",\n        message: \"Please specify your Android app package name:\"\n      }]);\n    }\n\n    if (!options.packageName) {\n      throw new error_1.FirebaseError(\"Package name for Android app cannot be empty\");\n    }\n\n    const spinner = ora(\"Creating your Android app\").start();\n\n    try {\n      const appData = yield apps_1.createAndroidApp(options.project, {\n        displayName: options.displayName,\n        packageName: options.packageName\n      });\n      spinner.succeed();\n      return appData;\n    } catch (err) {\n      spinner.fail();\n      throw err;\n    }\n  });\n}\n\nfunction initiateWebAppCreation(options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!options.nonInteractive) {\n      yield prompt_1.prompt(options, [DISPLAY_NAME_QUESTION]);\n    }\n\n    if (!options.displayName) {\n      throw new error_1.FirebaseError(\"Display name for Web app cannot be empty\");\n    }\n\n    const spinner = ora(\"Creating your Web app\").start();\n\n    try {\n      const appData = yield apps_1.createWebApp(options.project, {\n        displayName: options.displayName\n      });\n      spinner.succeed();\n      return appData;\n    } catch (err) {\n      spinner.fail();\n      throw err;\n    }\n  });\n}\n\nmodule.exports = new command_1.Command(\"apps:create [platform] [displayName]\").description(\"create a new Firebase app. [platform] can be IOS, ANDROID or WEB (case insensitive).\").option(\"-a, --package-name <packageName>\", \"required package name for the Android app\").option(\"-b, --bundle-id <bundleId>\", \"required bundle id for the iOS app\").option(\"-s, --app-store-id <appStoreId>\", \"(optional) app store id for the iOS app\").before(requireAuth).action((platform = \"\", displayName, options) => __awaiter(this, void 0, void 0, function* () {\n  const projectId = getProjectId(options);\n\n  if (!options.nonInteractive && !platform) {\n    platform = yield prompt_1.promptOnce({\n      type: \"list\",\n      message: \"Please choose the platform of the app:\",\n      choices: [{\n        name: \"iOS\",\n        value: apps_1.AppPlatform.IOS\n      }, {\n        name: \"Android\",\n        value: apps_1.AppPlatform.ANDROID\n      }, {\n        name: \"Web\",\n        value: apps_1.AppPlatform.WEB\n      }]\n    });\n  }\n\n  const appPlatform = apps_1.getAppPlatform(platform);\n\n  if (appPlatform === apps_1.AppPlatform.ANY) {\n    throw new error_1.FirebaseError(\"App platform must be provided\");\n  }\n\n  logger.info(`Create your ${appPlatform} app in project ${clc.bold(projectId)}:`);\n  options.displayName = displayName;\n  let appData;\n\n  switch (appPlatform) {\n    case apps_1.AppPlatform.IOS:\n      appData = yield initiateIosAppCreation(options);\n      break;\n\n    case apps_1.AppPlatform.ANDROID:\n      appData = yield initiateAndroidAppCreation(options);\n      break;\n\n    case apps_1.AppPlatform.WEB:\n      appData = yield initiateWebAppCreation(options);\n      break;\n\n    default:\n      throw new error_1.FirebaseError(\"Unexpected error. This should not happen\");\n  }\n\n  logPostAppCreationInformation(appData, appPlatform);\n  return appData;\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/apps-create.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","clc","require","ora","command_1","getProjectId","error_1","apps_1","prompt_1","requireAuth","logger","DISPLAY_NAME_QUESTION","type","name","default","message","logPostAppCreationInformation","appMetadata","appPlatform","info","appId","displayName","AppPlatform","IOS","iosAppMetadata","bundleId","appStoreId","ANDROID","packageName","initiateIosAppCreation","options","nonInteractive","prompt","FirebaseError","spinner","start","appData","createIosApp","project","succeed","err","fail","initiateAndroidAppCreation","createAndroidApp","initiateWebAppCreation","createWebApp","module","Command","description","option","before","action","platform","projectId","promptOnce","choices","WEB","getAppPlatform","ANY","bold"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clc = require(\"cli-color\");\nconst ora = require(\"ora\");\nconst command_1 = require(\"../command\");\nconst getProjectId = require(\"../getProjectId\");\nconst error_1 = require(\"../error\");\nconst apps_1 = require(\"../management/apps\");\nconst prompt_1 = require(\"../prompt\");\nconst requireAuth = require(\"../requireAuth\");\nconst logger = require(\"../logger\");\nconst DISPLAY_NAME_QUESTION = {\n    type: \"input\",\n    name: \"displayName\",\n    default: \"\",\n    message: \"What would you like to call your app?\",\n};\nfunction logPostAppCreationInformation(appMetadata, appPlatform) {\n    logger.info(\"\");\n    logger.info(`ðŸŽ‰ðŸŽ‰ðŸŽ‰ Your Firebase ${appPlatform} App is ready! ðŸŽ‰ðŸŽ‰ðŸŽ‰`);\n    logger.info(\"\");\n    logger.info(\"App information:\");\n    logger.info(`  - App ID: ${appMetadata.appId}`);\n    if (appMetadata.displayName) {\n        logger.info(`  - Display name: ${appMetadata.displayName}`);\n    }\n    if (appPlatform === apps_1.AppPlatform.IOS) {\n        const iosAppMetadata = appMetadata;\n        logger.info(`  - Bundle ID: ${iosAppMetadata.bundleId}`);\n        if (iosAppMetadata.appStoreId) {\n            logger.info(`  - App Store ID: ${iosAppMetadata.appStoreId}`);\n        }\n    }\n    else if (appPlatform === apps_1.AppPlatform.ANDROID) {\n        logger.info(`  - Package name: ${appMetadata.packageName}`);\n    }\n    logger.info(\"\");\n    logger.info(\"You can run this command to print out your new app's Google Services config:\");\n    logger.info(`  firebase apps:sdkconfig ${appPlatform} ${appMetadata.appId}`);\n}\nfunction initiateIosAppCreation(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!options.nonInteractive) {\n            yield prompt_1.prompt(options, [\n                DISPLAY_NAME_QUESTION,\n                {\n                    type: \"input\",\n                    default: \"\",\n                    name: \"bundleId\",\n                    message: \"Please specify your iOS app bundle ID:\",\n                },\n                {\n                    type: \"input\",\n                    default: \"\",\n                    name: \"appStoreId\",\n                    message: \"Please specify your iOS app App Store ID:\",\n                },\n            ]);\n        }\n        if (!options.bundleId) {\n            throw new error_1.FirebaseError(\"Bundle ID for iOS app cannot be empty\");\n        }\n        const spinner = ora(\"Creating your iOS app\").start();\n        try {\n            const appData = yield apps_1.createIosApp(options.project, {\n                displayName: options.displayName,\n                bundleId: options.bundleId,\n                appStoreId: options.appStoreId,\n            });\n            spinner.succeed();\n            return appData;\n        }\n        catch (err) {\n            spinner.fail();\n            throw err;\n        }\n    });\n}\nfunction initiateAndroidAppCreation(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!options.nonInteractive) {\n            yield prompt_1.prompt(options, [\n                DISPLAY_NAME_QUESTION,\n                {\n                    type: \"input\",\n                    default: \"\",\n                    name: \"packageName\",\n                    message: \"Please specify your Android app package name:\",\n                },\n            ]);\n        }\n        if (!options.packageName) {\n            throw new error_1.FirebaseError(\"Package name for Android app cannot be empty\");\n        }\n        const spinner = ora(\"Creating your Android app\").start();\n        try {\n            const appData = yield apps_1.createAndroidApp(options.project, {\n                displayName: options.displayName,\n                packageName: options.packageName,\n            });\n            spinner.succeed();\n            return appData;\n        }\n        catch (err) {\n            spinner.fail();\n            throw err;\n        }\n    });\n}\nfunction initiateWebAppCreation(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!options.nonInteractive) {\n            yield prompt_1.prompt(options, [DISPLAY_NAME_QUESTION]);\n        }\n        if (!options.displayName) {\n            throw new error_1.FirebaseError(\"Display name for Web app cannot be empty\");\n        }\n        const spinner = ora(\"Creating your Web app\").start();\n        try {\n            const appData = yield apps_1.createWebApp(options.project, { displayName: options.displayName });\n            spinner.succeed();\n            return appData;\n        }\n        catch (err) {\n            spinner.fail();\n            throw err;\n        }\n    });\n}\nmodule.exports = new command_1.Command(\"apps:create [platform] [displayName]\")\n    .description(\"create a new Firebase app. [platform] can be IOS, ANDROID or WEB (case insensitive).\")\n    .option(\"-a, --package-name <packageName>\", \"required package name for the Android app\")\n    .option(\"-b, --bundle-id <bundleId>\", \"required bundle id for the iOS app\")\n    .option(\"-s, --app-store-id <appStoreId>\", \"(optional) app store id for the iOS app\")\n    .before(requireAuth)\n    .action((platform = \"\", displayName, options) => __awaiter(this, void 0, void 0, function* () {\n    const projectId = getProjectId(options);\n    if (!options.nonInteractive && !platform) {\n        platform = yield prompt_1.promptOnce({\n            type: \"list\",\n            message: \"Please choose the platform of the app:\",\n            choices: [\n                { name: \"iOS\", value: apps_1.AppPlatform.IOS },\n                { name: \"Android\", value: apps_1.AppPlatform.ANDROID },\n                { name: \"Web\", value: apps_1.AppPlatform.WEB },\n            ],\n        });\n    }\n    const appPlatform = apps_1.getAppPlatform(platform);\n    if (appPlatform === apps_1.AppPlatform.ANY) {\n        throw new error_1.FirebaseError(\"App platform must be provided\");\n    }\n    logger.info(`Create your ${appPlatform} app in project ${clc.bold(projectId)}:`);\n    options.displayName = displayName;\n    let appData;\n    switch (appPlatform) {\n        case apps_1.AppPlatform.IOS:\n            appData = yield initiateIosAppCreation(options);\n            break;\n        case apps_1.AppPlatform.ANDROID:\n            appData = yield initiateAndroidAppCreation(options);\n            break;\n        case apps_1.AppPlatform.WEB:\n            appData = yield initiateWebAppCreation(options);\n            break;\n        default:\n            throw new error_1.FirebaseError(\"Unexpected error. This should not happen\");\n    }\n    logPostAppCreationInformation(appData, appPlatform);\n    return appData;\n}));\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar fs = require(\"fs\");\n\nvar _ = require(\"lodash\");\n\nvar path = require(\"path\");\n\nvar minimatch = require(\"minimatch\");\n\nfunction resolver(resolve, reject) {\n  return function (err, result) {\n    if (err) {\n      return reject(err);\n    }\n\n    resolve(result);\n  };\n}\n\nfunction readdir(location) {\n  return new Promise(function (resolve, reject) {\n    var done = resolver(resolve, reject);\n\n    if (fs.readdir.length === 2) {\n      fs.readdir(location, done);\n    } else {\n      fs.readdir(location, {\n        encoding: \"utf8\"\n      }, done);\n    }\n  });\n}\n\nfunction stat(location) {\n  return new Promise(function (resolve, reject) {\n    fs.stat(location, resolver(resolve, reject));\n  });\n}\n\nfunction unlink(location) {\n  return new Promise(function (resolve, reject) {\n    fs.unlink(location, resolver(resolve, reject));\n  });\n}\n\nfunction rmdir(location) {\n  return new Promise(function (resolve, reject) {\n    return fs.rmdir(location, resolver(resolve, reject));\n  });\n}\n\nfunction _readdirRecursive(options) {\n  return readdir(options.path).then(function (dirContents) {\n    var work = _.chain(dirContents).map(function (shortName) {\n      return path.join(options.path, shortName);\n    }).reject(options.filter).map(function (file) {\n      return stat(file).then(function (fstat) {\n        if (fstat.isFile()) {\n          return {\n            name: file,\n            mode: fstat.mode\n          };\n        }\n\n        if (!fstat.isDirectory()) {\n          return null;\n        }\n\n        return _readdirRecursive({\n          path: file,\n          filter: options.filter\n        });\n      });\n    }).value();\n\n    return Promise.all(work).then(_.flatten);\n  }).then(function (results) {\n    return _.reject(results, _.isNull);\n  });\n}\n\nfunction readdirRecursive(options) {\n  var mmopts = {\n    matchBase: true,\n    dot: true\n  };\n\n  var rules = _.map(options.ignore || [], function (glob) {\n    return minimatch.filter(glob, mmopts);\n  });\n\n  var filter = function (test) {\n    return _.some(rules, function (rule) {\n      return rule(test);\n    });\n  };\n\n  return _readdirRecursive({\n    path: options.path,\n    filter: filter\n  });\n}\n\nfunction rmdirRecursive(location) {\n  return readdir(location).then(function (dirContents) {\n    var cleanThisDir = Promise.all(_.map(dirContents, function (file) {\n      file = path.join(location, file);\n      return stat(file).then(function (fstat) {\n        if (fstat.isDirectory()) {\n          return rmdirRecursive(file);\n        }\n\n        return unlink(file);\n      });\n    }));\n    return cleanThisDir.then(function () {\n      return rmdir(location);\n    });\n  });\n}\n\nmodule.exports = {\n  readdir: readdir,\n  rmdir: rmdir,\n  stat: stat,\n  unlink: unlink,\n  readdirRecursive: readdirRecursive,\n  rmdirRecursive: rmdirRecursive\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/fsAsync.js"],"names":["fs","require","_","path","minimatch","resolver","resolve","reject","err","result","readdir","location","Promise","done","length","encoding","stat","unlink","rmdir","_readdirRecursive","options","then","dirContents","work","chain","map","shortName","join","filter","file","fstat","isFile","name","mode","isDirectory","value","all","flatten","results","isNull","readdirRecursive","mmopts","matchBase","dot","rules","ignore","glob","test","some","rule","rmdirRecursive","cleanThisDir","module","exports"],"mappings":"AAAA;;AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,WAAD,CAAvB;;AACA,SAASI,QAAT,CAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAC/B,SAAO,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAC1B,QAAID,GAAJ,EAAS;AACL,aAAOD,MAAM,CAACC,GAAD,CAAb;AACH;;AACDF,IAAAA,OAAO,CAACG,MAAD,CAAP;AACH,GALD;AAMH;;AACD,SAASC,OAAT,CAAiBC,QAAjB,EAA2B;AACvB,SAAO,IAAIC,OAAJ,CAAY,UAAUN,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,QAAIM,IAAI,GAAGR,QAAQ,CAACC,OAAD,EAAUC,MAAV,CAAnB;;AACA,QAAIP,EAAE,CAACU,OAAH,CAAWI,MAAX,KAAsB,CAA1B,EAA6B;AACzBd,MAAAA,EAAE,CAACU,OAAH,CAAWC,QAAX,EAAqBE,IAArB;AACH,KAFD,MAGK;AACDb,MAAAA,EAAE,CAACU,OAAH,CAAWC,QAAX,EAAqB;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OAArB,EAA2CF,IAA3C;AACH;AACJ,GARM,CAAP;AASH;;AACD,SAASG,IAAT,CAAcL,QAAd,EAAwB;AACpB,SAAO,IAAIC,OAAJ,CAAY,UAAUN,OAAV,EAAmBC,MAAnB,EAA2B;AAC1CP,IAAAA,EAAE,CAACgB,IAAH,CAAQL,QAAR,EAAkBN,QAAQ,CAACC,OAAD,EAAUC,MAAV,CAA1B;AACH,GAFM,CAAP;AAGH;;AACD,SAASU,MAAT,CAAgBN,QAAhB,EAA0B;AACtB,SAAO,IAAIC,OAAJ,CAAY,UAAUN,OAAV,EAAmBC,MAAnB,EAA2B;AAC1CP,IAAAA,EAAE,CAACiB,MAAH,CAAUN,QAAV,EAAoBN,QAAQ,CAACC,OAAD,EAAUC,MAAV,CAA5B;AACH,GAFM,CAAP;AAGH;;AACD,SAASW,KAAT,CAAeP,QAAf,EAAyB;AACrB,SAAO,IAAIC,OAAJ,CAAY,UAAUN,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,WAAOP,EAAE,CAACkB,KAAH,CAASP,QAAT,EAAmBN,QAAQ,CAACC,OAAD,EAAUC,MAAV,CAA3B,CAAP;AACH,GAFM,CAAP;AAGH;;AACD,SAASY,iBAAT,CAA2BC,OAA3B,EAAoC;AAChC,SAAOV,OAAO,CAACU,OAAO,CAACjB,IAAT,CAAP,CACFkB,IADE,CACG,UAAUC,WAAV,EAAuB;AAC7B,QAAIC,IAAI,GAAGrB,CAAC,CAACsB,KAAF,CAAQF,WAAR,EACNG,GADM,CACF,UAAUC,SAAV,EAAqB;AAC1B,aAAOvB,IAAI,CAACwB,IAAL,CAAUP,OAAO,CAACjB,IAAlB,EAAwBuB,SAAxB,CAAP;AACH,KAHU,EAINnB,MAJM,CAICa,OAAO,CAACQ,MAJT,EAKNH,GALM,CAKF,UAAUI,IAAV,EAAgB;AACrB,aAAOb,IAAI,CAACa,IAAD,CAAJ,CAAWR,IAAX,CAAgB,UAAUS,KAAV,EAAiB;AACpC,YAAIA,KAAK,CAACC,MAAN,EAAJ,EAAoB;AAChB,iBAAO;AACHC,YAAAA,IAAI,EAAEH,IADH;AAEHI,YAAAA,IAAI,EAAEH,KAAK,CAACG;AAFT,WAAP;AAIH;;AACD,YAAI,CAACH,KAAK,CAACI,WAAN,EAAL,EAA0B;AACtB,iBAAO,IAAP;AACH;;AACD,eAAOf,iBAAiB,CAAC;AACrBhB,UAAAA,IAAI,EAAE0B,IADe;AAErBD,UAAAA,MAAM,EAAER,OAAO,CAACQ;AAFK,SAAD,CAAxB;AAIH,OAdM,CAAP;AAeH,KArBU,EAsBNO,KAtBM,EAAX;;AAuBA,WAAOvB,OAAO,CAACwB,GAAR,CAAYb,IAAZ,EAAkBF,IAAlB,CAAuBnB,CAAC,CAACmC,OAAzB,CAAP;AACH,GA1BM,EA2BFhB,IA3BE,CA2BG,UAAUiB,OAAV,EAAmB;AACzB,WAAOpC,CAAC,CAACK,MAAF,CAAS+B,OAAT,EAAkBpC,CAAC,CAACqC,MAApB,CAAP;AACH,GA7BM,CAAP;AA8BH;;AACD,SAASC,gBAAT,CAA0BpB,OAA1B,EAAmC;AAC/B,MAAIqB,MAAM,GAAG;AAAEC,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,GAAG,EAAE;AAAxB,GAAb;;AACA,MAAIC,KAAK,GAAG1C,CAAC,CAACuB,GAAF,CAAML,OAAO,CAACyB,MAAR,IAAkB,EAAxB,EAA4B,UAAUC,IAAV,EAAgB;AACpD,WAAO1C,SAAS,CAACwB,MAAV,CAAiBkB,IAAjB,EAAuBL,MAAvB,CAAP;AACH,GAFW,CAAZ;;AAGA,MAAIb,MAAM,GAAG,UAAUmB,IAAV,EAAgB;AACzB,WAAO7C,CAAC,CAAC8C,IAAF,CAAOJ,KAAP,EAAc,UAAUK,IAAV,EAAgB;AACjC,aAAOA,IAAI,CAACF,IAAD,CAAX;AACH,KAFM,CAAP;AAGH,GAJD;;AAKA,SAAO5B,iBAAiB,CAAC;AACrBhB,IAAAA,IAAI,EAAEiB,OAAO,CAACjB,IADO;AAErByB,IAAAA,MAAM,EAAEA;AAFa,GAAD,CAAxB;AAIH;;AACD,SAASsB,cAAT,CAAwBvC,QAAxB,EAAkC;AAC9B,SAAOD,OAAO,CAACC,QAAD,CAAP,CAAkBU,IAAlB,CAAuB,UAAUC,WAAV,EAAuB;AACjD,QAAI6B,YAAY,GAAGvC,OAAO,CAACwB,GAAR,CAAYlC,CAAC,CAACuB,GAAF,CAAMH,WAAN,EAAmB,UAAUO,IAAV,EAAgB;AAC9DA,MAAAA,IAAI,GAAG1B,IAAI,CAACwB,IAAL,CAAUhB,QAAV,EAAoBkB,IAApB,CAAP;AACA,aAAOb,IAAI,CAACa,IAAD,CAAJ,CAAWR,IAAX,CAAgB,UAAUS,KAAV,EAAiB;AACpC,YAAIA,KAAK,CAACI,WAAN,EAAJ,EAAyB;AACrB,iBAAOgB,cAAc,CAACrB,IAAD,CAArB;AACH;;AACD,eAAOZ,MAAM,CAACY,IAAD,CAAb;AACH,OALM,CAAP;AAMH,KAR8B,CAAZ,CAAnB;AASA,WAAOsB,YAAY,CAAC9B,IAAb,CAAkB,YAAY;AACjC,aAAOH,KAAK,CAACP,QAAD,CAAZ;AACH,KAFM,CAAP;AAGH,GAbM,CAAP;AAcH;;AACDyC,MAAM,CAACC,OAAP,GAAiB;AACb3C,EAAAA,OAAO,EAAEA,OADI;AAEbQ,EAAAA,KAAK,EAAEA,KAFM;AAGbF,EAAAA,IAAI,EAAEA,IAHO;AAIbC,EAAAA,MAAM,EAAEA,MAJK;AAKbuB,EAAAA,gBAAgB,EAAEA,gBALL;AAMbU,EAAAA,cAAc,EAAEA;AANH,CAAjB","sourcesContent":["\"use strict\";\nvar fs = require(\"fs\");\nvar _ = require(\"lodash\");\nvar path = require(\"path\");\nvar minimatch = require(\"minimatch\");\nfunction resolver(resolve, reject) {\n    return function (err, result) {\n        if (err) {\n            return reject(err);\n        }\n        resolve(result);\n    };\n}\nfunction readdir(location) {\n    return new Promise(function (resolve, reject) {\n        var done = resolver(resolve, reject);\n        if (fs.readdir.length === 2) {\n            fs.readdir(location, done);\n        }\n        else {\n            fs.readdir(location, { encoding: \"utf8\" }, done);\n        }\n    });\n}\nfunction stat(location) {\n    return new Promise(function (resolve, reject) {\n        fs.stat(location, resolver(resolve, reject));\n    });\n}\nfunction unlink(location) {\n    return new Promise(function (resolve, reject) {\n        fs.unlink(location, resolver(resolve, reject));\n    });\n}\nfunction rmdir(location) {\n    return new Promise(function (resolve, reject) {\n        return fs.rmdir(location, resolver(resolve, reject));\n    });\n}\nfunction _readdirRecursive(options) {\n    return readdir(options.path)\n        .then(function (dirContents) {\n        var work = _.chain(dirContents)\n            .map(function (shortName) {\n            return path.join(options.path, shortName);\n        })\n            .reject(options.filter)\n            .map(function (file) {\n            return stat(file).then(function (fstat) {\n                if (fstat.isFile()) {\n                    return {\n                        name: file,\n                        mode: fstat.mode,\n                    };\n                }\n                if (!fstat.isDirectory()) {\n                    return null;\n                }\n                return _readdirRecursive({\n                    path: file,\n                    filter: options.filter,\n                });\n            });\n        })\n            .value();\n        return Promise.all(work).then(_.flatten);\n    })\n        .then(function (results) {\n        return _.reject(results, _.isNull);\n    });\n}\nfunction readdirRecursive(options) {\n    var mmopts = { matchBase: true, dot: true };\n    var rules = _.map(options.ignore || [], function (glob) {\n        return minimatch.filter(glob, mmopts);\n    });\n    var filter = function (test) {\n        return _.some(rules, function (rule) {\n            return rule(test);\n        });\n    };\n    return _readdirRecursive({\n        path: options.path,\n        filter: filter,\n    });\n}\nfunction rmdirRecursive(location) {\n    return readdir(location).then(function (dirContents) {\n        var cleanThisDir = Promise.all(_.map(dirContents, function (file) {\n            file = path.join(location, file);\n            return stat(file).then(function (fstat) {\n                if (fstat.isDirectory()) {\n                    return rmdirRecursive(file);\n                }\n                return unlink(file);\n            });\n        }));\n        return cleanThisDir.then(function () {\n            return rmdir(location);\n        });\n    });\n}\nmodule.exports = {\n    readdir: readdir,\n    rmdir: rmdir,\n    stat: stat,\n    unlink: unlink,\n    readdirRecursive: readdirRecursive,\n    rmdirRecursive: rmdirRecursive,\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst error_1 = require(\"../error\");\n\nconst INDEX_NAME_REGEX = /projects\\/([^\\/]+?)\\/databases\\/\\(default\\)\\/collectionGroups\\/([^\\/]+?)\\/indexes\\/([^\\/]*)/;\nconst FIELD_NAME_REGEX = /projects\\/([^\\/]+?)\\/databases\\/\\(default\\)\\/collectionGroups\\/([^\\/]+?)\\/fields\\/([^\\/]*)/;\n\nfunction parseIndexName(name) {\n  if (!name) {\n    throw new error_1.FirebaseError(`Cannot parse undefined index name.`);\n  }\n\n  const m = name.match(INDEX_NAME_REGEX);\n\n  if (!m || m.length < 4) {\n    throw new error_1.FirebaseError(`Error parsing index name: ${name}`);\n  }\n\n  return {\n    projectId: m[1],\n    collectionGroupId: m[2],\n    indexId: m[3]\n  };\n}\n\nexports.parseIndexName = parseIndexName;\n\nfunction parseFieldName(name) {\n  const m = name.match(FIELD_NAME_REGEX);\n\n  if (!m || m.length < 4) {\n    throw new error_1.FirebaseError(`Error parsing field name: ${name}`);\n  }\n\n  return {\n    projectId: m[1],\n    collectionGroupId: m[2],\n    fieldPath: m[3]\n  };\n}\n\nexports.parseFieldName = parseFieldName;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/firestore/util.js"],"names":["Object","defineProperty","exports","value","error_1","require","INDEX_NAME_REGEX","FIELD_NAME_REGEX","parseIndexName","name","FirebaseError","m","match","length","projectId","collectionGroupId","indexId","parseFieldName","fieldPath"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,gBAAgB,GAAG,6FAAzB;AACA,MAAMC,gBAAgB,GAAG,4FAAzB;;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,MAAI,CAACA,IAAL,EAAW;AACP,UAAM,IAAIL,OAAO,CAACM,aAAZ,CAA2B,oCAA3B,CAAN;AACH;;AACD,QAAMC,CAAC,GAAGF,IAAI,CAACG,KAAL,CAAWN,gBAAX,CAAV;;AACA,MAAI,CAACK,CAAD,IAAMA,CAAC,CAACE,MAAF,GAAW,CAArB,EAAwB;AACpB,UAAM,IAAIT,OAAO,CAACM,aAAZ,CAA2B,6BAA4BD,IAAK,EAA5D,CAAN;AACH;;AACD,SAAO;AACHK,IAAAA,SAAS,EAAEH,CAAC,CAAC,CAAD,CADT;AAEHI,IAAAA,iBAAiB,EAAEJ,CAAC,CAAC,CAAD,CAFjB;AAGHK,IAAAA,OAAO,EAAEL,CAAC,CAAC,CAAD;AAHP,GAAP;AAKH;;AACDT,OAAO,CAACM,cAAR,GAAyBA,cAAzB;;AACA,SAASS,cAAT,CAAwBR,IAAxB,EAA8B;AAC1B,QAAME,CAAC,GAAGF,IAAI,CAACG,KAAL,CAAWL,gBAAX,CAAV;;AACA,MAAI,CAACI,CAAD,IAAMA,CAAC,CAACE,MAAF,GAAW,CAArB,EAAwB;AACpB,UAAM,IAAIT,OAAO,CAACM,aAAZ,CAA2B,6BAA4BD,IAAK,EAA5D,CAAN;AACH;;AACD,SAAO;AACHK,IAAAA,SAAS,EAAEH,CAAC,CAAC,CAAD,CADT;AAEHI,IAAAA,iBAAiB,EAAEJ,CAAC,CAAC,CAAD,CAFjB;AAGHO,IAAAA,SAAS,EAAEP,CAAC,CAAC,CAAD;AAHT,GAAP;AAKH;;AACDT,OAAO,CAACe,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"../error\");\nconst INDEX_NAME_REGEX = /projects\\/([^\\/]+?)\\/databases\\/\\(default\\)\\/collectionGroups\\/([^\\/]+?)\\/indexes\\/([^\\/]*)/;\nconst FIELD_NAME_REGEX = /projects\\/([^\\/]+?)\\/databases\\/\\(default\\)\\/collectionGroups\\/([^\\/]+?)\\/fields\\/([^\\/]*)/;\nfunction parseIndexName(name) {\n    if (!name) {\n        throw new error_1.FirebaseError(`Cannot parse undefined index name.`);\n    }\n    const m = name.match(INDEX_NAME_REGEX);\n    if (!m || m.length < 4) {\n        throw new error_1.FirebaseError(`Error parsing index name: ${name}`);\n    }\n    return {\n        projectId: m[1],\n        collectionGroupId: m[2],\n        indexId: m[3],\n    };\n}\nexports.parseIndexName = parseIndexName;\nfunction parseFieldName(name) {\n    const m = name.match(FIELD_NAME_REGEX);\n    if (!m || m.length < 4) {\n        throw new error_1.FirebaseError(`Error parsing field name: ${name}`);\n    }\n    return {\n        projectId: m[1],\n        collectionGroupId: m[2],\n        fieldPath: m[3],\n    };\n}\nexports.parseFieldName = parseFieldName;\n"]},"metadata":{},"sourceType":"script"}
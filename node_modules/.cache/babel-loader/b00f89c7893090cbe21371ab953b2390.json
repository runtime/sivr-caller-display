{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst command_1 = require(\"../command\");\n\nconst logger = require(\"../logger\");\n\nconst requireInstance = require(\"../requireInstance\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst metadata = require(\"../database/metadata\");\n\nexports.default = new command_1.Command(\"database:rules:list\").description(\"list realtime database rulesets\").option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, uses default database instance)\").before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.get\"]).before(requireInstance).action(options => __awaiter(this, void 0, void 0, function* () {\n  const labeled = yield metadata.getRulesetLabels(options.instance);\n  const rulesets = yield metadata.listAllRulesets(options.instance);\n\n  for (const ruleset of rulesets) {\n    const labels = [];\n\n    if (ruleset.id == labeled.stable) {\n      labels.push(\"stable\");\n    }\n\n    if (ruleset.id == labeled.canary) {\n      labels.push(\"canary\");\n    }\n\n    logger.info(`${ruleset.id}  ${ruleset.createdAt}  ${labels.join(\",\")}`);\n  }\n\n  logger.info(\"Labels:\");\n  logger.info(`  stable: ${labeled.stable}`);\n\n  if (labeled.canary) {\n    logger.info(`  canary: ${labeled.canary}`);\n  }\n\n  return {\n    rulesets,\n    labeled\n  };\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/database-rules-list.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","command_1","require","logger","requireInstance","requirePermissions_1","metadata","default","Command","description","option","before","requirePermissions","action","options","labeled","getRulesetLabels","instance","rulesets","listAllRulesets","ruleset","labels","id","stable","push","canary","info","createdAt","join"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"../command\");\nconst logger = require(\"../logger\");\nconst requireInstance = require(\"../requireInstance\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst metadata = require(\"../database/metadata\");\nexports.default = new command_1.Command(\"database:rules:list\")\n    .description(\"list realtime database rulesets\")\n    .option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, uses default database instance)\")\n    .before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.get\"])\n    .before(requireInstance)\n    .action((options) => __awaiter(this, void 0, void 0, function* () {\n    const labeled = yield metadata.getRulesetLabels(options.instance);\n    const rulesets = yield metadata.listAllRulesets(options.instance);\n    for (const ruleset of rulesets) {\n        const labels = [];\n        if (ruleset.id == labeled.stable) {\n            labels.push(\"stable\");\n        }\n        if (ruleset.id == labeled.canary) {\n            labels.push(\"canary\");\n        }\n        logger.info(`${ruleset.id}  ${ruleset.createdAt}  ${labels.join(\",\")}`);\n    }\n    logger.info(\"Labels:\");\n    logger.info(`  stable: ${labeled.stable}`);\n    if (labeled.canary) {\n        logger.info(`  canary: ${labeled.canary}`);\n    }\n    return { rulesets, labeled };\n}));\n"]},"metadata":{},"sourceType":"script"}
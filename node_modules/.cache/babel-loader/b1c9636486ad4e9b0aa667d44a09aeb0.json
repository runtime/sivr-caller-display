{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst serveHosting = require(\"../serve/hosting\");\n\nconst types_1 = require(\"../emulator/types\");\n\nconst constants_1 = require(\"./constants\");\n\nclass HostingEmulator {\n  constructor(args) {\n    this.args = args;\n  }\n\n  start() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.args.options.host = this.args.host;\n      this.args.options.port = this.args.port;\n      return serveHosting.start(this.args.options);\n    });\n  }\n\n  connect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return;\n    });\n  }\n\n  stop() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return serveHosting.stop();\n    });\n  }\n\n  getInfo() {\n    const host = this.args.host || constants_1.Constants.getDefaultHost(types_1.Emulators.HOSTING);\n    const port = this.args.port || constants_1.Constants.getDefaultPort(types_1.Emulators.HOSTING);\n    return {\n      host,\n      port\n    };\n  }\n\n  getName() {\n    return types_1.Emulators.HOSTING;\n  }\n\n}\n\nexports.HostingEmulator = HostingEmulator;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/emulator/hostingEmulator.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","serveHosting","require","types_1","constants_1","HostingEmulator","constructor","args","start","options","host","port","connect","stop","getInfo","Constants","getDefaultHost","Emulators","HOSTING","getDefaultPort","getName"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst serveHosting = require(\"../serve/hosting\");\nconst types_1 = require(\"../emulator/types\");\nconst constants_1 = require(\"./constants\");\nclass HostingEmulator {\n    constructor(args) {\n        this.args = args;\n    }\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.args.options.host = this.args.host;\n            this.args.options.port = this.args.port;\n            return serveHosting.start(this.args.options);\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return;\n        });\n    }\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return serveHosting.stop();\n        });\n    }\n    getInfo() {\n        const host = this.args.host || constants_1.Constants.getDefaultHost(types_1.Emulators.HOSTING);\n        const port = this.args.port || constants_1.Constants.getDefaultPort(types_1.Emulators.HOSTING);\n        return {\n            host,\n            port,\n        };\n    }\n    getName() {\n        return types_1.Emulators.HOSTING;\n    }\n}\nexports.HostingEmulator = HostingEmulator;\n"]},"metadata":{},"sourceType":"script"}
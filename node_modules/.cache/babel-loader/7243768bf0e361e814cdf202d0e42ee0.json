{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _ = require(\"lodash\");\n\nvar clc = require(\"cli-color\");\n\nvar _require = require(\"./error\"),\n    FirebaseError = _require.FirebaseError;\n\nvar logger = require(\"./logger\");\n\nvar track = require(\"./track\");\n\nvar utils = require(\"./utils\");\n\nvar cloudfunctions = require(\"./gcp/cloudfunctions\");\n\nvar pollOperations = require(\"./pollOperations\");\n\nfunction functionMatchesGroup(functionName, groupChunks) {\n  return _.isEqual(groupChunks, _.last(functionName.split(\"/\")).split(\"-\").slice(0, groupChunks.length));\n}\n\nfunction getFilterGroups(options) {\n  if (!options.only) {\n    return [];\n  }\n\n  var opts;\n  return _.chain(options.only.split(\",\")).filter(function (filter) {\n    opts = filter.split(\":\");\n    return opts[0] === \"functions\" && opts[1];\n  }).map(function (filter) {\n    return filter.split(\":\")[1].split(\".\");\n  }).value();\n}\n\nfunction getReleaseNames(uploadNames, existingNames, functionFilterGroups) {\n  if (functionFilterGroups.length === 0) {\n    return uploadNames;\n  }\n\n  var allFunctions = _.union(uploadNames, existingNames);\n\n  return _.filter(allFunctions, function (functionName) {\n    return _.some(_.map(functionFilterGroups, function (groupChunks) {\n      return functionMatchesGroup(functionName, groupChunks);\n    }));\n  });\n}\n\nfunction logFilters(existingNames, releaseNames, functionFilterGroups) {\n  if (functionFilterGroups.length === 0) {\n    return;\n  }\n\n  logger.debug(\"> [functions] filtering triggers to: \" + JSON.stringify(releaseNames, null, 2));\n  track(\"Functions Deploy with Filter\", \"\", releaseNames.length);\n  let list;\n\n  if (existingNames.length > 0) {\n    list = _.map(existingNames, function (name) {\n      return getFunctionName(name) + \"(\" + getRegion(name) + \")\";\n    }).join(\", \");\n    utils.logBullet(clc.bold.cyan(\"functions: \") + \"current functions in project: \" + list);\n  }\n\n  if (releaseNames.length > 0) {\n    list = _.map(releaseNames, function (name) {\n      return getFunctionName(name) + \"(\" + getRegion(name) + \")\";\n    }).join(\", \");\n    utils.logBullet(clc.bold.cyan(\"functions: \") + \"uploading functions in project: \" + list);\n  }\n\n  var allFunctions = _.union(releaseNames, existingNames);\n\n  var unmatchedFilters = _.chain(functionFilterGroups).filter(function (filterGroup) {\n    return !_.some(_.map(allFunctions, function (functionName) {\n      return functionMatchesGroup(functionName, filterGroup);\n    }));\n  }).map(function (group) {\n    return group.join(\"-\");\n  }).value();\n\n  if (unmatchedFilters.length > 0) {\n    utils.logWarning(clc.bold.yellow(\"functions: \") + \"the following filters were specified but do not match any functions in the project: \" + unmatchedFilters.join(\", \"));\n  }\n}\n\nfunction getFunctionsInfo(parsedTriggers, projectId) {\n  var functionsInfo = [];\n\n  _.forEach(parsedTriggers, function (trigger) {\n    if (!trigger.regions) {\n      trigger.regions = [\"us-central1\"];\n    }\n\n    _.forEach(trigger.regions, function (region) {\n      var triggerDeepCopy = JSON.parse(JSON.stringify(trigger));\n      functionsInfo.push(_.chain(triggerDeepCopy).omit(\"regions\").assign({\n        name: [\"projects\", projectId, \"locations\", region, \"functions\", trigger.name].join(\"/\")\n      }).value());\n    });\n  });\n\n  return functionsInfo;\n}\n\nfunction getFunctionTrigger(functionInfo) {\n  if (functionInfo.httpsTrigger) {\n    return _.pick(functionInfo, \"httpsTrigger\");\n  } else if (functionInfo.eventTrigger) {\n    var trigger = functionInfo.eventTrigger;\n    return {\n      eventTrigger: trigger\n    };\n  }\n\n  logger.debug(\"Unknown trigger type found in:\", functionInfo);\n  return new FirebaseError(\"Could not parse function trigger, unknown trigger type.\");\n}\n\nfunction getFunctionName(fullName) {\n  return fullName.split(\"/\")[5];\n}\n\nfunction getScheduleName(fullName, appEngineLocation) {\n  var _fullName$split = fullName.split(\"/\"),\n      _fullName$split2 = _slicedToArray(_fullName$split, 6),\n      projectsPrefix = _fullName$split2[0],\n      project = _fullName$split2[1],\n      regionsPrefix = _fullName$split2[2],\n      region = _fullName$split2[3],\n      functionName = _fullName$split2[5];\n\n  return `${projectsPrefix}/${project}/${regionsPrefix}/${appEngineLocation}/jobs/firebase-schedule-${functionName}-${region}`;\n}\n\nfunction getTopicName(fullName) {\n  var _fullName$split3 = fullName.split(\"/\"),\n      _fullName$split4 = _slicedToArray(_fullName$split3, 6),\n      projectsPrefix = _fullName$split4[0],\n      project = _fullName$split4[1],\n      region = _fullName$split4[3],\n      functionName = _fullName$split4[5];\n\n  return `${projectsPrefix}/${project}/topics/firebase-schedule-${functionName}-${region}`;\n}\n\nfunction getRegion(fullName) {\n  return fullName.split(\"/\")[3];\n}\n\nfunction getFunctionLabel(fullName) {\n  return getFunctionName(fullName) + \"(\" + getRegion(fullName) + \")\";\n}\n\nfunction pollDeploys(operations, printSuccess, printFail, printTooManyOps, projectId) {\n  var interval;\n\n  if (_.size(operations) > 90) {\n    printTooManyOps(projectId);\n    return Promise.resolve();\n  } else if (_.size(operations) > 40) {\n    interval = 10 * 1000;\n  } else if (_.size(operations) > 15) {\n    interval = 5 * 1000;\n  } else {\n    interval = 2 * 1000;\n  }\n\n  var pollFunction = cloudfunctions.check;\n\n  var retryCondition = function (result) {\n    var retryableCodes = [1, 4, 10, 14];\n\n    if (_.includes(retryableCodes, result.error.code)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return pollOperations.pollAndRetry(operations, pollFunction, interval, printSuccess, printFail, retryCondition).catch(function () {\n    utils.logWarning(clc.bold.yellow(\"functions:\") + \" failed to get status of all the deployments\");\n    logger.info(\"You can check on their status at \" + utils.consoleUrl(projectId, \"/functions/logs\"));\n    return Promise.reject(new FirebaseError(\"Failed to get status of functions deployments.\"));\n  });\n}\n\nfunction getDefaultRuntime() {\n  logger.info();\n  utils.logWarning(clc.bold.yellow(\"functions: WARNING! NO ENGINES FIELD FOUND IN PACKAGE.JSON. DEFAULTING TO NODE 6 RUNTIME. \" + \"Starting June 1, 2019 deployments will be blocked if no engines field is specified in package.json. \" + \"To fix this, add the following lines to your package.json:\\n\\n\" + '\"engines\": {\\n  \"node\": \"6\" \\n}'));\n  logger.info();\n  return \"nodejs6\";\n}\n\nmodule.exports = {\n  getFilterGroups: getFilterGroups,\n  getReleaseNames: getReleaseNames,\n  logFilters: logFilters,\n  getFunctionsInfo: getFunctionsInfo,\n  getFunctionTrigger: getFunctionTrigger,\n  getFunctionName: getFunctionName,\n  getRegion: getRegion,\n  getScheduleName: getScheduleName,\n  getTopicName: getTopicName,\n  functionMatchesGroup: functionMatchesGroup,\n  getFunctionLabel: getFunctionLabel,\n  pollDeploys: pollDeploys,\n  getDefaultRuntime: getDefaultRuntime\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/functionsDeployHelper.js"],"names":["_","require","clc","FirebaseError","logger","track","utils","cloudfunctions","pollOperations","functionMatchesGroup","functionName","groupChunks","isEqual","last","split","slice","length","getFilterGroups","options","only","opts","chain","filter","map","value","getReleaseNames","uploadNames","existingNames","functionFilterGroups","allFunctions","union","some","logFilters","releaseNames","debug","JSON","stringify","list","name","getFunctionName","getRegion","join","logBullet","bold","cyan","unmatchedFilters","filterGroup","group","logWarning","yellow","getFunctionsInfo","parsedTriggers","projectId","functionsInfo","forEach","trigger","regions","region","triggerDeepCopy","parse","push","omit","assign","getFunctionTrigger","functionInfo","httpsTrigger","pick","eventTrigger","fullName","getScheduleName","appEngineLocation","projectsPrefix","project","regionsPrefix","getTopicName","getFunctionLabel","pollDeploys","operations","printSuccess","printFail","printTooManyOps","interval","size","Promise","resolve","pollFunction","check","retryCondition","result","retryableCodes","includes","error","code","pollAndRetry","catch","info","consoleUrl","reject","getDefaultRuntime","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar clc = require(\"cli-color\");\nvar { FirebaseError } = require(\"./error\");\nvar logger = require(\"./logger\");\nvar track = require(\"./track\");\nvar utils = require(\"./utils\");\nvar cloudfunctions = require(\"./gcp/cloudfunctions\");\nvar pollOperations = require(\"./pollOperations\");\nfunction functionMatchesGroup(functionName, groupChunks) {\n    return _.isEqual(groupChunks, _.last(functionName.split(\"/\"))\n        .split(\"-\")\n        .slice(0, groupChunks.length));\n}\nfunction getFilterGroups(options) {\n    if (!options.only) {\n        return [];\n    }\n    var opts;\n    return _.chain(options.only.split(\",\"))\n        .filter(function (filter) {\n        opts = filter.split(\":\");\n        return opts[0] === \"functions\" && opts[1];\n    })\n        .map(function (filter) {\n        return filter.split(\":\")[1].split(\".\");\n    })\n        .value();\n}\nfunction getReleaseNames(uploadNames, existingNames, functionFilterGroups) {\n    if (functionFilterGroups.length === 0) {\n        return uploadNames;\n    }\n    var allFunctions = _.union(uploadNames, existingNames);\n    return _.filter(allFunctions, function (functionName) {\n        return _.some(_.map(functionFilterGroups, function (groupChunks) {\n            return functionMatchesGroup(functionName, groupChunks);\n        }));\n    });\n}\nfunction logFilters(existingNames, releaseNames, functionFilterGroups) {\n    if (functionFilterGroups.length === 0) {\n        return;\n    }\n    logger.debug(\"> [functions] filtering triggers to: \" + JSON.stringify(releaseNames, null, 2));\n    track(\"Functions Deploy with Filter\", \"\", releaseNames.length);\n    let list;\n    if (existingNames.length > 0) {\n        list = _.map(existingNames, function (name) {\n            return getFunctionName(name) + \"(\" + getRegion(name) + \")\";\n        }).join(\", \");\n        utils.logBullet(clc.bold.cyan(\"functions: \") + \"current functions in project: \" + list);\n    }\n    if (releaseNames.length > 0) {\n        list = _.map(releaseNames, function (name) {\n            return getFunctionName(name) + \"(\" + getRegion(name) + \")\";\n        }).join(\", \");\n        utils.logBullet(clc.bold.cyan(\"functions: \") + \"uploading functions in project: \" + list);\n    }\n    var allFunctions = _.union(releaseNames, existingNames);\n    var unmatchedFilters = _.chain(functionFilterGroups)\n        .filter(function (filterGroup) {\n        return !_.some(_.map(allFunctions, function (functionName) {\n            return functionMatchesGroup(functionName, filterGroup);\n        }));\n    })\n        .map(function (group) {\n        return group.join(\"-\");\n    })\n        .value();\n    if (unmatchedFilters.length > 0) {\n        utils.logWarning(clc.bold.yellow(\"functions: \") +\n            \"the following filters were specified but do not match any functions in the project: \" +\n            unmatchedFilters.join(\", \"));\n    }\n}\nfunction getFunctionsInfo(parsedTriggers, projectId) {\n    var functionsInfo = [];\n    _.forEach(parsedTriggers, function (trigger) {\n        if (!trigger.regions) {\n            trigger.regions = [\"us-central1\"];\n        }\n        _.forEach(trigger.regions, function (region) {\n            var triggerDeepCopy = JSON.parse(JSON.stringify(trigger));\n            functionsInfo.push(_.chain(triggerDeepCopy)\n                .omit(\"regions\")\n                .assign({\n                name: [\"projects\", projectId, \"locations\", region, \"functions\", trigger.name].join(\"/\"),\n            })\n                .value());\n        });\n    });\n    return functionsInfo;\n}\nfunction getFunctionTrigger(functionInfo) {\n    if (functionInfo.httpsTrigger) {\n        return _.pick(functionInfo, \"httpsTrigger\");\n    }\n    else if (functionInfo.eventTrigger) {\n        var trigger = functionInfo.eventTrigger;\n        return { eventTrigger: trigger };\n    }\n    logger.debug(\"Unknown trigger type found in:\", functionInfo);\n    return new FirebaseError(\"Could not parse function trigger, unknown trigger type.\");\n}\nfunction getFunctionName(fullName) {\n    return fullName.split(\"/\")[5];\n}\nfunction getScheduleName(fullName, appEngineLocation) {\n    var [projectsPrefix, project, regionsPrefix, region, , functionName] = fullName.split(\"/\");\n    return `${projectsPrefix}/${project}/${regionsPrefix}/${appEngineLocation}/jobs/firebase-schedule-${functionName}-${region}`;\n}\nfunction getTopicName(fullName) {\n    var [projectsPrefix, project, , region, , functionName] = fullName.split(\"/\");\n    return `${projectsPrefix}/${project}/topics/firebase-schedule-${functionName}-${region}`;\n}\nfunction getRegion(fullName) {\n    return fullName.split(\"/\")[3];\n}\nfunction getFunctionLabel(fullName) {\n    return getFunctionName(fullName) + \"(\" + getRegion(fullName) + \")\";\n}\nfunction pollDeploys(operations, printSuccess, printFail, printTooManyOps, projectId) {\n    var interval;\n    if (_.size(operations) > 90) {\n        printTooManyOps(projectId);\n        return Promise.resolve();\n    }\n    else if (_.size(operations) > 40) {\n        interval = 10 * 1000;\n    }\n    else if (_.size(operations) > 15) {\n        interval = 5 * 1000;\n    }\n    else {\n        interval = 2 * 1000;\n    }\n    var pollFunction = cloudfunctions.check;\n    var retryCondition = function (result) {\n        var retryableCodes = [\n            1,\n            4,\n            10,\n            14,\n        ];\n        if (_.includes(retryableCodes, result.error.code)) {\n            return true;\n        }\n        return false;\n    };\n    return pollOperations\n        .pollAndRetry(operations, pollFunction, interval, printSuccess, printFail, retryCondition)\n        .catch(function () {\n        utils.logWarning(clc.bold.yellow(\"functions:\") + \" failed to get status of all the deployments\");\n        logger.info(\"You can check on their status at \" + utils.consoleUrl(projectId, \"/functions/logs\"));\n        return Promise.reject(new FirebaseError(\"Failed to get status of functions deployments.\"));\n    });\n}\nfunction getDefaultRuntime() {\n    logger.info();\n    utils.logWarning(clc.bold.yellow(\"functions: WARNING! NO ENGINES FIELD FOUND IN PACKAGE.JSON. DEFAULTING TO NODE 6 RUNTIME. \" +\n        \"Starting June 1, 2019 deployments will be blocked if no engines field is specified in package.json. \" +\n        \"To fix this, add the following lines to your package.json:\\n\\n\" +\n        '\"engines\": {\\n  \"node\": \"6\" \\n}'));\n    logger.info();\n    return \"nodejs6\";\n}\nmodule.exports = {\n    getFilterGroups: getFilterGroups,\n    getReleaseNames: getReleaseNames,\n    logFilters: logFilters,\n    getFunctionsInfo: getFunctionsInfo,\n    getFunctionTrigger: getFunctionTrigger,\n    getFunctionName: getFunctionName,\n    getRegion: getRegion,\n    getScheduleName: getScheduleName,\n    getTopicName: getTopicName,\n    functionMatchesGroup: functionMatchesGroup,\n    getFunctionLabel: getFunctionLabel,\n    pollDeploys: pollDeploys,\n    getDefaultRuntime: getDefaultRuntime,\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst api = require(\"../api\");\n\nconst logger = require(\"../logger\");\n\nconst utils = require(\"../utils\");\n\nfunction handleErrorResponse(response) {\n  if (response.body && response.body.error) {\n    return utils.reject(response.body.error, {\n      code: 2\n    });\n  }\n\n  logger.debug(\"[rules] error:\", response.status, response.body);\n  return utils.reject(\"Unexpected error encountered with database.\", {\n    code: 2\n  });\n}\n\nfunction listAllRulesets(databaseName) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield api.request(\"GET\", `/namespaces/${databaseName}/rulesets`, {\n      auth: true,\n      origin: api.rtdbMetadataOrigin,\n      json: true\n    });\n\n    if (response.status === 200) {\n      return response.body.rulesets;\n    }\n\n    return handleErrorResponse(response);\n  });\n}\n\nexports.listAllRulesets = listAllRulesets;\n\nfunction getRuleset(databaseName, rulesetId) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield api.request(\"GET\", `/namespaces/${databaseName}/rulesets/${rulesetId}`, {\n      auth: true,\n      origin: api.rtdbMetadataOrigin,\n      json: true\n    });\n\n    if (response.status === 200) {\n      return response.body;\n    }\n\n    return handleErrorResponse(response);\n  });\n}\n\nexports.getRuleset = getRuleset;\n\nfunction getRulesetLabels(databaseName) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield api.request(\"GET\", `/namespaces/${databaseName}/ruleset_labels`, {\n      auth: true,\n      origin: api.rtdbMetadataOrigin\n    });\n\n    if (response.status === 200) {\n      return response.body;\n    }\n\n    return handleErrorResponse(response);\n  });\n}\n\nexports.getRulesetLabels = getRulesetLabels;\n\nfunction createRuleset(databaseName, source) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield api.request(\"POST\", `/.settings/rulesets.json`, {\n      auth: true,\n      origin: utils.addSubdomain(api.realtimeOrigin, databaseName),\n      json: false,\n      data: source\n    });\n\n    if (response.status === 200) {\n      return JSON.parse(response.body).id;\n    }\n\n    return handleErrorResponse(response);\n  });\n}\n\nexports.createRuleset = createRuleset;\n\nfunction setRulesetLabels(databaseName, labels) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield api.request(\"PUT\", `/.settings/ruleset_labels.json`, {\n      auth: true,\n      origin: utils.addSubdomain(api.realtimeOrigin, databaseName),\n      data: labels\n    });\n\n    if (response.status === 200) {\n      return response.body;\n    }\n\n    return handleErrorResponse(response);\n  });\n}\n\nexports.setRulesetLabels = setRulesetLabels;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/database/metadata.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","api","require","logger","utils","handleErrorResponse","response","body","error","code","debug","status","listAllRulesets","databaseName","request","auth","origin","rtdbMetadataOrigin","json","rulesets","getRuleset","rulesetId","getRulesetLabels","createRuleset","source","addSubdomain","realtimeOrigin","data","JSON","parse","id","setRulesetLabels","labels"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api = require(\"../api\");\nconst logger = require(\"../logger\");\nconst utils = require(\"../utils\");\nfunction handleErrorResponse(response) {\n    if (response.body && response.body.error) {\n        return utils.reject(response.body.error, { code: 2 });\n    }\n    logger.debug(\"[rules] error:\", response.status, response.body);\n    return utils.reject(\"Unexpected error encountered with database.\", {\n        code: 2,\n    });\n}\nfunction listAllRulesets(databaseName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield api.request(\"GET\", `/namespaces/${databaseName}/rulesets`, {\n            auth: true,\n            origin: api.rtdbMetadataOrigin,\n            json: true,\n        });\n        if (response.status === 200) {\n            return response.body.rulesets;\n        }\n        return handleErrorResponse(response);\n    });\n}\nexports.listAllRulesets = listAllRulesets;\nfunction getRuleset(databaseName, rulesetId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield api.request(\"GET\", `/namespaces/${databaseName}/rulesets/${rulesetId}`, {\n            auth: true,\n            origin: api.rtdbMetadataOrigin,\n            json: true,\n        });\n        if (response.status === 200) {\n            return response.body;\n        }\n        return handleErrorResponse(response);\n    });\n}\nexports.getRuleset = getRuleset;\nfunction getRulesetLabels(databaseName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield api.request(\"GET\", `/namespaces/${databaseName}/ruleset_labels`, {\n            auth: true,\n            origin: api.rtdbMetadataOrigin,\n        });\n        if (response.status === 200) {\n            return response.body;\n        }\n        return handleErrorResponse(response);\n    });\n}\nexports.getRulesetLabels = getRulesetLabels;\nfunction createRuleset(databaseName, source) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield api.request(\"POST\", `/.settings/rulesets.json`, {\n            auth: true,\n            origin: utils.addSubdomain(api.realtimeOrigin, databaseName),\n            json: false,\n            data: source,\n        });\n        if (response.status === 200) {\n            return JSON.parse(response.body).id;\n        }\n        return handleErrorResponse(response);\n    });\n}\nexports.createRuleset = createRuleset;\nfunction setRulesetLabels(databaseName, labels) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield api.request(\"PUT\", `/.settings/ruleset_labels.json`, {\n            auth: true,\n            origin: utils.addSubdomain(api.realtimeOrigin, databaseName),\n            data: labels,\n        });\n        if (response.status === 200) {\n            return response.body;\n        }\n        return handleErrorResponse(response);\n    });\n}\nexports.setRulesetLabels = setRulesetLabels;\n"]},"metadata":{},"sourceType":"script"}
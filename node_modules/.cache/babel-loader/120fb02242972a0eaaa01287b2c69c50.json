{"ast":null,"code":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar slasher = require('glob-slasher');\n\nvar minimatch = require('minimatch');\n\nvar urlParser = require('fast-url-parser');\n\nvar normalizeConfig = function (config) {\n  return config || [];\n};\n\nvar matcher = function (rewrites) {\n  return function (url) {\n    for (var i = 0; i < rewrites.length; i++) {\n      if (minimatch(url, rewrites[i].source)) {\n        return rewrites[i];\n      }\n    }\n\n    return undefined;\n  };\n};\n\nmodule.exports = function () {\n  return function (req, res, next) {\n    var rewrites = matcher(normalizeConfig(req.superstatic.rewrites));\n    var pathname = urlParser.parse(req.url).pathname;\n    var match = rewrites(slasher(pathname));\n\n    if (!match) {\n      return next();\n    }\n\n    res.statusCode = 200;\n    return res.superstatic.handle({\n      rewrite: match\n    }, next);\n  };\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/superstatic/lib/middleware/rewrites.js"],"names":["slasher","require","minimatch","urlParser","normalizeConfig","config","matcher","rewrites","url","i","length","source","undefined","module","exports","req","res","next","superstatic","pathname","parse","match","statusCode","handle","rewrite"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AAEA,IAAIG,eAAe,GAAG,UAASC,MAAT,EAAiB;AACrC,SAAOA,MAAM,IAAI,EAAjB;AACD,CAFD;;AAIA,IAAIC,OAAO,GAAG,UAASC,QAAT,EAAmB;AAC/B,SAAO,UAASC,GAAT,EAAc;AACnB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAIP,SAAS,CAACM,GAAD,EAAMD,QAAQ,CAACE,CAAD,CAAR,CAAYE,MAAlB,CAAb,EAAwC;AACtC,eAAOJ,QAAQ,CAACE,CAAD,CAAf;AACD;AACF;;AACD,WAAOG,SAAP;AACD,GAPD;AAQD,CATD;;AAWAC,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC1B,SAAO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9B,QAAIV,QAAQ,GAAGD,OAAO,CAACF,eAAe,CAACW,GAAG,CAACG,WAAJ,CAAgBX,QAAjB,CAAhB,CAAtB;AAEA,QAAIY,QAAQ,GAAGhB,SAAS,CAACiB,KAAV,CAAgBL,GAAG,CAACP,GAApB,EAAyBW,QAAxC;AACA,QAAIE,KAAK,GAAGd,QAAQ,CAACP,OAAO,CAACmB,QAAD,CAAR,CAApB;;AAEA,QAAI,CAACE,KAAL,EAAY;AACV,aAAOJ,IAAI,EAAX;AACD;;AAEDD,IAAAA,GAAG,CAACM,UAAJ,GAAiB,GAAjB;AAEA,WAAON,GAAG,CAACE,WAAJ,CAAgBK,MAAhB,CAAuB;AAACC,MAAAA,OAAO,EAAEH;AAAV,KAAvB,EAAyCJ,IAAzC,CAAP;AACD,GAbD;AAcD,CAfD","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar slasher = require('glob-slasher');\nvar minimatch = require('minimatch');\nvar urlParser = require('fast-url-parser');\n\nvar normalizeConfig = function(config) {\n  return config || [];\n};\n\nvar matcher = function(rewrites) {\n  return function(url) {\n    for (var i = 0; i < rewrites.length; i++) {\n      if (minimatch(url, rewrites[i].source)) {\n        return rewrites[i];\n      }\n    }\n    return undefined;\n  };\n};\n\nmodule.exports = function() {\n  return function(req, res, next) {\n    var rewrites = matcher(normalizeConfig(req.superstatic.rewrites));\n\n    var pathname = urlParser.parse(req.url).pathname;\n    var match = rewrites(slasher(pathname));\n\n    if (!match) {\n      return next();\n    }\n\n    res.statusCode = 200;\n\n    return res.superstatic.handle({rewrite: match}, next);\n  };\n};\n"]},"metadata":{},"sourceType":"script"}
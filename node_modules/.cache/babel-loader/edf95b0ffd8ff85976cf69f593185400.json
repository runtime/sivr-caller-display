{"ast":null,"code":"var fs = require('graceful-fs');\n\nvar BUF_LENGTH = 64 * 1024;\n\nvar _buff = new Buffer(BUF_LENGTH);\n\nfunction copyFileSync(srcFile, destFile, options) {\n  var clobber = options.clobber;\n  var preserveTimestamps = options.preserveTimestamps;\n\n  if (fs.existsSync(destFile) && !clobber) {\n    throw Error('EEXIST');\n  }\n\n  var fdr = fs.openSync(srcFile, 'r');\n  var stat = fs.fstatSync(fdr);\n  var fdw = fs.openSync(destFile, 'w', stat.mode);\n  var bytesRead = 1;\n  var pos = 0;\n\n  while (bytesRead > 0) {\n    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos);\n    fs.writeSync(fdw, _buff, 0, bytesRead);\n    pos += bytesRead;\n  }\n\n  if (preserveTimestamps) {\n    fs.futimesSync(fdw, stat.atime, stat.mtime);\n  }\n\n  fs.closeSync(fdr);\n  fs.closeSync(fdw);\n}\n\nmodule.exports = copyFileSync;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/node_modules/fs-extra/lib/copy-sync/copy-file-sync.js"],"names":["fs","require","BUF_LENGTH","_buff","Buffer","copyFileSync","srcFile","destFile","options","clobber","preserveTimestamps","existsSync","Error","fdr","openSync","stat","fstatSync","fdw","mode","bytesRead","pos","readSync","writeSync","futimesSync","atime","mtime","closeSync","module","exports"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AAEA,IAAIC,UAAU,GAAG,KAAK,IAAtB;;AACA,IAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAWF,UAAX,CAAZ;;AAEA,SAASG,YAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0CC,OAA1C,EAAmD;AACjD,MAAIC,OAAO,GAAGD,OAAO,CAACC,OAAtB;AACA,MAAIC,kBAAkB,GAAGF,OAAO,CAACE,kBAAjC;;AAEA,MAAIV,EAAE,CAACW,UAAH,CAAcJ,QAAd,KAA2B,CAACE,OAAhC,EAAyC;AACvC,UAAMG,KAAK,CAAC,QAAD,CAAX;AACD;;AAED,MAAIC,GAAG,GAAGb,EAAE,CAACc,QAAH,CAAYR,OAAZ,EAAqB,GAArB,CAAV;AACA,MAAIS,IAAI,GAAGf,EAAE,CAACgB,SAAH,CAAaH,GAAb,CAAX;AACA,MAAII,GAAG,GAAGjB,EAAE,CAACc,QAAH,CAAYP,QAAZ,EAAsB,GAAtB,EAA2BQ,IAAI,CAACG,IAAhC,CAAV;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,GAAG,GAAG,CAAV;;AAEA,SAAOD,SAAS,GAAG,CAAnB,EAAsB;AACpBA,IAAAA,SAAS,GAAGnB,EAAE,CAACqB,QAAH,CAAYR,GAAZ,EAAiBV,KAAjB,EAAwB,CAAxB,EAA2BD,UAA3B,EAAuCkB,GAAvC,CAAZ;AACApB,IAAAA,EAAE,CAACsB,SAAH,CAAaL,GAAb,EAAkBd,KAAlB,EAAyB,CAAzB,EAA4BgB,SAA5B;AACAC,IAAAA,GAAG,IAAID,SAAP;AACD;;AAED,MAAIT,kBAAJ,EAAwB;AACtBV,IAAAA,EAAE,CAACuB,WAAH,CAAeN,GAAf,EAAoBF,IAAI,CAACS,KAAzB,EAAgCT,IAAI,CAACU,KAArC;AACD;;AAEDzB,EAAAA,EAAE,CAAC0B,SAAH,CAAab,GAAb;AACAb,EAAAA,EAAE,CAAC0B,SAAH,CAAaT,GAAb;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiBvB,YAAjB","sourcesContent":["var fs = require('graceful-fs')\n\nvar BUF_LENGTH = 64 * 1024\nvar _buff = new Buffer(BUF_LENGTH)\n\nfunction copyFileSync (srcFile, destFile, options) {\n  var clobber = options.clobber\n  var preserveTimestamps = options.preserveTimestamps\n\n  if (fs.existsSync(destFile) && !clobber) {\n    throw Error('EEXIST')\n  }\n\n  var fdr = fs.openSync(srcFile, 'r')\n  var stat = fs.fstatSync(fdr)\n  var fdw = fs.openSync(destFile, 'w', stat.mode)\n  var bytesRead = 1\n  var pos = 0\n\n  while (bytesRead > 0) {\n    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)\n    fs.writeSync(fdw, _buff, 0, bytesRead)\n    pos += bytesRead\n  }\n\n  if (preserveTimestamps) {\n    fs.futimesSync(fdw, stat.atime, stat.mtime)\n  }\n\n  fs.closeSync(fdr)\n  fs.closeSync(fdw)\n}\n\nmodule.exports = copyFileSync\n"]},"metadata":{},"sourceType":"script"}
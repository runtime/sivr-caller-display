{"ast":null,"code":"'use strict';\n\nvar cp = require('child_process');\n\nvar parse = require('./lib/parse');\n\nvar enoent = require('./lib/enoent');\n\nvar cpSpawnSync = cp.spawnSync;\n\nfunction spawn(command, args, options) {\n  var parsed;\n  var spawned; // Parse the arguments\n\n  parsed = parse(command, args, options); // Spawn the child process\n\n  spawned = cp.spawn(parsed.command, parsed.args, parsed.options); // Hook into child process \"exit\" event to emit an error if the command\n  // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n\n  enoent.hookChildProcess(spawned, parsed);\n  return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n  var parsed;\n  var result;\n\n  if (!cpSpawnSync) {\n    try {\n      cpSpawnSync = require('spawn-sync'); // eslint-disable-line global-require\n    } catch (ex) {\n      throw new Error('In order to use spawnSync on node 0.10 or older, you must ' + 'install spawn-sync:\\n\\n' + '  npm install spawn-sync --save');\n    }\n  } // Parse the arguments\n\n\n  parsed = parse(command, args, options); // Spawn the child process\n\n  result = cpSpawnSync(parsed.command, parsed.args, parsed.options); // Analyze if the command does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n\n  result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n  return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/node_modules/cross-spawn/index.js"],"names":["cp","require","parse","enoent","cpSpawnSync","spawnSync","spawn","command","args","options","parsed","spawned","hookChildProcess","result","ex","Error","error","verifyENOENTSync","status","module","exports","sync","_parse","_enoent"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,eAAD,CAAhB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,cAAD,CAApB;;AAEA,IAAIG,WAAW,GAAGJ,EAAE,CAACK,SAArB;;AAEA,SAASC,KAAT,CAAeC,OAAf,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuC;AACnC,MAAIC,MAAJ;AACA,MAAIC,OAAJ,CAFmC,CAInC;;AACAD,EAAAA,MAAM,GAAGR,KAAK,CAACK,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,CAAd,CALmC,CAOnC;;AACAE,EAAAA,OAAO,GAAGX,EAAE,CAACM,KAAH,CAASI,MAAM,CAACH,OAAhB,EAAyBG,MAAM,CAACF,IAAhC,EAAsCE,MAAM,CAACD,OAA7C,CAAV,CARmC,CAUnC;AACA;;AACAN,EAAAA,MAAM,CAACS,gBAAP,CAAwBD,OAAxB,EAAiCD,MAAjC;AAEA,SAAOC,OAAP;AACH;;AAED,SAASN,SAAT,CAAmBE,OAAnB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2C;AACvC,MAAIC,MAAJ;AACA,MAAIG,MAAJ;;AAEA,MAAI,CAACT,WAAL,EAAkB;AACd,QAAI;AACAA,MAAAA,WAAW,GAAGH,OAAO,CAAC,YAAD,CAArB,CADA,CACsC;AACzC,KAFD,CAEE,OAAOa,EAAP,EAAW;AACT,YAAM,IAAIC,KAAJ,CACF,+DACA,yBADA,GAEA,iCAHE,CAAN;AAKH;AACJ,GAdsC,CAgBvC;;;AACAL,EAAAA,MAAM,GAAGR,KAAK,CAACK,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,CAAd,CAjBuC,CAmBvC;;AACAI,EAAAA,MAAM,GAAGT,WAAW,CAACM,MAAM,CAACH,OAAR,EAAiBG,MAAM,CAACF,IAAxB,EAA8BE,MAAM,CAACD,OAArC,CAApB,CApBuC,CAsBvC;;AACAI,EAAAA,MAAM,CAACG,KAAP,GAAeH,MAAM,CAACG,KAAP,IAAgBb,MAAM,CAACc,gBAAP,CAAwBJ,MAAM,CAACK,MAA/B,EAAuCR,MAAvC,CAA/B;AAEA,SAAOG,MAAP;AACH;;AAEDM,MAAM,CAACC,OAAP,GAAiBd,KAAjB;AACAa,MAAM,CAACC,OAAP,CAAed,KAAf,GAAuBA,KAAvB;AACAa,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsBhB,SAAtB;AAEAc,MAAM,CAACC,OAAP,CAAeE,MAAf,GAAwBpB,KAAxB;AACAiB,MAAM,CAACC,OAAP,CAAeG,OAAf,GAAyBpB,MAAzB","sourcesContent":["'use strict';\n\nvar cp = require('child_process');\nvar parse = require('./lib/parse');\nvar enoent = require('./lib/enoent');\n\nvar cpSpawnSync = cp.spawnSync;\n\nfunction spawn(command, args, options) {\n    var parsed;\n    var spawned;\n\n    // Parse the arguments\n    parsed = parse(command, args, options);\n\n    // Spawn the child process\n    spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    var parsed;\n    var result;\n\n    if (!cpSpawnSync) {\n        try {\n            cpSpawnSync = require('spawn-sync');  // eslint-disable-line global-require\n        } catch (ex) {\n            throw new Error(\n                'In order to use spawnSync on node 0.10 or older, you must ' +\n                'install spawn-sync:\\n\\n' +\n                '  npm install spawn-sync --save'\n            );\n        }\n    }\n\n    // Parse the arguments\n    parsed = parse(command, args, options);\n\n    // Spawn the child process\n    result = cpSpawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n"]},"metadata":{},"sourceType":"script"}
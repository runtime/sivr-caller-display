{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clc = require(\"cli-color\");\n\nconst ora = require(\"ora\");\n\nconst Table = require(\"cli-table\");\n\nconst command_1 = require(\"../command\");\n\nconst getProjectId = require(\"../getProjectId\");\n\nconst apps_1 = require(\"../management/apps\");\n\nconst requireAuth = require(\"../requireAuth\");\n\nconst logger = require(\"../logger\");\n\nconst NOT_SPECIFIED = clc.yellow(\"[Not specified]\");\n\nfunction logAppsList(apps) {\n  if (apps.length === 0) {\n    logger.info(clc.bold(\"No apps found.\"));\n    return;\n  }\n\n  const tableHead = [\"App Display Name\", \"App ID\", \"Platform\"];\n  const table = new Table({\n    head: tableHead,\n    style: {\n      head: [\"green\"]\n    }\n  });\n  apps.forEach(({\n    appId,\n    displayName,\n    platform\n  }) => {\n    table.push([displayName || NOT_SPECIFIED, appId, platform]);\n  });\n  logger.info(table.toString());\n}\n\nfunction logAppCount(count = 0) {\n  if (count === 0) {\n    return;\n  }\n\n  logger.info(\"\");\n  logger.info(`${count} app(s) total.`);\n}\n\nmodule.exports = new command_1.Command(\"apps:list [platform]\").description(\"list the registered apps of a Firebase project. \" + \"Optionally filter apps by [platform]: IOS, ANDROID or WEB (case insensitive)\").before(requireAuth).action((platform = \"\", options) => __awaiter(this, void 0, void 0, function* () {\n  const projectId = getProjectId(options);\n  const appPlatform = apps_1.getAppPlatform(platform);\n  let apps;\n  const spinner = ora(\"Preparing the list of your Firebase \" + `${appPlatform === apps_1.AppPlatform.ANY ? \"\" : appPlatform + \" \"}apps`).start();\n\n  try {\n    apps = yield apps_1.listFirebaseApps(projectId, appPlatform);\n  } catch (err) {\n    spinner.fail();\n    throw err;\n  }\n\n  spinner.succeed();\n  logAppsList(apps);\n  logAppCount(apps.length);\n  return apps;\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/apps-list.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","clc","require","ora","Table","command_1","getProjectId","apps_1","requireAuth","logger","NOT_SPECIFIED","yellow","logAppsList","apps","length","info","bold","tableHead","table","head","style","forEach","appId","displayName","platform","push","toString","logAppCount","count","module","Command","description","before","action","options","projectId","appPlatform","getAppPlatform","spinner","AppPlatform","ANY","start","listFirebaseApps","err","fail","succeed"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clc = require(\"cli-color\");\nconst ora = require(\"ora\");\nconst Table = require(\"cli-table\");\nconst command_1 = require(\"../command\");\nconst getProjectId = require(\"../getProjectId\");\nconst apps_1 = require(\"../management/apps\");\nconst requireAuth = require(\"../requireAuth\");\nconst logger = require(\"../logger\");\nconst NOT_SPECIFIED = clc.yellow(\"[Not specified]\");\nfunction logAppsList(apps) {\n    if (apps.length === 0) {\n        logger.info(clc.bold(\"No apps found.\"));\n        return;\n    }\n    const tableHead = [\"App Display Name\", \"App ID\", \"Platform\"];\n    const table = new Table({ head: tableHead, style: { head: [\"green\"] } });\n    apps.forEach(({ appId, displayName, platform }) => {\n        table.push([displayName || NOT_SPECIFIED, appId, platform]);\n    });\n    logger.info(table.toString());\n}\nfunction logAppCount(count = 0) {\n    if (count === 0) {\n        return;\n    }\n    logger.info(\"\");\n    logger.info(`${count} app(s) total.`);\n}\nmodule.exports = new command_1.Command(\"apps:list [platform]\")\n    .description(\"list the registered apps of a Firebase project. \" +\n    \"Optionally filter apps by [platform]: IOS, ANDROID or WEB (case insensitive)\")\n    .before(requireAuth)\n    .action((platform = \"\", options) => __awaiter(this, void 0, void 0, function* () {\n    const projectId = getProjectId(options);\n    const appPlatform = apps_1.getAppPlatform(platform);\n    let apps;\n    const spinner = ora(\"Preparing the list of your Firebase \" +\n        `${appPlatform === apps_1.AppPlatform.ANY ? \"\" : appPlatform + \" \"}apps`).start();\n    try {\n        apps = yield apps_1.listFirebaseApps(projectId, appPlatform);\n    }\n    catch (err) {\n        spinner.fail();\n        throw err;\n    }\n    spinner.succeed();\n    logAppsList(apps);\n    logAppCount(apps.length);\n    return apps;\n}));\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar which = require('which');\n\nvar LRU = require('lru-cache');\n\nvar commandCache = new LRU({\n  max: 50,\n  maxAge: 30 * 1000\n}); // Cache just for 30sec\n\nfunction resolveCommand(command, noExtension) {\n  var resolved;\n  noExtension = !!noExtension;\n  resolved = commandCache.get(command + '!' + noExtension); // Check if its resolved in the cache\n\n  if (commandCache.has(command)) {\n    return commandCache.get(command);\n  }\n\n  try {\n    resolved = !noExtension ? which.sync(command) : which.sync(command, {\n      pathExt: path.delimiter + (process.env.PATHEXT || '')\n    });\n  } catch (e) {\n    /* empty */\n  }\n\n  commandCache.set(command + '!' + noExtension, resolved);\n  return resolved;\n}\n\nmodule.exports = resolveCommand;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/node_modules/cross-spawn/lib/resolveCommand.js"],"names":["path","require","which","LRU","commandCache","max","maxAge","resolveCommand","command","noExtension","resolved","get","has","sync","pathExt","delimiter","process","env","PATHEXT","e","set","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,WAAD,CAAjB;;AAEA,IAAIG,YAAY,GAAG,IAAID,GAAJ,CAAQ;AAAEE,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,MAAM,EAAE,KAAK;AAAxB,CAAR,CAAnB,C,CAA6D;;AAE7D,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,WAAjC,EAA8C;AAC1C,MAAIC,QAAJ;AAEAD,EAAAA,WAAW,GAAG,CAAC,CAACA,WAAhB;AACAC,EAAAA,QAAQ,GAAGN,YAAY,CAACO,GAAb,CAAiBH,OAAO,GAAG,GAAV,GAAgBC,WAAjC,CAAX,CAJ0C,CAM1C;;AACA,MAAIL,YAAY,CAACQ,GAAb,CAAiBJ,OAAjB,CAAJ,EAA+B;AAC3B,WAAOJ,YAAY,CAACO,GAAb,CAAiBH,OAAjB,CAAP;AACH;;AAED,MAAI;AACAE,IAAAA,QAAQ,GAAG,CAACD,WAAD,GACPP,KAAK,CAACW,IAAN,CAAWL,OAAX,CADO,GAEPN,KAAK,CAACW,IAAN,CAAWL,OAAX,EAAoB;AAAEM,MAAAA,OAAO,EAAEd,IAAI,CAACe,SAAL,IAAkBC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,EAAzC;AAAX,KAApB,CAFJ;AAGH,GAJD,CAIE,OAAOC,CAAP,EAAU;AAAE;AAAa;;AAE3Bf,EAAAA,YAAY,CAACgB,GAAb,CAAiBZ,OAAO,GAAG,GAAV,GAAgBC,WAAjC,EAA8CC,QAA9C;AAEA,SAAOA,QAAP;AACH;;AAEDW,MAAM,CAACC,OAAP,GAAiBf,cAAjB","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar which = require('which');\nvar LRU = require('lru-cache');\n\nvar commandCache = new LRU({ max: 50, maxAge: 30 * 1000 });  // Cache just for 30sec\n\nfunction resolveCommand(command, noExtension) {\n    var resolved;\n\n    noExtension = !!noExtension;\n    resolved = commandCache.get(command + '!' + noExtension);\n\n    // Check if its resolved in the cache\n    if (commandCache.has(command)) {\n        return commandCache.get(command);\n    }\n\n    try {\n        resolved = !noExtension ?\n            which.sync(command) :\n            which.sync(command, { pathExt: path.delimiter + (process.env.PATHEXT || '') });\n    } catch (e) { /* empty */ }\n\n    commandCache.set(command + '!' + noExtension, resolved);\n\n    return resolved;\n}\n\nmodule.exports = resolveCommand;\n"]},"metadata":{},"sourceType":"script"}
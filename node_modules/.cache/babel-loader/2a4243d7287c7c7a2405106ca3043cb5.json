{"ast":null,"code":"\"use strict\";\n\nvar clc = require(\"cli-color\");\n\nvar _ = require(\"lodash\");\n\nvar _require = require(\"../command\"),\n    Command = _require.Command;\n\nvar logger = require(\"../logger\");\n\nvar utils = require(\"../utils\");\n\nvar _require2 = require(\"../requirePermissions\"),\n    requirePermissions = _require2.requirePermissions;\n\nvar requireConfig = require(\"../requireConfig\");\n\nvar checkDupHostingKeys = require(\"../checkDupHostingKeys\");\n\nvar _require3 = require(\"../serve/index\"),\n    serve = _require3.serve;\n\nvar filterTargets = require(\"../filterTargets\");\n\nvar getProjectNumber = require(\"../getProjectNumber\");\n\nvar VALID_EMULATORS = [\"database\", \"firestore\", \"functions\", \"hosting\"];\nvar VALID_TARGETS = [\"hosting\", \"functions\"];\nvar REQUIRES_AUTH = [\"hosting\", \"functions\"];\n\nvar filterOnly = (list, only) => {\n  if (!only) {\n    return [];\n  }\n\n  return _.intersection(list, only.split(\",\").map(opt => {\n    return opt.split(\":\")[0];\n  }));\n};\n\nmodule.exports = new Command(\"serve\").description(\"start a local server for your static assets\").option(\"-p, --port <port>\", \"the port on which to listen (default: 5000)\", 5000).option(\"-o, --host <host>\", \"the host on which to listen (default: localhost)\", \"localhost\").option(\"--only <targets>\", \"only serve specified targets (valid targets are: \" + _.union(VALID_TARGETS, VALID_EMULATORS).join(\", \") + \")\").option(\"--except <targets>\", \"serve all except specified targets (valid targets are: \" + VALID_TARGETS.join(\", \") + \")\").before(options => {\n  if (options.only && options.only.length > 0 && filterOnly(REQUIRES_AUTH, options.only).length === 0) {\n    return Promise.resolve();\n  }\n\n  return requireConfig(options).then(() => requirePermissions(options)).then(() => checkDupHostingKeys(options)).then(() => getProjectNumber(options));\n}).action(options => {\n  options.targets = filterOnly(VALID_EMULATORS, options.only);\n\n  if (options.targets.length > 0) {\n    return serve(options);\n  }\n\n  if (options.config) {\n    logger.info();\n    logger.info(clc.bold(clc.white(\"===\") + \" Serving from '\" + options.config.projectDir + \"'...\"));\n    logger.info();\n  } else {\n    utils.logWarning(\"No Firebase project directory detected. Serving static content from \" + clc.bold(options.cwd || process.cwd()));\n  }\n\n  options.targets = filterTargets(options, VALID_TARGETS);\n  return serve(options);\n});","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/serve.js"],"names":["clc","require","_","Command","logger","utils","requirePermissions","requireConfig","checkDupHostingKeys","serve","filterTargets","getProjectNumber","VALID_EMULATORS","VALID_TARGETS","REQUIRES_AUTH","filterOnly","list","only","intersection","split","map","opt","module","exports","description","option","union","join","before","options","length","Promise","resolve","then","action","targets","config","info","bold","white","projectDir","logWarning","cwd","process"],"mappings":"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","sourcesContent":["\"use strict\";\nvar clc = require(\"cli-color\");\nvar _ = require(\"lodash\");\nvar { Command } = require(\"../command\");\nvar logger = require(\"../logger\");\nvar utils = require(\"../utils\");\nvar { requirePermissions } = require(\"../requirePermissions\");\nvar requireConfig = require(\"../requireConfig\");\nvar checkDupHostingKeys = require(\"../checkDupHostingKeys\");\nvar { serve } = require(\"../serve/index\");\nvar filterTargets = require(\"../filterTargets\");\nvar getProjectNumber = require(\"../getProjectNumber\");\nvar VALID_EMULATORS = [\"database\", \"firestore\", \"functions\", \"hosting\"];\nvar VALID_TARGETS = [\"hosting\", \"functions\"];\nvar REQUIRES_AUTH = [\"hosting\", \"functions\"];\nvar filterOnly = (list, only) => {\n    if (!only) {\n        return [];\n    }\n    return _.intersection(list, only.split(\",\").map((opt) => {\n        return opt.split(\":\")[0];\n    }));\n};\nmodule.exports = new Command(\"serve\")\n    .description(\"start a local server for your static assets\")\n    .option(\"-p, --port <port>\", \"the port on which to listen (default: 5000)\", 5000)\n    .option(\"-o, --host <host>\", \"the host on which to listen (default: localhost)\", \"localhost\")\n    .option(\"--only <targets>\", \"only serve specified targets (valid targets are: \" +\n    _.union(VALID_TARGETS, VALID_EMULATORS).join(\", \") +\n    \")\")\n    .option(\"--except <targets>\", \"serve all except specified targets (valid targets are: \" + VALID_TARGETS.join(\", \") + \")\")\n    .before((options) => {\n    if (options.only &&\n        options.only.length > 0 &&\n        filterOnly(REQUIRES_AUTH, options.only).length === 0) {\n        return Promise.resolve();\n    }\n    return requireConfig(options)\n        .then(() => requirePermissions(options))\n        .then(() => checkDupHostingKeys(options))\n        .then(() => getProjectNumber(options));\n})\n    .action((options) => {\n    options.targets = filterOnly(VALID_EMULATORS, options.only);\n    if (options.targets.length > 0) {\n        return serve(options);\n    }\n    if (options.config) {\n        logger.info();\n        logger.info(clc.bold(clc.white(\"===\") + \" Serving from '\" + options.config.projectDir + \"'...\"));\n        logger.info();\n    }\n    else {\n        utils.logWarning(\"No Firebase project directory detected. Serving static content from \" +\n            clc.bold(options.cwd || process.cwd()));\n    }\n    options.targets = filterTargets(options, VALID_TARGETS);\n    return serve(options);\n});\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"// most of this code was written by Andrew Kelley\n// licensed under the BSD license: see\n// https://github.com/andrewrk/node-mv/blob/master/package.json\n// this needs a cleanup\nvar fs = require('graceful-fs');\n\nvar ncp = require('../copy/ncp');\n\nvar path = require('path');\n\nvar rimraf = require('rimraf');\n\nvar mkdirp = require('../mkdirs').mkdirs;\n\nfunction mv(source, dest, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var shouldMkdirp = 'mkdirp' in options ? options.mkdirp : true;\n  var clobber = 'clobber' in options ? options.clobber : false;\n  var limit = options.limit || 16;\n\n  if (shouldMkdirp) {\n    mkdirs();\n  } else {\n    doRename();\n  }\n\n  function mkdirs() {\n    mkdirp(path.dirname(dest), function (err) {\n      if (err) return callback(err);\n      doRename();\n    });\n  }\n\n  function doRename() {\n    if (clobber) {\n      fs.rename(source, dest, function (err) {\n        if (!err) return callback();\n\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST') {\n          rimraf(dest, function (err) {\n            if (err) return callback(err);\n            options.clobber = false; // just clobbered it, no need to do it again\n\n            mv(source, dest, options, callback);\n          });\n          return;\n        } // weird Windows shit\n\n\n        if (err.code === 'EPERM') {\n          setTimeout(function () {\n            rimraf(dest, function (err) {\n              if (err) return callback(err);\n              options.clobber = false;\n              mv(source, dest, options, callback);\n            });\n          }, 200);\n          return;\n        }\n\n        if (err.code !== 'EXDEV') return callback(err);\n        moveAcrossDevice(source, dest, clobber, limit, callback);\n      });\n    } else {\n      fs.link(source, dest, function (err) {\n        if (err) {\n          if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM') {\n            moveAcrossDevice(source, dest, clobber, limit, callback);\n            return;\n          }\n\n          callback(err);\n          return;\n        }\n\n        fs.unlink(source, callback);\n      });\n    }\n  }\n}\n\nfunction moveAcrossDevice(source, dest, clobber, limit, callback) {\n  fs.stat(source, function (err, stat) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (stat.isDirectory()) {\n      moveDirAcrossDevice(source, dest, clobber, limit, callback);\n    } else {\n      moveFileAcrossDevice(source, dest, clobber, limit, callback);\n    }\n  });\n}\n\nfunction moveFileAcrossDevice(source, dest, clobber, limit, callback) {\n  var outFlags = clobber ? 'w' : 'wx';\n  var ins = fs.createReadStream(source);\n  var outs = fs.createWriteStream(dest, {\n    flags: outFlags\n  });\n  ins.on('error', function (err) {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose); // may want to create a directory but `out` line above\n    // creates an empty file for us: See #108\n    // don't care about error here\n\n    fs.unlink(dest, function () {\n      // note: `err` here is from the input stream errror\n      if (err.code === 'EISDIR' || err.code === 'EPERM') {\n        moveDirAcrossDevice(source, dest, clobber, limit, callback);\n      } else {\n        callback(err);\n      }\n    });\n  });\n  outs.on('error', function (err) {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n    callback(err);\n  });\n  outs.once('close', onClose);\n  ins.pipe(outs);\n\n  function onClose() {\n    fs.unlink(source, callback);\n  }\n}\n\nfunction moveDirAcrossDevice(source, dest, clobber, limit, callback) {\n  var options = {\n    stopOnErr: true,\n    clobber: false,\n    limit: limit\n  };\n\n  function startNcp() {\n    ncp(source, dest, options, function (errList) {\n      if (errList) return callback(errList[0]);\n      rimraf(source, callback);\n    });\n  }\n\n  if (clobber) {\n    rimraf(dest, function (err) {\n      if (err) return callback(err);\n      startNcp();\n    });\n  } else {\n    startNcp();\n  }\n}\n\nmodule.exports = {\n  move: mv\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/node_modules/fs-extra/lib/move/index.js"],"names":["fs","require","ncp","path","rimraf","mkdirp","mkdirs","mv","source","dest","options","callback","shouldMkdirp","clobber","limit","doRename","dirname","err","rename","code","setTimeout","moveAcrossDevice","link","unlink","stat","isDirectory","moveDirAcrossDevice","moveFileAcrossDevice","outFlags","ins","createReadStream","outs","createWriteStream","flags","on","destroy","removeListener","onClose","once","pipe","stopOnErr","startNcp","errList","module","exports","move"],"mappings":"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","sourcesContent":["// most of this code was written by Andrew Kelley\n// licensed under the BSD license: see\n// https://github.com/andrewrk/node-mv/blob/master/package.json\n\n// this needs a cleanup\n\nvar fs = require('graceful-fs')\nvar ncp = require('../copy/ncp')\nvar path = require('path')\nvar rimraf = require('rimraf')\nvar mkdirp = require('../mkdirs').mkdirs\n\nfunction mv (source, dest, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  var shouldMkdirp = ('mkdirp' in options) ? options.mkdirp : true\n  var clobber = ('clobber' in options) ? options.clobber : false\n\n  var limit = options.limit || 16\n\n  if (shouldMkdirp) {\n    mkdirs()\n  } else {\n    doRename()\n  }\n\n  function mkdirs () {\n    mkdirp(path.dirname(dest), function (err) {\n      if (err) return callback(err)\n      doRename()\n    })\n  }\n\n  function doRename () {\n    if (clobber) {\n      fs.rename(source, dest, function (err) {\n        if (!err) return callback()\n\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST') {\n          rimraf(dest, function (err) {\n            if (err) return callback(err)\n            options.clobber = false // just clobbered it, no need to do it again\n            mv(source, dest, options, callback)\n          })\n          return\n        }\n\n        // weird Windows shit\n        if (err.code === 'EPERM') {\n          setTimeout(function () {\n            rimraf(dest, function (err) {\n              if (err) return callback(err)\n              options.clobber = false\n              mv(source, dest, options, callback)\n            })\n          }, 200)\n          return\n        }\n\n        if (err.code !== 'EXDEV') return callback(err)\n        moveAcrossDevice(source, dest, clobber, limit, callback)\n      })\n    } else {\n      fs.link(source, dest, function (err) {\n        if (err) {\n          if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM') {\n            moveAcrossDevice(source, dest, clobber, limit, callback)\n            return\n          }\n          callback(err)\n          return\n        }\n        fs.unlink(source, callback)\n      })\n    }\n  }\n}\n\nfunction moveAcrossDevice (source, dest, clobber, limit, callback) {\n  fs.stat(source, function (err, stat) {\n    if (err) {\n      callback(err)\n      return\n    }\n\n    if (stat.isDirectory()) {\n      moveDirAcrossDevice(source, dest, clobber, limit, callback)\n    } else {\n      moveFileAcrossDevice(source, dest, clobber, limit, callback)\n    }\n  })\n}\n\nfunction moveFileAcrossDevice (source, dest, clobber, limit, callback) {\n  var outFlags = clobber ? 'w' : 'wx'\n  var ins = fs.createReadStream(source)\n  var outs = fs.createWriteStream(dest, {flags: outFlags})\n\n  ins.on('error', function (err) {\n    ins.destroy()\n    outs.destroy()\n    outs.removeListener('close', onClose)\n\n    // may want to create a directory but `out` line above\n    // creates an empty file for us: See #108\n    // don't care about error here\n    fs.unlink(dest, function () {\n      // note: `err` here is from the input stream errror\n      if (err.code === 'EISDIR' || err.code === 'EPERM') {\n        moveDirAcrossDevice(source, dest, clobber, limit, callback)\n      } else {\n        callback(err)\n      }\n    })\n  })\n\n  outs.on('error', function (err) {\n    ins.destroy()\n    outs.destroy()\n    outs.removeListener('close', onClose)\n    callback(err)\n  })\n\n  outs.once('close', onClose)\n  ins.pipe(outs)\n\n  function onClose () {\n    fs.unlink(source, callback)\n  }\n}\n\nfunction moveDirAcrossDevice (source, dest, clobber, limit, callback) {\n  var options = {\n    stopOnErr: true,\n    clobber: false,\n    limit: limit\n  }\n\n  function startNcp () {\n    ncp(source, dest, options, function (errList) {\n      if (errList) return callback(errList[0])\n      rimraf(source, callback)\n    })\n  }\n\n  if (clobber) {\n    rimraf(dest, function (err) {\n      if (err) return callback(err)\n      startNcp()\n    })\n  } else {\n    startNcp()\n  }\n}\n\nmodule.exports = {\n  move: mv\n}\n"]},"metadata":{},"sourceType":"script"}
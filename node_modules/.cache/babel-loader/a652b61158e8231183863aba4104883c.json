{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar clc = require(\"cli-color\");\n\nvar path = require(\"path\");\n\nvar semver = require(\"semver\");\n\nvar spawn = require(\"cross-spawn\");\n\nvar utils = require(\"./utils\");\n\nvar logger = require(\"./logger\");\n\nmodule.exports = function (options) {\n  return new Promise(function (resolve) {\n    if (!options.config.has(\"functions\")) {\n      return resolve();\n    }\n\n    try {\n      var output;\n      var child = spawn(\"npm\", [\"outdated\", \"firebase-functions\", \"--json=true\"], {\n        cwd: path.join(options.config.projectDir, options.config.get(\"functions.source\")),\n        stdio: [0, \"pipe\", 2]\n      });\n      child.on(\"error\", function (err) {\n        logger.debug(err.stack);\n        return resolve();\n      });\n      child.stdout.on(\"data\", function (data) {\n        output = JSON.parse(data.toString(\"utf8\"));\n      });\n      child.on(\"exit\", function () {\n        return resolve(output);\n      });\n    } catch (e) {\n      resolve();\n    }\n  }).then(function (output) {\n    if (!output || _.isEmpty(output)) {\n      return;\n    }\n\n    var wanted = output[\"firebase-functions\"].wanted;\n    var latest = output[\"firebase-functions\"].latest;\n\n    try {\n      if (semver.lt(wanted, latest)) {\n        utils.logWarning(clc.bold.yellow(\"functions: \") + \"package.json indicates an outdated version of firebase-functions.\\n Please upgrade using \" + clc.bold(\"npm install --save firebase-functions@latest\") + \" in your functions directory.\");\n\n        if (semver.satisfies(wanted, \"0.x\") && semver.satisfies(latest, \"1.x\")) {\n          utils.logWarning(clc.bold.yellow(\"functions: \") + \"Please note that there will be breaking changes when you upgrade.\\n Go to \" + clc.bold(\"https://firebase.google.com/docs/functions/beta-v1-diff\") + \" to learn more.\");\n        }\n      }\n    } catch (e) {}\n  });\n};","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/checkFirebaseSDKVersion.js"],"names":["_","require","clc","path","semver","spawn","utils","logger","module","exports","options","Promise","resolve","config","has","output","child","cwd","join","projectDir","get","stdio","on","err","debug","stack","stdout","data","JSON","parse","toString","e","then","isEmpty","wanted","latest","lt","logWarning","bold","yellow","satisfies"],"mappings":"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","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar clc = require(\"cli-color\");\nvar path = require(\"path\");\nvar semver = require(\"semver\");\nvar spawn = require(\"cross-spawn\");\nvar utils = require(\"./utils\");\nvar logger = require(\"./logger\");\nmodule.exports = function (options) {\n    return new Promise(function (resolve) {\n        if (!options.config.has(\"functions\")) {\n            return resolve();\n        }\n        try {\n            var output;\n            var child = spawn(\"npm\", [\"outdated\", \"firebase-functions\", \"--json=true\"], {\n                cwd: path.join(options.config.projectDir, options.config.get(\"functions.source\")),\n                stdio: [0, \"pipe\", 2],\n            });\n            child.on(\"error\", function (err) {\n                logger.debug(err.stack);\n                return resolve();\n            });\n            child.stdout.on(\"data\", function (data) {\n                output = JSON.parse(data.toString(\"utf8\"));\n            });\n            child.on(\"exit\", function () {\n                return resolve(output);\n            });\n        }\n        catch (e) {\n            resolve();\n        }\n    }).then(function (output) {\n        if (!output || _.isEmpty(output)) {\n            return;\n        }\n        var wanted = output[\"firebase-functions\"].wanted;\n        var latest = output[\"firebase-functions\"].latest;\n        try {\n            if (semver.lt(wanted, latest)) {\n                utils.logWarning(clc.bold.yellow(\"functions: \") +\n                    \"package.json indicates an outdated version of firebase-functions.\\n Please upgrade using \" +\n                    clc.bold(\"npm install --save firebase-functions@latest\") +\n                    \" in your functions directory.\");\n                if (semver.satisfies(wanted, \"0.x\") && semver.satisfies(latest, \"1.x\")) {\n                    utils.logWarning(clc.bold.yellow(\"functions: \") +\n                        \"Please note that there will be breaking changes when you upgrade.\\n Go to \" +\n                        clc.bold(\"https://firebase.google.com/docs/functions/beta-v1-diff\") +\n                        \" to learn more.\");\n                }\n            }\n        }\n        catch (e) {\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"script"}
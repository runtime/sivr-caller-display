{"ast":null,"code":"\"use strict\";\n\nvar clc = require(\"cli-color\");\n\nvar _require = require(\"../command\"),\n    Command = _require.Command;\n\nvar FirestoreDelete = require(\"../firestore/delete\");\n\nvar _require2 = require(\"../prompt\"),\n    prompt = _require2.prompt;\n\nvar _require3 = require(\"../requirePermissions\"),\n    requirePermissions = _require3.requirePermissions;\n\nvar utils = require(\"../utils\");\n\nvar _getConfirmationMessage = function (deleteOp, options) {\n  if (options.allCollections) {\n    return \"You are about to delete \" + clc.bold.yellow.underline(\"THE ENTIRE DATABASE\") + \" for \" + clc.cyan(options.project) + \". Are you sure?\";\n  }\n\n  if (deleteOp.isDocumentPath) {\n    if (options.recursive) {\n      return \"You are about to delete the document at \" + clc.cyan(deleteOp.path) + \" and all of its subcollections. Are you sure?\";\n    }\n\n    return \"You are about to delete the document at \" + clc.cyan(deleteOp.path) + \". Are you sure?\";\n  }\n\n  if (options.recursive) {\n    return \"You are about to delete all documents in the collection at \" + clc.cyan(deleteOp.path) + \" and all of their subcollections. \" + \"Are you sure?\";\n  }\n\n  return \"You are about to delete all documents in the collection at \" + clc.cyan(deleteOp.path) + \". Are you sure?\";\n};\n\nmodule.exports = new Command(\"firestore:delete [path]\").description(\"Delete data from Cloud Firestore.\").option(\"-r, --recursive\", \"Recursive. Delete all documents and subcollections. \" + \"Any action which would result in the deletion of child documents will fail if \" + \"this argument is not passed. May not be passed along with --shallow.\").option(\"--shallow\", \"Shallow. Delete only parent documents and ignore documents in \" + \"subcollections. Any action which would orphan documents will fail if this argument \" + \"is not passed. May not be passed along with -r.\").option(\"--all-collections\", \"Delete all. Deletes the entire Firestore database, \" + \"including all collections and documents. Any other flags or arguments will be ignored.\").option(\"-y, --yes\", \"No confirmation. Otherwise, a confirmation prompt will appear.\").before(requirePermissions, [\"datastore.entities.list\", \"datastore.entities.delete\"]).action(function (path, options) {\n  if (!path && !options.allCollections) {\n    return utils.reject(\"Must specify a path.\", {\n      exit: 1\n    });\n  }\n\n  var deleteOp = new FirestoreDelete(options.project, path, {\n    recursive: options.recursive,\n    shallow: options.shallow,\n    allCollections: options.allCollections\n  });\n  var checkPrompt;\n\n  if (options.yes) {\n    checkPrompt = Promise.resolve({\n      confirm: true\n    });\n  } else {\n    checkPrompt = prompt(options, [{\n      type: \"confirm\",\n      name: \"confirm\",\n      default: false,\n      message: _getConfirmationMessage(deleteOp, options)\n    }]);\n  }\n\n  return checkPrompt.then(function (res) {\n    if (!res.confirm) {\n      return utils.reject(\"Command aborted.\", {\n        exit: 1\n      });\n    }\n\n    if (options.allCollections) {\n      return deleteOp.deleteDatabase();\n    }\n\n    return deleteOp.execute();\n  });\n});","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/firestore-delete.js"],"names":["clc","require","Command","FirestoreDelete","prompt","requirePermissions","utils","_getConfirmationMessage","deleteOp","options","allCollections","bold","yellow","underline","cyan","project","isDocumentPath","recursive","path","module","exports","description","option","before","action","reject","exit","shallow","checkPrompt","yes","Promise","resolve","confirm","type","name","default","message","then","res","deleteDatabase","execute"],"mappings":"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","sourcesContent":["\"use strict\";\nvar clc = require(\"cli-color\");\nvar { Command } = require(\"../command\");\nvar FirestoreDelete = require(\"../firestore/delete\");\nvar { prompt } = require(\"../prompt\");\nvar { requirePermissions } = require(\"../requirePermissions\");\nvar utils = require(\"../utils\");\nvar _getConfirmationMessage = function (deleteOp, options) {\n    if (options.allCollections) {\n        return (\"You are about to delete \" +\n            clc.bold.yellow.underline(\"THE ENTIRE DATABASE\") +\n            \" for \" +\n            clc.cyan(options.project) +\n            \". Are you sure?\");\n    }\n    if (deleteOp.isDocumentPath) {\n        if (options.recursive) {\n            return (\"You are about to delete the document at \" +\n                clc.cyan(deleteOp.path) +\n                \" and all of its subcollections. Are you sure?\");\n        }\n        return \"You are about to delete the document at \" + clc.cyan(deleteOp.path) + \". Are you sure?\";\n    }\n    if (options.recursive) {\n        return (\"You are about to delete all documents in the collection at \" +\n            clc.cyan(deleteOp.path) +\n            \" and all of their subcollections. \" +\n            \"Are you sure?\");\n    }\n    return (\"You are about to delete all documents in the collection at \" +\n        clc.cyan(deleteOp.path) +\n        \". Are you sure?\");\n};\nmodule.exports = new Command(\"firestore:delete [path]\")\n    .description(\"Delete data from Cloud Firestore.\")\n    .option(\"-r, --recursive\", \"Recursive. Delete all documents and subcollections. \" +\n    \"Any action which would result in the deletion of child documents will fail if \" +\n    \"this argument is not passed. May not be passed along with --shallow.\")\n    .option(\"--shallow\", \"Shallow. Delete only parent documents and ignore documents in \" +\n    \"subcollections. Any action which would orphan documents will fail if this argument \" +\n    \"is not passed. May not be passed along with -r.\")\n    .option(\"--all-collections\", \"Delete all. Deletes the entire Firestore database, \" +\n    \"including all collections and documents. Any other flags or arguments will be ignored.\")\n    .option(\"-y, --yes\", \"No confirmation. Otherwise, a confirmation prompt will appear.\")\n    .before(requirePermissions, [\"datastore.entities.list\", \"datastore.entities.delete\"])\n    .action(function (path, options) {\n    if (!path && !options.allCollections) {\n        return utils.reject(\"Must specify a path.\", { exit: 1 });\n    }\n    var deleteOp = new FirestoreDelete(options.project, path, {\n        recursive: options.recursive,\n        shallow: options.shallow,\n        allCollections: options.allCollections,\n    });\n    var checkPrompt;\n    if (options.yes) {\n        checkPrompt = Promise.resolve({ confirm: true });\n    }\n    else {\n        checkPrompt = prompt(options, [\n            {\n                type: \"confirm\",\n                name: \"confirm\",\n                default: false,\n                message: _getConfirmationMessage(deleteOp, options),\n            },\n        ]);\n    }\n    return checkPrompt.then(function (res) {\n        if (!res.confirm) {\n            return utils.reject(\"Command aborted.\", { exit: 1 });\n        }\n        if (options.allCollections) {\n            return deleteOp.deleteDatabase();\n        }\n        return deleteOp.execute();\n    });\n});\n"]},"metadata":{},"sourceType":"script"}
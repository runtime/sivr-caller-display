{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst command_1 = require(\"../command\");\n\nconst error_1 = require(\"../error\");\n\nconst projects_1 = require(\"../management/projects\");\n\nconst prompt_1 = require(\"../prompt\");\n\nconst requireAuth = require(\"../requireAuth\");\n\nmodule.exports = new command_1.Command(\"projects:create [projectId]\").description(\"create a new firebase project\").option(\"-n, --display-name <displayName>\", \"(optional) display name for the project\").option(\"-o, --organization <organizationId>\", \"(optional) ID of the parent Google Cloud Platform organization under which to create this project\").option(\"-f, --folder <folderId>\", \"(optional) ID of the parent Google Cloud Platform folder in which to create this project\").before(requireAuth).action((projectId, options) => __awaiter(this, void 0, void 0, function* () {\n  options.projectId = projectId;\n\n  if (options.organization && options.folder) {\n    throw new error_1.FirebaseError(\"Invalid argument, please provide only one type of project parent (organization or folder)\");\n  }\n\n  if (!options.nonInteractive) {\n    yield prompt_1.prompt(options, projects_1.PROJECTS_CREATE_QUESTIONS);\n  }\n\n  if (!options.projectId) {\n    throw new error_1.FirebaseError(\"Project ID cannot be empty\");\n  }\n\n  let parentResource;\n\n  if (options.organization) {\n    parentResource = {\n      type: projects_1.ProjectParentResourceType.ORGANIZATION,\n      id: options.organization\n    };\n  } else if (options.folder) {\n    parentResource = {\n      type: projects_1.ProjectParentResourceType.FOLDER,\n      id: options.folder\n    };\n  }\n\n  return projects_1.createFirebaseProjectAndLog(options.projectId, {\n    displayName: options.displayName,\n    parentResource\n  });\n}));","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/commands/projects-create.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","command_1","require","error_1","projects_1","prompt_1","requireAuth","module","Command","description","option","before","action","projectId","options","organization","folder","FirebaseError","nonInteractive","prompt","PROJECTS_CREATE_QUESTIONS","parentResource","type","ProjectParentResourceType","ORGANIZATION","id","FOLDER","createFirebaseProjectAndLog","displayName"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"../command\");\nconst error_1 = require(\"../error\");\nconst projects_1 = require(\"../management/projects\");\nconst prompt_1 = require(\"../prompt\");\nconst requireAuth = require(\"../requireAuth\");\nmodule.exports = new command_1.Command(\"projects:create [projectId]\")\n    .description(\"create a new firebase project\")\n    .option(\"-n, --display-name <displayName>\", \"(optional) display name for the project\")\n    .option(\"-o, --organization <organizationId>\", \"(optional) ID of the parent Google Cloud Platform organization under which to create this project\")\n    .option(\"-f, --folder <folderId>\", \"(optional) ID of the parent Google Cloud Platform folder in which to create this project\")\n    .before(requireAuth)\n    .action((projectId, options) => __awaiter(this, void 0, void 0, function* () {\n    options.projectId = projectId;\n    if (options.organization && options.folder) {\n        throw new error_1.FirebaseError(\"Invalid argument, please provide only one type of project parent (organization or folder)\");\n    }\n    if (!options.nonInteractive) {\n        yield prompt_1.prompt(options, projects_1.PROJECTS_CREATE_QUESTIONS);\n    }\n    if (!options.projectId) {\n        throw new error_1.FirebaseError(\"Project ID cannot be empty\");\n    }\n    let parentResource;\n    if (options.organization) {\n        parentResource = { type: projects_1.ProjectParentResourceType.ORGANIZATION, id: options.organization };\n    }\n    else if (options.folder) {\n        parentResource = { type: projects_1.ProjectParentResourceType.FOLDER, id: options.folder };\n    }\n    return projects_1.createFirebaseProjectAndLog(options.projectId, {\n        displayName: options.displayName,\n        parentResource,\n    });\n}));\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst types_1 = require(\"../emulator/types\");\n\nconst constants_1 = require(\"../emulator/constants\");\n\nconst error_1 = require(\"../error\");\n\nconst childProcess = require(\"child_process\");\n\nconst utils = require(\"../utils\");\n\nconst logger = require(\"../logger\");\n\nconst clc = require(\"cli-color\");\n\nconst fs = require(\"fs-extra\");\n\nconst path = require(\"path\");\n\nconst os = require(\"os\");\n\nconst downloadEmulator = require(\"../emulator/download\");\n\nconst EMULATOR_INSTANCE_KILL_TIMEOUT = 2000;\nconst CACHE_DIR = process.env.FIREBASE_EMULATORS_PATH || path.join(os.homedir(), \".cache\", \"firebase\", \"emulators\");\nconst DownloadDetails = {\n  database: {\n    downloadPath: path.join(CACHE_DIR, \"firebase-database-emulator-v4.3.1.jar\"),\n    opts: {\n      cacheDir: CACHE_DIR,\n      remoteUrl: \"https://storage.googleapis.com/firebase-preview-drop/emulator/firebase-database-emulator-v4.3.1.jar\",\n      expectedSize: 27893859,\n      expectedChecksum: \"7d84e76144093406331571969f30444e\",\n      namePrefix: \"firebase-database-emulator\"\n    }\n  },\n  firestore: {\n    downloadPath: path.join(CACHE_DIR, \"cloud-firestore-emulator-v1.10.2.jar\"),\n    opts: {\n      cacheDir: CACHE_DIR,\n      remoteUrl: \"https://storage.googleapis.com/firebase-preview-drop/emulator/cloud-firestore-emulator-v1.10.2.jar\",\n      expectedSize: 63708915,\n      expectedChecksum: \"d101a23eea4c6cdc5bcf5a7ef32dc6e5\",\n      namePrefix: \"cloud-firestore-emulator\"\n    }\n  },\n  pubsub: {\n    downloadPath: path.join(CACHE_DIR, \"pubsub-emulator-0.1.0.zip\"),\n    unzipDir: path.join(CACHE_DIR, \"pubsub-emulator-0.1.0\"),\n    binaryPath: path.join(CACHE_DIR, \"pubsub-emulator-0.1.0\", `pubsub-emulator/bin/cloud-pubsub-emulator${process.platform === \"win32\" ? \".bat\" : \"\"}`),\n    opts: {\n      cacheDir: CACHE_DIR,\n      remoteUrl: \"https://storage.googleapis.com/firebase-preview-drop/emulator/pubsub-emulator-0.1.0.zip\",\n      expectedSize: 36623622,\n      expectedChecksum: \"81704b24737d4968734d3e175f4cde71\",\n      namePrefix: \"pubsub-emulator\"\n    }\n  }\n};\nconst EmulatorDetails = {\n  database: {\n    name: types_1.Emulators.DATABASE,\n    instance: null,\n    stdout: null\n  },\n  firestore: {\n    name: types_1.Emulators.FIRESTORE,\n    instance: null,\n    stdout: null\n  },\n  pubsub: {\n    name: types_1.Emulators.PUBSUB,\n    instance: null,\n    stdout: null\n  }\n};\nconst Commands = {\n  database: {\n    binary: \"java\",\n    args: [\"-Duser.language=en\", \"-jar\", getExecPath(types_1.Emulators.DATABASE)],\n    optionalArgs: [\"port\", \"host\", \"functions_emulator_port\", \"functions_emulator_host\"],\n    joinArgs: false\n  },\n  firestore: {\n    binary: \"java\",\n    args: [\"-Duser.language=en\", \"-jar\", getExecPath(types_1.Emulators.FIRESTORE)],\n    optionalArgs: [\"port\", \"webchannel_port\", \"host\", \"rules\", \"functions_emulator\"],\n    joinArgs: false\n  },\n  pubsub: {\n    binary: getExecPath(types_1.Emulators.PUBSUB),\n    args: [],\n    optionalArgs: [\"port\", \"host\"],\n    joinArgs: true\n  }\n};\n\nfunction getExecPath(name) {\n  const details = getDownloadDetails(name);\n  return details.binaryPath || details.downloadPath;\n}\n\nfunction _getLogFileName(name) {\n  return `${name}-debug.log`;\n}\n\nfunction _getCommand(emulator, args) {\n  const baseCmd = Commands[emulator];\n  const defaultPort = constants_1.Constants.getDefaultPort(emulator);\n\n  if (!args.port) {\n    args.port = defaultPort;\n  }\n\n  const cmdLineArgs = baseCmd.args.slice();\n  Object.keys(args).forEach(key => {\n    if (baseCmd.optionalArgs.indexOf(key) < 0) {\n      logger.debug(`Ignoring unsupported arg: ${key}`);\n      return;\n    }\n\n    const argKey = \"--\" + key;\n    const argVal = args[key];\n\n    if (argVal === undefined) {\n      logger.debug(`Ignoring empty arg for key: ${key}`);\n      return;\n    }\n\n    if (baseCmd.joinArgs) {\n      cmdLineArgs.push(`${argKey}=${argVal}`);\n    } else {\n      cmdLineArgs.push(argKey, argVal);\n    }\n  });\n  return {\n    binary: baseCmd.binary,\n    args: cmdLineArgs,\n    optionalArgs: baseCmd.optionalArgs,\n    joinArgs: baseCmd.joinArgs\n  };\n}\n\nfunction _fatal(emulator, errorMsg) {\n  if (emulator.instance) {\n    emulator.instance.kill(\"SIGINT\");\n  }\n\n  throw new error_1.FirebaseError(emulator.name + \": \" + errorMsg, {\n    exit: 1\n  });\n}\n\nfunction _runBinary(emulator, command) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise(resolve => {\n      emulator.stdout = fs.createWriteStream(_getLogFileName(emulator.name));\n\n      try {\n        emulator.instance = childProcess.spawn(command.binary, command.args, {\n          stdio: [\"inherit\", \"pipe\", \"pipe\"]\n        });\n      } catch (e) {\n        if (e.code === \"EACCES\") {\n          utils.logLabeledWarning(emulator.name, `Could not spawn child process for emulator, check that java is installed and on your $PATH.`);\n        }\n\n        _fatal(emulator, e);\n      }\n\n      if (emulator.instance == null) {\n        utils.logLabeledWarning(emulator.name, \"Could not spawn child process for emulator.\");\n        return;\n      }\n\n      utils.logLabeledBullet(emulator.name, `Emulator logging to ${clc.bold(_getLogFileName(emulator.name))}`);\n      emulator.instance.stdout.on(\"data\", data => {\n        logger.debug(data.toString());\n        emulator.stdout.write(data);\n      });\n      emulator.instance.stderr.on(\"data\", data => {\n        logger.debug(data.toString());\n        emulator.stdout.write(data);\n      });\n      emulator.instance.on(\"error\", err => {\n        if (err.path === \"java\" && err.code === \"ENOENT\") {\n          _fatal(emulator, \"emulator has exited because java is not installed, you can install it from https://openjdk.java.net/install/\");\n        } else {\n          _fatal(emulator, \"emulator has exited: \" + err);\n        }\n      });\n      emulator.instance.once(\"exit\", (code, signal) => {\n        if (signal) {\n          utils.logWarning(`${emulator.name} emulator has exited upon receiving signal: ${signal}`);\n        } else if (code && code !== 0 && code !== 130) {\n          _fatal(emulator, `emulator has exited with code: ${code}`);\n        }\n      });\n      resolve();\n    });\n  });\n}\n\nfunction getDownloadDetails(emulator) {\n  return DownloadDetails[emulator];\n}\n\nexports.getDownloadDetails = getDownloadDetails;\n\nfunction get(emulator) {\n  return EmulatorDetails[emulator];\n}\n\nexports.get = get;\n\nfunction stop(targetName) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const emulator = EmulatorDetails[targetName];\n    return new Promise((resolve, reject) => {\n      if (emulator.instance) {\n        const killTimeout = setTimeout(() => {\n          const pid = emulator.instance ? emulator.instance.pid : -1;\n          const errorMsg = emulator.name + \": Unable to terminate emulator process (PID=\" + pid + \")\";\n          logger.debug(errorMsg);\n          reject(new error_1.FirebaseError(emulator.name + \": \" + errorMsg));\n        }, EMULATOR_INSTANCE_KILL_TIMEOUT);\n        emulator.instance.once(\"exit\", () => {\n          clearTimeout(killTimeout);\n          resolve();\n        });\n        emulator.instance.kill(\"SIGINT\");\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexports.stop = stop;\n\nfunction downloadIfNecessary(targetName) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const hasEmulator = fs.existsSync(getExecPath(targetName));\n\n    if (hasEmulator) {\n      return;\n    }\n\n    yield downloadEmulator(targetName);\n  });\n}\n\nexports.downloadIfNecessary = downloadIfNecessary;\n\nfunction start(targetName, args) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const downloadDetails = DownloadDetails[targetName];\n    const emulator = EmulatorDetails[targetName];\n    const hasEmulator = fs.existsSync(getExecPath(targetName));\n\n    if (!hasEmulator) {\n      if (args.auto_download) {\n        if (process.env.CI) {\n          utils.logWarning(`It appears you are running in a CI environment. You can avoid downloading the ${targetName} emulator repeatedly by caching the ${downloadDetails.opts.cacheDir} directory.`);\n        }\n\n        yield downloadEmulator(targetName);\n      } else {\n        utils.logWarning(\"Setup required, please run: firebase setup:emulators:\" + targetName);\n        throw new error_1.FirebaseError(\"emulator not found\");\n      }\n    }\n\n    const command = _getCommand(targetName, args);\n\n    logger.debug(`Starting emulator ${targetName} with command ${JSON.stringify(command)}`);\n    return _runBinary(emulator, command);\n  });\n}\n\nexports.start = start;","map":{"version":3,"sources":["/Users/Erik.Kroha1/Jobs/Verizon/Talk Home/sivr-caller-display/node_modules/firebase-tools/lib/serve/javaEmulators.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","types_1","require","constants_1","error_1","childProcess","utils","logger","clc","fs","path","os","downloadEmulator","EMULATOR_INSTANCE_KILL_TIMEOUT","CACHE_DIR","process","env","FIREBASE_EMULATORS_PATH","join","homedir","DownloadDetails","database","downloadPath","opts","cacheDir","remoteUrl","expectedSize","expectedChecksum","namePrefix","firestore","pubsub","unzipDir","binaryPath","platform","EmulatorDetails","name","Emulators","DATABASE","instance","stdout","FIRESTORE","PUBSUB","Commands","binary","args","getExecPath","optionalArgs","joinArgs","details","getDownloadDetails","_getLogFileName","_getCommand","emulator","baseCmd","defaultPort","Constants","getDefaultPort","port","cmdLineArgs","slice","keys","forEach","key","indexOf","debug","argKey","argVal","undefined","push","_fatal","errorMsg","kill","FirebaseError","exit","_runBinary","command","createWriteStream","spawn","stdio","code","logLabeledWarning","logLabeledBullet","bold","on","data","toString","write","stderr","err","once","signal","logWarning","get","stop","targetName","killTimeout","setTimeout","pid","clearTimeout","downloadIfNecessary","hasEmulator","existsSync","start","downloadDetails","auto_download","CI","JSON","stringify"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"../emulator/types\");\nconst constants_1 = require(\"../emulator/constants\");\nconst error_1 = require(\"../error\");\nconst childProcess = require(\"child_process\");\nconst utils = require(\"../utils\");\nconst logger = require(\"../logger\");\nconst clc = require(\"cli-color\");\nconst fs = require(\"fs-extra\");\nconst path = require(\"path\");\nconst os = require(\"os\");\nconst downloadEmulator = require(\"../emulator/download\");\nconst EMULATOR_INSTANCE_KILL_TIMEOUT = 2000;\nconst CACHE_DIR = process.env.FIREBASE_EMULATORS_PATH || path.join(os.homedir(), \".cache\", \"firebase\", \"emulators\");\nconst DownloadDetails = {\n    database: {\n        downloadPath: path.join(CACHE_DIR, \"firebase-database-emulator-v4.3.1.jar\"),\n        opts: {\n            cacheDir: CACHE_DIR,\n            remoteUrl: \"https://storage.googleapis.com/firebase-preview-drop/emulator/firebase-database-emulator-v4.3.1.jar\",\n            expectedSize: 27893859,\n            expectedChecksum: \"7d84e76144093406331571969f30444e\",\n            namePrefix: \"firebase-database-emulator\",\n        },\n    },\n    firestore: {\n        downloadPath: path.join(CACHE_DIR, \"cloud-firestore-emulator-v1.10.2.jar\"),\n        opts: {\n            cacheDir: CACHE_DIR,\n            remoteUrl: \"https://storage.googleapis.com/firebase-preview-drop/emulator/cloud-firestore-emulator-v1.10.2.jar\",\n            expectedSize: 63708915,\n            expectedChecksum: \"d101a23eea4c6cdc5bcf5a7ef32dc6e5\",\n            namePrefix: \"cloud-firestore-emulator\",\n        },\n    },\n    pubsub: {\n        downloadPath: path.join(CACHE_DIR, \"pubsub-emulator-0.1.0.zip\"),\n        unzipDir: path.join(CACHE_DIR, \"pubsub-emulator-0.1.0\"),\n        binaryPath: path.join(CACHE_DIR, \"pubsub-emulator-0.1.0\", `pubsub-emulator/bin/cloud-pubsub-emulator${process.platform === \"win32\" ? \".bat\" : \"\"}`),\n        opts: {\n            cacheDir: CACHE_DIR,\n            remoteUrl: \"https://storage.googleapis.com/firebase-preview-drop/emulator/pubsub-emulator-0.1.0.zip\",\n            expectedSize: 36623622,\n            expectedChecksum: \"81704b24737d4968734d3e175f4cde71\",\n            namePrefix: \"pubsub-emulator\",\n        },\n    },\n};\nconst EmulatorDetails = {\n    database: {\n        name: types_1.Emulators.DATABASE,\n        instance: null,\n        stdout: null,\n    },\n    firestore: {\n        name: types_1.Emulators.FIRESTORE,\n        instance: null,\n        stdout: null,\n    },\n    pubsub: {\n        name: types_1.Emulators.PUBSUB,\n        instance: null,\n        stdout: null,\n    },\n};\nconst Commands = {\n    database: {\n        binary: \"java\",\n        args: [\"-Duser.language=en\", \"-jar\", getExecPath(types_1.Emulators.DATABASE)],\n        optionalArgs: [\"port\", \"host\", \"functions_emulator_port\", \"functions_emulator_host\"],\n        joinArgs: false,\n    },\n    firestore: {\n        binary: \"java\",\n        args: [\"-Duser.language=en\", \"-jar\", getExecPath(types_1.Emulators.FIRESTORE)],\n        optionalArgs: [\"port\", \"webchannel_port\", \"host\", \"rules\", \"functions_emulator\"],\n        joinArgs: false,\n    },\n    pubsub: {\n        binary: getExecPath(types_1.Emulators.PUBSUB),\n        args: [],\n        optionalArgs: [\"port\", \"host\"],\n        joinArgs: true,\n    },\n};\nfunction getExecPath(name) {\n    const details = getDownloadDetails(name);\n    return details.binaryPath || details.downloadPath;\n}\nfunction _getLogFileName(name) {\n    return `${name}-debug.log`;\n}\nfunction _getCommand(emulator, args) {\n    const baseCmd = Commands[emulator];\n    const defaultPort = constants_1.Constants.getDefaultPort(emulator);\n    if (!args.port) {\n        args.port = defaultPort;\n    }\n    const cmdLineArgs = baseCmd.args.slice();\n    Object.keys(args).forEach((key) => {\n        if (baseCmd.optionalArgs.indexOf(key) < 0) {\n            logger.debug(`Ignoring unsupported arg: ${key}`);\n            return;\n        }\n        const argKey = \"--\" + key;\n        const argVal = args[key];\n        if (argVal === undefined) {\n            logger.debug(`Ignoring empty arg for key: ${key}`);\n            return;\n        }\n        if (baseCmd.joinArgs) {\n            cmdLineArgs.push(`${argKey}=${argVal}`);\n        }\n        else {\n            cmdLineArgs.push(argKey, argVal);\n        }\n    });\n    return {\n        binary: baseCmd.binary,\n        args: cmdLineArgs,\n        optionalArgs: baseCmd.optionalArgs,\n        joinArgs: baseCmd.joinArgs,\n    };\n}\nfunction _fatal(emulator, errorMsg) {\n    if (emulator.instance) {\n        emulator.instance.kill(\"SIGINT\");\n    }\n    throw new error_1.FirebaseError(emulator.name + \": \" + errorMsg, { exit: 1 });\n}\nfunction _runBinary(emulator, command) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => {\n            emulator.stdout = fs.createWriteStream(_getLogFileName(emulator.name));\n            try {\n                emulator.instance = childProcess.spawn(command.binary, command.args, {\n                    stdio: [\"inherit\", \"pipe\", \"pipe\"],\n                });\n            }\n            catch (e) {\n                if (e.code === \"EACCES\") {\n                    utils.logLabeledWarning(emulator.name, `Could not spawn child process for emulator, check that java is installed and on your $PATH.`);\n                }\n                _fatal(emulator, e);\n            }\n            if (emulator.instance == null) {\n                utils.logLabeledWarning(emulator.name, \"Could not spawn child process for emulator.\");\n                return;\n            }\n            utils.logLabeledBullet(emulator.name, `Emulator logging to ${clc.bold(_getLogFileName(emulator.name))}`);\n            emulator.instance.stdout.on(\"data\", (data) => {\n                logger.debug(data.toString());\n                emulator.stdout.write(data);\n            });\n            emulator.instance.stderr.on(\"data\", (data) => {\n                logger.debug(data.toString());\n                emulator.stdout.write(data);\n            });\n            emulator.instance.on(\"error\", (err) => {\n                if (err.path === \"java\" && err.code === \"ENOENT\") {\n                    _fatal(emulator, \"emulator has exited because java is not installed, you can install it from https://openjdk.java.net/install/\");\n                }\n                else {\n                    _fatal(emulator, \"emulator has exited: \" + err);\n                }\n            });\n            emulator.instance.once(\"exit\", (code, signal) => {\n                if (signal) {\n                    utils.logWarning(`${emulator.name} emulator has exited upon receiving signal: ${signal}`);\n                }\n                else if (code && code !== 0 && code !== 130) {\n                    _fatal(emulator, `emulator has exited with code: ${code}`);\n                }\n            });\n            resolve();\n        });\n    });\n}\nfunction getDownloadDetails(emulator) {\n    return DownloadDetails[emulator];\n}\nexports.getDownloadDetails = getDownloadDetails;\nfunction get(emulator) {\n    return EmulatorDetails[emulator];\n}\nexports.get = get;\nfunction stop(targetName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const emulator = EmulatorDetails[targetName];\n        return new Promise((resolve, reject) => {\n            if (emulator.instance) {\n                const killTimeout = setTimeout(() => {\n                    const pid = emulator.instance ? emulator.instance.pid : -1;\n                    const errorMsg = emulator.name + \": Unable to terminate emulator process (PID=\" + pid + \")\";\n                    logger.debug(errorMsg);\n                    reject(new error_1.FirebaseError(emulator.name + \": \" + errorMsg));\n                }, EMULATOR_INSTANCE_KILL_TIMEOUT);\n                emulator.instance.once(\"exit\", () => {\n                    clearTimeout(killTimeout);\n                    resolve();\n                });\n                emulator.instance.kill(\"SIGINT\");\n            }\n            else {\n                resolve();\n            }\n        });\n    });\n}\nexports.stop = stop;\nfunction downloadIfNecessary(targetName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const hasEmulator = fs.existsSync(getExecPath(targetName));\n        if (hasEmulator) {\n            return;\n        }\n        yield downloadEmulator(targetName);\n    });\n}\nexports.downloadIfNecessary = downloadIfNecessary;\nfunction start(targetName, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const downloadDetails = DownloadDetails[targetName];\n        const emulator = EmulatorDetails[targetName];\n        const hasEmulator = fs.existsSync(getExecPath(targetName));\n        if (!hasEmulator) {\n            if (args.auto_download) {\n                if (process.env.CI) {\n                    utils.logWarning(`It appears you are running in a CI environment. You can avoid downloading the ${targetName} emulator repeatedly by caching the ${downloadDetails.opts.cacheDir} directory.`);\n                }\n                yield downloadEmulator(targetName);\n            }\n            else {\n                utils.logWarning(\"Setup required, please run: firebase setup:emulators:\" + targetName);\n                throw new error_1.FirebaseError(\"emulator not found\");\n            }\n        }\n        const command = _getCommand(targetName, args);\n        logger.debug(`Starting emulator ${targetName} with command ${JSON.stringify(command)}`);\n        return _runBinary(emulator, command);\n    });\n}\nexports.start = start;\n"]},"metadata":{},"sourceType":"script"}